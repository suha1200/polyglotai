{"pack_id": "french_pack", "section_title": "Table des matières", "page": 1, "chunk_id": "french_pack_1_0", "content": "1 ’ SECTION D INFORMATIQUE DE L'ECOLE POLYTECHNIQUE FEDERALE DE LAUSANNE 2020 - 2021 ANNEE ACADEMIQUE TABLE DES MATIERES Page Ordonnance sur le contrôle des études menant au bachelor et au master …………………….. 3 Plan d’études ………………………………………………………………………………….............13 - Cycle propédeutique …………….................................................................................. 14 - Cycle Bachelor ……………………...............................................................................15 - Cycle Master……………………………………………………………………………16 et 17 Liste des spécialisations et mineurs ..................................................................................18 à 23 Règlement d'application du contrôle des études…………………………………………….. 24 à 26 Passerelle HES ………………………………………………………………………………………..27 Règlement d’application du contrôle des études concernant la Passerelle HES-EPFL……….28 Descriptifs des enseignements de la section d’Informatique - Cycle propédeutique (1ère année)……………..................................................... 31 à 63 - Cycle Bachelor (2ème et 3ème année)…..……………………………………………67 à 160 - Cycle Master…………………………………………………………………………163 à 318 Index des cours (par ordre alphabétique …………………………………………………..319 Index par enseignants-es (par ordre alphabétique)………………………………………………322 Le livret des cours est aussi disponible depuis l’adresse internet de la section : https://www.epfl.ch/schools/ic/fr/education-fr/livrets-cours/"}
{"pack_id": "french_pack", "section_title": "Ordonnance sur le contrôle des études menant au bachelor et au master", "page": 3, "chunk_id": "french_pack_3_0", "content": "3 414.132.2 Ordonnance sur le contrôle des études menant au bachelor et au master à l’École polytechnique fédérale de Lausanne (Ordonnance sur le contrôle des études à l’EPFL) du 30 juin 2015 (Etat le 15 septembre 2019) La Direction de l’École polytechnique fédérale de Lausanne (Direction de l’EPFL), vu l’art. 3, al. 1, let. b, de l’ordonnance du 13 novembre 2003 sur l’EPFZ et l’EPFL1, arrête: Chapitre 1 Dispositions générales Section 1 Objet et champ d’application Art. 1 Objet La présente ordonnance arrête les règles de base du contrôle des études à l’EPFL. Art. 2 Champ d’application 1 La présente ordonnance s’applique à la formation menant au bachelor et au master de l’EPFL. 2 Dans la mesure où la direction de l’EPFL n’a pas édicté de règles particulières, les art. 8, 10, 12, 14, 15 et 18 à 20 s’appliquent également: a. aux examens d’admission; b. aux examens du cours de mathématiques spéciales (CMS); c. aux examens du cours de mise à niveau; d. aux examens de doctorat; e. aux examens des programmes doctoraux; f. aux examens de la formation continue et de la formation approfondie. Section 2 Définitions générales Art. 3 Branche 1 Une branche est une matière d’enseignement faisant l’objet d’une ou de plusieurs épreuves. RO 2015 2525 1 RS 414.110.37 1"}
{"pack_id": "french_pack", "section_title": "Ordonnance sur le contrôle des études menant au bachelor et au master", "page": 4, "chunk_id": "french_pack_4_0", "content": "4 414.132.2 Haute école 2 Une branche dite de semestre est une branche dont les épreuves se déroulent pen- dant la période de cours. 3 Une branche dite de session est une branche dont une épreuve se déroule en ses- sion d’examens. Elle peut comporter des épreuves se déroulant pendant la période de cours. 4 Une branche de semestre peut consister en un stage. Art. 4 Crédits et coefficients À toute branche est associé un nombre de crédits ECTS (European Credit Transfer and Accumulation System) (crédits) ou, pour le cycle propédeutique, un coefficient, qui indiquent son poids dans la formation. Section 3 Dispositions communes aux études de bachelor et de master Art. 5 Plans d’études et règlements d’application Des plans d’études et des règlements d’application sont édictés pour chaque cycle d’études de chaque domaine. Ils définissent en particulier: a. les branches de semestre et les branches de session; b. le semestre ou la session pendant lesquels ces branches peuvent être présen- tées; c. la forme (écrite ou orale) de l’épreuve en session; d. la composition des blocs et des groupes de branches; e. les coefficients ou les crédits attribués à chaque branche; f. le nombre de crédits ou le coefficient à acquérir dans chaque bloc et chaque groupe; g. les conditions applicables aux prérequis (art. 25); h. les conditions de réussite particulières; i. les études d’approfondissement, de spécialisation ou interdisciplinaires; j. les éventuels régimes transitoires applicables aux modifications des plans d’études et des règlements d’application. Art. 6 Blocs et groupes de branches 1 Les branches sont rassemblées en bloc ou en groupe. Chaque branche ne peut faire partie que d’un seul bloc ou d’un seul groupe. Un bloc peut être constitué d’une seule branche. 2"}
{"pack_id": "french_pack", "section_title": "Ordonnance sur le contrôle des études menant au bachelor et au master", "page": 5, "chunk_id": "french_pack_5_0", "content": "5 O sur le contrôle des études à l’EPFL 414.132.2 2 Un bloc est réputé réussi: a. lorsque la somme des crédits acquis par branche est égale ou supérieure au nombre requis, ou b.2 lorsque la somme des crédits pour les branches présentées atteint le nombre requis et que la moyenne du bloc (art. 8, al. 5) est égale ou supérieure à 4,00; dans ce cas, la totalité des crédits des branches présentées est acquise. 3 Un groupe est réputé réussi lorsque les crédits acquis des branches qui le compo- sent ont été accumulés jusqu’au nombre requis; aucune compensation n’est possible entre les notes des branches du groupe.3 Art. 7 Fiches de cours Les fiches de cours publiées indiquent en particulier, pour chaque branche: a. les objectifs de formation; b. un bref descriptif de la matière; c. les épreuves composant la note finale, avec leur pondération et leur forme; d. les éventuels prérequis (art. 25); e. la langue d’enseignement. Art. 8 Notation 1 Une épreuve est notée de 1,00 à 6,00. Les notes en dessous de 4,00 sanctionnent des prestations insuffisantes. L’épreuve est notée 0 lorsque l’étudiant ne se présente pas, ne répond à aucune question ou ne respecte pas les délais. 2 La note finale de la branche se compose des notes de ses épreuves. Elle est arrêtée au quart de point. Lorsqu’elle est inférieure à 1,00, la branche est considérée comme non acquise et notée NA (non acquis). L’appréciation NA compte comme tentative de réussite. 3 Le règlement d’application peut prévoir qu’une branche est notée au moyen des appréciations R (réussi) ou E (échec). 4 Lorsque la branche est répétée, la note retenue est celle de la seconde tentative. 5 Les moyennes sont calculées en pondérant chaque note finale chiffrée de branche par son coefficient ou son nombre de crédits. Elles sont arrêtées au centième. Les appréciations NA et E empêchent l’obtention d’une moyenne, sauf dans les cas visés à l’art. 6, al. 2, let. b, et 3. 2 Nouvelle teneur selon le ch. I de l’O de la Direction de l’EPFL du 20 août 2019, en vigueur"}
{"pack_id": "french_pack", "section_title": "Ordonnance sur le contrôle des études menant au bachelor et au master", "page": 5, "chunk_id": "french_pack_5_1", "content": "finale chiffrée de branche par son coefficient ou son nombre de crédits. Elles sont arrêtées au centième. Les appréciations NA et E empêchent l’obtention d’une moyenne, sauf dans les cas visés à l’art. 6, al. 2, let. b, et 3. 2 Nouvelle teneur selon le ch. I de l’O de la Direction de l’EPFL du 20 août 2019, en vigueur depuis le 15 sept. 2019 (RO 2019 2641). 3 Nouvelle teneur selon le ch. I de l’O de la Direction de l’EPFL du 20 août 2019, en vigueur depuis le 15 sept. 2019 (RO 2019 2641). 3"}
{"pack_id": "french_pack", "section_title": "Ordonnance sur le contrôle des études menant au bachelor et au master", "page": 6, "chunk_id": "french_pack_6_0", "content": "6 414.132.2 Haute école Art. 9 Organisation des sessions et des épreuves et inscriptions aux branches 1 Deux sessions d’examens sont organisées par année académique. Elles ont lieu entre les semestres. 2 Les délais d’inscription aux branches, les délais de retrait, les horaires et les dates des épreuves, ainsi que les autres modalités sont communiqués aux étudiants. 3 À l’échéance des délais, les inscriptions aux branches et les retraits sont définitifs. 4 Lorsque l’étudiant répète une branche, celle-ci est régie par les dispositions en vigueur au moment de la répétition, à moins que l’école n’en ait disposé autrement. Art. 10 Incapacité 1 L’étudiant qui se prévaut d’un motif d’incapacité à se présenter à une épreuve doit l’annoncer à l’école dès la survenance de ce motif. 2 Il lui présente en outre les pièces justificatives au plus tard trois jours après la survenance du motif d’incapacité. Par pièces justificatives, on entend notamment un certificat médical ou une attestation d’une obligation légale de servir. 3 Invoquer un motif d’incapacité après s’être présenté à l’épreuve ne justifie pas l’annulation d’une note. Art. 11 Langue des épreuves 1 Les épreuves se déroulent dans la langue de l’enseignement de la branche. 2 L’étudiant a le droit de répondre en français à une épreuve en anglais. Sur demande écrite de sa part, l’enseignant peut lui accorder de répondre en anglais si l’épreuve est en français. Art. 12 Étudiants en situation de handicap 1 Si un candidat en situation de handicap en fait la demande au début de l’année académique, l’école fixe un déroulement d’épreuve adapté à son handicap et décide de l’utilisation de moyens auxiliaires ou de l’assistance personnelle nécessaires. 2 Les objectifs de l’épreuve doivent être garantis. Art. 13 Tâches de l’enseignant 1 L’enseignant remplit notamment les tâches suivantes: a. donner les informations nécessaires sur ses matières d’enseignement pour qu’elles soient publiées dans la fiche de cours; b. informer les étudiants, s’il y a lieu, du contenu des matières et du déroule- ment des épreuves; c. conduire les épreuves; 4"}
{"pack_id": "french_pack", "section_title": "Ordonnance sur le contrôle des études menant au bachelor et au master", "page": 7, "chunk_id": "french_pack_7_0", "content": "7 O sur le contrôle des études à l’EPFL 414.132.2 d. prendre des notes de chaque épreuve orale, qu’il peut être appelé à produire auprès de la conférence d’examen ou des autorités de recours; e. attribuer les notes des épreuves, ainsi que la note finale de branche; f. conserver pendant six mois après la fin du cycle concerné (chap. 2 à 4) les épreuves écrites et les notes prises durant les épreuves orales; en cas de re- cours, ce délai est prolongé jusqu’au terme de la procédure. 2 S’il est empêché de remplir ses tâches, le directeur de section désigne un rempla- çant. Art. 14 Observateur 1 Un observateur désigné par le directeur de section assiste à l’épreuve orale ayant lieu en session d’examens, dans le but de veiller à son déroulement régulier. 2 Il prend, pour chaque candidat, des notes sur le déroulement de l’épreuve et les conserve conformément à l’art. 13, al. 1, let. f. Art. 15 Consultation des épreuves L’étudiant peut consulter son épreuve dans les 6 mois qui suivent la communication du résultat. Art. 16 Commissions d’évaluation Des commissions d’évaluation peuvent être mises sur pied pour les branches de semestre. Outre l’enseignant et un expert, les commissions d’évaluation peuvent comprendre les assistants et les chargés de cours qui ont participé à l’enseignement, ainsi que d’autres professeurs. Art. 17 Conférence d’examen 1 La conférence d’examen siège à l’issue de chaque session. Elle est composée du vice-président pour l’éducation, qui la préside, du directeur de section et du chef du service académique. Les membres de la conférence d’examen peuvent se faire représenter par leur suppléant.4 2 La conférence d’examen se prononce sur les cas particuliers conformément aux dispositions légales. Art. 18 Fraude 1 Par fraude, on entend toute forme de tricherie en vue d’obtenir pour soi-même ou pour autrui une évaluation non méritée. 4 Nouvelle teneur selon le ch. I de l’O de la Direction de l’EPFL du 20 août 2019, en vigueur depuis le 15 sept. 2019 (RO 2019 2641). 5"}
{"pack_id": "french_pack", "section_title": "Ordonnance sur le contrôle des études menant au bachelor et au master", "page": 8, "chunk_id": "french_pack_8_0", "content": "8 414.132.2 Haute école 2 En cas de fraude, de participation à la fraude ou de tentative de fraude, le règle- ment disciplinaire du 15 décembre 2008 concernant les étudiants de l’École poly- technique fédérale de Lausanne5 s’applique. Art. 19 Notification des résultats et communications 1 La décision de réussite ou d’échec pour le cycle d’études est notifiée à l’étudiant. 2 Elle fait mention des notes obtenues et des crédits acquis. 3 La notification de la décision ainsi que les communications ont lieu par voie élec- tronique ou postale. Art. 20 Demande de nouvelle appréciation et recours administratif 1 La décision peut faire l’objet d’une demande de nouvelle appréciation auprès de l’école dans les 10 jours qui suivent sa notification. L’art. 63, al. 1, 3 et 4, de la loi fédérale du 20 décembre 1968 sur la procédure administrative6 est applicable. 2 Elle peut également faire l’objet d’un recours administratif auprès de la commis- sion de recours interne des EPF, dans les 30 jours qui suivent sa notification. Chapitre 2 Examens du cycle propédeutique Art. 21 Conditions de réussite 1 L’étudiant qui, à l’issue du premier semestre du cycle propédeutique et de la ses- sion d’examens afférente, a atteint une moyenne pondérée (art. 8, al. 5) d’au moins 3,50 pour le premier bloc au sens du règlement d’application est admis au second semestre du cycle. 2 À réussi le cycle propédeutique l’étudiant qui, conformément au plan d’études et au règlement d’application: a. a présenté toutes les branches, et b. a obtenu une moyenne égale ou supérieure à 4,00 dans chacun des blocs et, le cas échéant, les coefficients requis dans un groupe. Art. 22 Échec et élimination 1 Constituent un échec, au niveau du cycle propédeutique: a. la non-atteinte d’une moyenne pondérée d’au moins 3,50 pour le premier bloc, à l’issue du premier semestre et de la session d’examens afférente; b. la non-atteinte d’une moyenne pondérée d’au moins 4,00 par bloc ou la non- atteinte du nombre de coefficients requis dans un groupe, à l’issue du cycle propédeutique, ou 5 RS 414.138.2 6 RS 172.021 6"}
{"pack_id": "french_pack", "section_title": "Ordonnance sur le contrôle des études menant au bachelor et au master", "page": 9, "chunk_id": "french_pack_9_0", "content": "9 O sur le contrôle des études à l’EPFL 414.132.2 c. le fait de ne pas avoir présenté toutes les branches du cycle propédeutique, sous réserve de l’art. 23, al. 4. 2 L’étudiant qui suit le cycle propédeutique en première tentative et se trouve dans la situation visée à l’al. 1, let. a, suit au second semestre le cours de mise à niveau de l’EPFL. 3 Est assimilé à un échec au cycle propédeutique de l’EPFL un échec ou une absence de réussite subi dans une autre haute école à un niveau comparable au cycle propé- deutique, si la majorité des branches sont considérées par l’EPFL comme étant analogues. 4 Constitue un échec définitif un second échec au niveau du cycle propédeutique ou le non-respect de la durée maximale de deux ans pour réussir le cycle. 5 Constituent un motif d’exclusion définitive de toute formation de bachelor à l’EPFL la non-atteinte d’une moyenne pondérée d’au moins 4,00 à l’issue du cours de mise à niveau ou le non-respect de l’obligation de le suivre. Art. 23 Répétition 1 L’étudiant qui est en situation d’échec, en première tentative, selon l’art. 22, al. 1, let. b et c, ou qui a atteint une moyenne d’au moins 4,00 au cours de mise à niveau est admis une seconde fois au premier semestre du cycle propédeutique de l’année académique qui suit. 1bis L’étudiant qui, après avoir réussi le cours de mise à niveau, échoue le cycle propédeutique à l’issue du second semestre, peut répéter le second semestre l’année suivante, en dérogation à l’art. 22, al. 4, de la présente ordonnance et à l’art. 7, al. 3, de l’ordonnance du 14 juin 2004 sur la formation à l’EPFL7.8 2 Les branches d’un bloc ou d’un groupe réussis (art. 21, al. 2, let. b) sont acquises et ne peuvent pas être répétées. 3 La répétition des autres branches non réussies est impérative. La répétition des branches réussies est facultative, sauf pour les étudiants issus de la situation visée à l’art. 22, al. 1, let. a, pour lesquels elle est obligatoire au premier semestre. Le rè- glement d’application"}
{"pack_id": "french_pack", "section_title": "Ordonnance sur le contrôle des études menant au bachelor et au master", "page": 9, "chunk_id": "french_pack_9_1", "content": "réussis (art. 21, al. 2, let. b) sont acquises et ne peuvent pas être répétées. 3 La répétition des autres branches non réussies est impérative. La répétition des branches réussies est facultative, sauf pour les étudiants issus de la situation visée à l’art. 22, al. 1, let. a, pour lesquels elle est obligatoire au premier semestre. Le rè- glement d’application peut toutefois prévoir que certaines branches de semestre réussies ne peuvent pas être répétées.9 4 En cas d’absence justifiée au sens de l’art. 10, l’école examine s’il est raisonna- blement exigible de l’étudiant qu’il complète le cycle propédeutique à la session ordinaire correspondante de l’année suivante ou si l’étudiant doit être considéré comme ayant échoué. 7 RS 414.132.3 8 Introduit par le ch. I de l’O de la Direction de l’EPFL du 20 août 2019, en vigueur depuis le 1er juin 2019 (RO 2019 2641). 9 Nouvelle teneur selon le ch. I de l’O de la Direction de l’EPFL du 20 août 2019, en vigueur depuis le 15 sept. 2019 (RO 2019 2641). 7"}
{"pack_id": "french_pack", "section_title": "Ordonnance sur le contrôle des études menant au bachelor et au master", "page": 10, "chunk_id": "french_pack_10_0", "content": "10 414.132.2 Haute école Chapitre 3 Examens du cycle bachelor et du cycle master Art. 24 Crédits Les crédits de la branche sont attribués lorsque la note obtenue est égale ou supé- rieure à 4,00 ou que la moyenne du bloc de branches à laquelle elle appartient est égale ou supérieure à 4,00. Art. 25 Prérequis Le règlement d’application ou la fiche de cours définit les branches dont l’étudiant doit avoir acquis les crédits afin d’être admis à suivre d’autres branches. Art. 26 Conditions de réussite 1 Les crédits requis du cycle bachelor et du cycle master doivent être acquis confor- mément à la présente ordonnance, à l’ordonnance du 14 juin 2004 sur la formation à l’EPFL10 et au règlement d’application. 2 Dans le cycle bachelor, 60 crédits au moins doivent être acquis par tranche de deux ans. Art. 27 Répétition 1 Si, dans un bloc ou un groupe, le nombre de crédits requis n’est pas acquis, les branches dont la note est inférieure à 4,00 peuvent être répétées une fois, impérati- vement à la session ordinaire de l’année qui suit. 2 L’étudiant qui échoue deux fois à une branche optionnelle peut en présenter une nouvelle conformément au plan d’études. Art. 28 Échec définitif Si l’étudiant n’acquiert pas les crédits requis conformément à la présente ordonnance et au règlement d’application, dans le respect des durées maximales fixées par l’ordonnance du 14 juin 2004 sur la formation à l’EPFL11, il se trouve en situation d’échec définitif. Art. 29 Admission conditionnelle au cycle consécutif 1 Peut être admis conditionnellement au cycle master consécutif l’étudiant qui: a. n’a pas plus de 10 crédits manquants sur ceux requis par le plan d’études de dernière année du cycle bachelor de l’EPFL, et b. n’est pas en situation d’échec définitif. 1 0 RS 414.132.3 11 RS 414.132.3 8"}
{"pack_id": "french_pack", "section_title": "Ordonnance sur le contrôle des études menant au bachelor et au master", "page": 11, "chunk_id": "french_pack_11_0", "content": "11 O sur le contrôle des études à l’EPFL 414.132.2 2 L’étudiant admis conditionnellement au cycle master consécutif a l’obligation d’acquérir les crédits manquants du bachelor dans l’année de son admission condi- tionnelle, sous peine d’être exclu du cycle. 3 Peut être admis conditionnellement au projet de master l’étudiant qui: a. n’a pas plus de 8 crédits manquants sur ceux requis pour le cycle master y compris les études visées à l’art. 5, let. i; b. n’est pas en situation d’échec définitif. Chapitre 4 Projet de master Art. 30 Déroulement 1 Le sujet du projet de master est fixé ou approuvé par le professeur ou le maître d’enseignement et de recherche qui en assume la direction. 2 Sur demande, le directeur de section peut confier la direction du projet de master à un professeur ou un maître d’enseignement et de recherche rattaché à une autre section ou à un collaborateur scientifique. 3 L’examen du projet de master consiste en une évaluation de sa présentation finale suivie d’une interrogation orale devant l’enseignant qui a dirigé le projet et un expert externe à l’EPFL désigné par l’enseignant en accord avec le directeur de section. Seul l’enseignant peut inviter d’autres personnes à l’interrogation orale; celles-ci ne participent pas à l’évaluation. 4 Si la qualité rédactionnelle du projet est jugée insuffisante, l’enseignant peut exiger que l’étudiant y remédie dans un délai de deux semaines à compter de l’interrogation orale. Art. 31 Conditions de réussite 1 Le projet de master est réputé réussi lorsque la note attribuée est égale ou supé- rieure à 4,00. 2 Si le règlement d’application prévoit un stage associé au projet de master, celui-ci doit avoir été réussi préalablement. Art. 32 Répétition 1 En cas d’échec, un nouveau projet de master peut être présenté dans le respect de la durée maximale prévue par l’ordonnance du 14 juin 2004 sur la formation à l’EPFL12. 2 Un second échec constitue un échec définitif. 1 2 RS 414.132.3 9"}
{"pack_id": "french_pack", "section_title": "Ordonnance sur le contrôle des études menant au bachelor et au master", "page": 12, "chunk_id": "french_pack_12_0", "content": "12 414.132.2 Haute école Chapitre 5 Dispositions finales Art. 33 Abrogation L’ordonnance du 14 juin 2004 sur le contrôle des études à l’EPFL13 est abrogée. Art. 34 Disposition transitoire Le chapitre 2 de l’ordonnance du 14 juin 2004 sur le contrôle des études à l’EPFL14 demeure applicable jusqu’au 31 août 2017 aux étudiants répétant le cycle propédeu- tique durant l’année académique 2016–2017. Art. 35 Entrée en vigueur La présente ordonnance entre en vigueur le 1er septembre 2016. 1 3 [RO 2004 4323, 2006 4125, 2008 3721] 14 RO 2004 4323, 2006 4125, 2008 3721 10"}
{"pack_id": "french_pack", "section_title": "Plan d'études 2020-2021", "page": 13, "chunk_id": "french_pack_13_0", "content": "13 Plan d’études INFORMATIQUE 2 0 2 0 - 2 0 2 1 arrêté par la direction de l'EPFL le 2 juin 2020 Directeur de la section Prof. A.-M. Kermarrec Adjointe du directeur de section Mme S. Dal Mas Conseillers d'études : Année propédeutique --- 1ère année cycle bachelor MER R. Boulic 2ème année cycle bachelor Prof. R. West 1ère année cycle master Prof. B. Faltings 2ème année cycle master Prof. P. Ienne Projet de master Prof. M. Odersky Responsable passerelle HES Mme S. Dal Mas Coordinatrice des stages d’ingénieur Mme S. Dal Mas Délégué à la mobilité M. J.-L. Benz Secrétaire Bachelor Mme C. Bigler Secrétaire Master Mme A. Veltro Aux cycles bachelor et master, selon les besoins pédagogiques, les heures d’exercices mentionnées dans le plan d’études pourront être intégrées dans les heures de cours ; les scolarités indiquées représentent les nombres moyens d’heures de cours et d’exercices hebdomadaires sur le semestre"}
{"pack_id": "french_pack", "section_title": "Cycle propédeutique", "page": 14, "chunk_id": "french_pack_14_0", "content": "14 2020‐2021 INFORMATIQUE Cycle propédeutique Cursus commun IN‐SC Code Matières Type de Enseignants Sections Semestres Coeff. Période Type branches sous réserve BA1 BA2 des examen * de modification c e p c e p épreuves * Bloc 1 : 38 CS-101 Advanced information, computation, communication I Spécifique Aberer SC 4 2 7 H écrit COM-102 Advanced information, computation, communication II Spécifique Rimoldi SC 4 2 7 E écrit MATH-111e Algèbre linéaire (en français) ou Urech MA MATH-111enAlgèbre linéaire (en anglais) Polytechnique Maddocks MA 4 2 6 H écrit MATH-111pi Algèbre linéaire (classe inversée) Testerman MA MATH-101e Analyse I (en français) ou Lachowska MA MATH-101deAnalyse I (en allemand) ou Polytechnique Kressner MA 4 2 6 H écrit MATH-101enAnalyse I (en anglais) Svaldi MA MATH-106e Analyse II (en français) ou Lachowska MA Polytechnique 4 2 6 E écrit MATH-106enAnalyse II (en anglais) Mountford MA PHYS-101g Physique générale : mécanique (en français) ou Bréchet PH PHYS-101de Physique générale : mécanique (en allemand) ou Polytechnique Gruetter PH 3 3 6 H écrit PHYS-101en Physique générale : mécanique (en anglais) Manley PH Bloc 2 : 22 CS-173 Digital system design Spécifique Kluter IN 4 2 6 sem P HUM-1nn Enjeux mondiaux Polytechnique Divers enseignants CDH 2 2 sem P CS-107 Introduction à la programmation Polytechnique Sam IN 2 3 5 sem A CS-108 Pratique de la programmation orientée-objet Spécifique Schinz IN 2 2 6 9 sem P Totaux : 17 12 0 16 6 8 60 Totaux par semaine : 29 30 Remarques : * Se référer à l’art. 3 al. 4 du règlement d’application Les cours en allemand et en anglais sont disponibles sous réserve de la compatiblité des horaire des cours."}
{"pack_id": "french_pack", "section_title": "Cycle Bachelor", "page": 15, "chunk_id": "french_pack_15_0", "content": "15 2020‐2021 INFORMATIQUE Cycle Bachelor Code Matières Enseignants Sections Semestres Crédits Période Type sous réserve BA3 BA4 BA5 BA6 des examen * de modification c e p c e p c e p c e p 2e 3e épreuves * Bloc A 14 CS-210 Functional programming Kuncak/Odersky IN 2 2 5 sem A CS-206 Parallelism and concurrency Kuncak/Odersky IN 1 1 2 4 sem P CS-207 Programmation orientée système Chappelier IN 1 2 3 sem P CS-212 Projet programmation système Chappelier/vacat IN 2 2 sem P Bloc B 17 CS-209 Computer architecture II Ienne IN 2 2 4 sem P CS-208 Computer architecture I Stojilovic IN 2 2 4 sem A COM-208 Computer networks Argyraki SC 2 2 5 H écrit PHYS-114 General physics : electromagnetism Dil PH 2 2 4 H écrit Bloc C 20 CS-250 Algorithms Svensson IN 4 2 6 H écrit MATH-203c Analyse III Struett MA 2 2 4 H écrit MATH-232 Probabilities and statistics Abbe MA 4 2 6 E écrit CS-251 Theory of computation Göös IN 2 2 4 sem P Bloc D 17 CS-322 Introduction to database systems Ailamaki /Koch IN 2 1 1 4 E écrit CS-323 Introduction to operating systems Payer IN 2 1 2 5 sem A CS-305 Software engineering Candea IN 2 1 1 4 sem A CS-306 Software development project Candea IN 4 4 sem P Bloc E 8 CS-307 Introduction to multiprocessor architecture Falsafi IN 2 1 4 sem A COM-301 Computer security Troncoso IN 2 1 1 4 H écrit Groupe \"projet\" 8 CS-398 Projet en Informatique I Divers enseignants IN 2 8 sem A ou P Groupe \"options\" 28 5 23 MATH-310 Algebra Lachowska MA 2 1 3 H écrit MATH-207d Analyse IV Struett MA 2 2 4 E écrit CS-308 Calcul quantique Macris SC 3 1 4 E écrit CH-160b Chimie générale Terrettaz CGC 2 1 3 H écrit CS-320 Computer language processing Kuncak IN 2 2 2 6 sem A EE-200 Électromagnétisme I : lignes et ondes Fleury EL 2 1 3 H écrit EE-201 Électromagnétisme II : calcul des champs Fleury EL"}
{"pack_id": "french_pack", "section_title": "Cycle Bachelor", "page": 15, "chunk_id": "french_pack_15_1", "content": "2 2 4 E écrit CS-308 Calcul quantique Macris SC 3 1 4 E écrit CH-160b Chimie générale Terrettaz CGC 2 1 3 H écrit CS-320 Computer language processing Kuncak IN 2 2 2 6 sem A EE-200 Électromagnétisme I : lignes et ondes Fleury EL 2 1 3 H écrit EE-201 Électromagnétisme II : calcul des champs Fleury EL 2 1 3 E écrit EE-202b Électronique I Zysman SC 2 1 4 sem A EE-203b Électronique II Zysman SC 2 2 4 sem A EE-381 Électronique III Zysman SC 2 1 3 sem P CS-330 Intelligence artificielle Faltings IN 2 2 4 sem P CS-213 Interaction personne-système (pas donné 2020-2021) Dillenbourg IN 2 2 5 E écrit COM-308 Internet analytics Grossglauser SC 2 1 2 5 sem P BIO-109 Introduction aux sciences du vivant (pour IC) Zufferey R. SV 4 2 6 E écrit CS-341 Introduction to computer graphics Pauly IN 2 1 2 6 E écrit CS-233a Introduction to machine learning (BA3) Salzmann IN 2 2 4 H écrit CS-233b Introduction to machine learning (BA4) Fua IN 2 2 4 E écrit COM-300 Modèles stochastiques pour les communications Thiran P. SC 4 2 6 H écrit CS-328 Numerical methods for visual computing and ML Jakob IN 2 1 4 H écrit COM-302 Principles of digital communications Telatar SC 4 2 6 E écrit CS-309 Projet de systems-on-chip Beuchat IN 3 3 sem P COM-303 Signal processing for communications Prandoni SC 4 2 6 E écrit EE-205 Signals and systems (for EL&IC) Shkel SC 2 2 4 E écrit CS-234 Technologies of societal self-organization Ford IN 2 1 2 5 H écrit COM-309 Traitement quantique de l'information Macris SC 3 1 4 H écrit Bloc \"SHS et MGT transversal\" (SHS) 8 HUM/MGT-nnnSHS : Cours à choix I selon Plan d'études SHS & MGT Divers enseignants CDH/CDM 2 2 sem A HUM/MGT-nnnSHS : Cours à choix II selon Plan d'études SHS & MGT Divers enseignants CDH/CDM 2 2 sem P HUM/MGT-nnnSHS : Cours à choix III selon Plan d'études SHS & MGT Divers enseignants CDH/CDM 2 2 sem A HUM/MGT-nnnSHS"}
{"pack_id": "french_pack", "section_title": "Cycle Bachelor", "page": 15, "chunk_id": "french_pack_15_2", "content": "(SHS) 8 HUM/MGT-nnnSHS : Cours à choix I selon Plan d'études SHS & MGT Divers enseignants CDH/CDM 2 2 sem A HUM/MGT-nnnSHS : Cours à choix II selon Plan d'études SHS & MGT Divers enseignants CDH/CDM 2 2 sem P HUM/MGT-nnnSHS : Cours à choix III selon Plan d'études SHS & MGT Divers enseignants CDH/CDM 2 2 sem A HUM/MGT-nnnSHS : Cours à choix IV selon Plan d'études SHS & MGT Divers enseignants CDH/CDM 2 2 sem P Totaux : 60 52 Remarque : * Se référer à l’art. 3 al. 4 du règlement d’application"}
{"pack_id": "french_pack", "section_title": "Cycle Master", "page": 16, "chunk_id": "french_pack_16_0", "content": "16 2020‐2021INFORMATIQUE ‐ Obligatoire Cycle Master Code Matières Enseignants Sections Spécialisations Semestres Crédits Période Type sous réserve MA1 MA2 des examen * de modification c e p c e p épreuves * Groupe \"Core courses et options\" 72 Groupe 1 \"Core courses\" min. 30 CS-450 Advanced algorithms Kapralov IN B C D E I 4 3 7 E écrit CS-470 Advanced computer architecture Ienne IN A D G 3 2 6 E oral COM-401 Cryptography and security Vaudenay SC D E J 4 2 7 H écrit CS-422 Database systems Ailamaki IN B C G J 3 2 2 7 sem P CS-438 Decentralized systems engineering Ford IN G 2 2 2 6 H oral CS-451 Distributed algorithms Guerraoui SC C E G I J 3 2 1 6 H écrit CS-452 Foundations of software Odersky IN C G 2 2 4 H écrit COM-402 Information security and privacy Hubaux/Oechslin SC B D E G 3 1 2 6 H écrit CS-433 Machine learning Jaggi/Flammarion IN B F I J 4 2 7 H écrit COM-407 TCP/IP networking Le Boudec SC D E G H 2 2 2 6 H écrit Groupe 2 \"Options\" (la somme des crédits des groupes 1 et 2 doit être de 72 crédits au minimum) Cours à option Divers enseignants Divers Bloc \"Projet et SHS\" : 18 CS-498 Semester project in Computer Science II Divers enseignants IN 2 12 sem A ou P HUM-nnn SHS : introduction au projet Divers enseignants SHS 2 1 3 sem A HUM-nnn SHS : projet Divers enseignants SHS 3 3 sem P Total des crédits du cycle master : 90 Spécialisations A Computer Engineering - SP F Signals, Images, and Interfaces B Data Analytics G Software Systems C Foundations of Software H Wireless Communication D Cyber Security - SP I Computer Science Theory E Networking and Mobility J Internet Information Systems Remarque : * Se référer à l’art. 3 al. 4 du règlement d’application Stage d'ingénieur : Voir les modalités dans le règlement d'application Mineurs : Le cursus peut être complété par un des mineurs figurant dans l'offre de"}
{"pack_id": "french_pack", "section_title": "Cycle Master", "page": 16, "chunk_id": "french_pack_16_1", "content": "of Software H Wireless Communication D Cyber Security - SP I Computer Science Theory E Networking and Mobility J Internet Information Systems Remarque : * Se référer à l’art. 3 al. 4 du règlement d’application Stage d'ingénieur : Voir les modalités dans le règlement d'application Mineurs : Le cursus peut être complété par un des mineurs figurant dans l'offre de l'EPFL (renseignements à la page sac.epfl.ch/mineurs ), à l'exclusion des mineurs, \"Data science\", \"Cyber security\", \"Informatique\" et \"Systèmes de communication\" qui ne peuvent pas être choisis. Parmi les mineurs offerts par l'EPFL, la section recommande à ses étudiants les mineurs suivants : - Biocomputing (SIN) - Computational science and Engineering (SMA) - Management de la technologie et entrepreunariat (SMTE) - Technologies biomédicales (SMT) - Technologies spatiales (SEL) Le choix des cours de tous les mineurs se fait sur conseil de la section de l'étudiant et du responsable du mineur."}
{"pack_id": "french_pack", "section_title": "Options cycle Master", "page": 17, "chunk_id": "french_pack_17_0", "content": "17 2020-2021 INFORMATIQUE - Options Cycle Master Code Matières Enseignants Sections Spécialisations Semestres Crédits Période Type Cours sous réserve MA1 MA2 des examen * biennaux de modification c e p c e p épreuves * donnés en Options CS-420 Advanced compiler construction Schinz IN A C G 2 2 4 sem P CS-440 Advanced computer graphics Jakob IN F 2 1 6 sem P CS-471 Advanced multiprocessor architecture (pas donné en 2020-2021)Falsafi IN A G 4 6 sem A 2021-2022 COM-417 Advanced probability and applications Lévêque SC B H I 3 2 6 E écrit CS-523 Advanced topics on privacy enhancing technologies Troncoso IN D 3 1 2 7 E écrit MATH-493 Applied biostatistics Goldstein MA 2 2 5 sem P CS-401 Applied data analysis West IN B 2 2 6 H écrit CS-456 Artificial neural networks Gerstner IN 2 2 5 E écrit EE-554 Automatic speech processing Bourlard EL F 2 1 3 H écrit BIO-465 Biological modeling of neural networks Gerstner IN 2 2 4 E écrit EE-512 Biomedical signal processing Vesin EL F 4 2 6 H écrit CS-490 Business design for IT services Wegmann SC 3 3 E oral BIO-105 Cellular biology and biochemistry for engineers Zufferey R. SV 2 2 4 H écrit CS-524 Computational complexity (pas donné en 2020-2021)Svensson IN B I 3 1 4 sem A 2020-2021 CS-413 Computational photography Süsstrunk SC F 2 2 5 sem P CS-442 Computer vision Fua IN F 2 1 4 E écrit CS-453 Concurrent algorithms Guerraoui SC C G I 3 1 1 5 H écrit COM-480 Data visualization Vuillon SC B 2 2 4 sem P EE-559 Deep learning Fleuret EL 2 2 4 E écrit CS-472 Design technologies for integrated systems De Micheli IN A 3 2 6 sem A CS-446 Digital 3D geometry processing (pas donné en 2020-2021)Pauly IN F 2 1 1 5 sem A CS-411 Digital education & learning analytics Dillenbourg/Jermann IN 2 2 4 H oral CS-423 Distributed information systems Aberer SC B E J 2 1 4 H écrit ENG-466 Distributed intelligent systems Martinoli SIE A 2 3 5"}
{"pack_id": "french_pack", "section_title": "Options cycle Master", "page": 17, "chunk_id": "french_pack_17_1", "content": "A 3 2 6 sem A CS-446 Digital 3D geometry processing (pas donné en 2020-2021)Pauly IN F 2 1 1 5 sem A CS-411 Digital education & learning analytics Dillenbourg/Jermann IN 2 2 4 H oral CS-423 Distributed information systems Aberer SC B E J 2 1 4 H écrit ENG-466 Distributed intelligent systems Martinoli SIE A 2 3 5 E écrit COM-502 Dynamical system theory for engineers Thiran P. SC 2 1 4 H écrit CS-473 Embedded systems Beuchat IN A 2 2 4 H oral CS-491 Enterprise and service-oriented architecture Wegmann SC J 6 6 E oral CS-489 Experience design Huang IN F 2 4 6 sem A CS-550 Formal verification Kuncak IN A CD 2 2 2 6 sem A MATH-483 Gödel and recursivity Duparc MA I 2 2 5 H écrit 2020-2021 CS-486 Interaction design Pu IN J 2 1 1 4 sem P MICRO-511 Image processing I Unser/Van De Ville MT F 3 3 H écrit MICRO-512 Image processing II Unser/Van De Ville MT F 3 3 E écrit CS-487 Industrial automation Sommer/Tournier SC 2 1 3 E oral COM-404 Information theory and coding Telatar SC B H I 4 2 7 H écrit CS-430 Intelligent agents Faltings IN J 3 3 6 sem A CS-431 Introduction to natural language processing Rajman/Chappelier IN B J 2 2 4 H écrit CS-526 Learning theory Macris/Urbanke SC 2 2 4 E écrit 2 2 COM-516 Markov chains and algorithmic applications Lévêque/Macris SC B I 2 2 4 H écrit CS-421 Machine learning for behavioral data Käser IN 4 E écrit COM-514 Mathematical foundations of signal processing Simeoni /Behar Haro SC F 3 2 6 H écrit COM-405 Mobile networks Hubaux SC D E GH 2 1 4 E écrit COM-430 Modern digital communications: a hands-on approach Rimoldi SC E F H 2 2 6 sem A COM-512 Networks out of control (pas donné en 2020-2021)Thiran P./Grossglauser SC B E H J 2 1 4 E écrit 2021-2022 MATH-489 Number theory in cryptography vacat MA D 2 2 5 E écrit CS-439 Optimization for machine learning Jaggi/Flammarion IN"}
{"pack_id": "french_pack", "section_title": "Options cycle Master", "page": 17, "chunk_id": "french_pack_17_2", "content": "E écrit COM-430 Modern digital communications: a hands-on approach Rimoldi SC E F H 2 2 6 sem A COM-512 Networks out of control (pas donné en 2020-2021)Thiran P./Grossglauser SC B E H J 2 1 4 E écrit 2021-2022 MATH-489 Number theory in cryptography vacat MA D 2 2 5 E écrit CS-439 Optimization for machine learning Jaggi/Flammarion IN 2 2 1 5 E écrit CS-596 Optional project in computer science Divers enseignants IN 2 8 sem A ou P COM-503 Performance evaluation Le Boudec SC B C E G J 3 1 2 7 E écrit 2020-2021 CS-522 Principles of computer systems Argyraki/Candea SC/IN A CD G 4 7 sem A MATH-467 Probabilistic methods in combinatorics Marcus MA I 2 2 5 H écrit 2020-2021 CS-476 Real-time embedded systems Beuchat IN A 2 2 4 sem P EE-511 Sensors in medical instrumentation Aminian EL F 2 1 3 E écrit MATH-318 Set theory Duparc MA 2 2 5 E écrit EE-472 Smart grid technologies Paolone/Le Boudec EL/SC 2 1 2 5 E écrit EE-593 Social media Gillet EL J 1 1 2 sem P sans retrait CS-412 Software security Payer IN D 3 2 1 6 sem P COM-500 Statistical signal and data processing through applications Ridolfi SC B F H 3 2 6 E écrit CS-448 Sublinear algorithms for big data analysis (pas donné en 2020-2021)Kapralov IN I 3 4 sem P 2021-2022 CS-410 Technology ventures in IC (pas donné en 2020-2021)Bugnion IN 2 2 4 sem P CS-455 Topics in theoretical computer science Kapralov IN B I 3 1 4 sem A 2020-2021 CS-444 Virtual reality Boulic IN F 2 1 4 sem P Remarque : * Se référer à l’art. 3 al. 4 du règlement d’application"}
{"pack_id": "french_pack", "section_title": "Spécialisations A-D", "page": 18, "chunk_id": "french_pack_18_0", "content": "18 2020‐2021 INFORMATIQUE ‐ spécialisations Les enseignants, les crédits et la période des cours sont indiqués sous réserve de modification. Code Matières Enseignants Sections Crédits Période des cours Spécialisation A \"COMPUTER ENGINEERING ‐ SP\" Responsable : Prof. P. Ienne 64 CS-420 Advanced compiler construction Schinz IN 4 P CS-470 Advanced computer architecture Ienne IN 6 P CS-471 Advanced multiprocessor architecture (pas donné en 2020-21)Falsafi IN 6 A EE-431 * Advanced VLSI design Burg EL 4 P CS-472 Design technologies for integrated systems De Micheli IN 6 A ENG-466 Distributed intelligent systems Martinoli SIE 5 P CS-473 Embedded systems Beuchat IN 4 A CS-550 Formal verification Kuncak IN 6 A EE-429 * Fundamentals of VLSI Design Burg EL 4 A EE-432 * Hardware systems modeling I Vachoux EL 2 A EE-433 * Hardware systems modeling II Vachoux EL 2 P EE-490b * Lab in EDA based design Vachoux/Koukab EL 4 A CS-522 Principles of computer systems Argyraki/Candea SC/IN 7 A CS-476 Real-time embedded systems Beuchat IN 4 P Spécialisation B \"DATA ANALYTICS\" Responsable : Prof. M. Grossglauser/Prof. P. Thiran 102 EE-558 * A network tour of data science Frossard/Vandergeynst EL 4 A CS-450 Advanced algorithms Kapralov IN 7 P COM-417 Advanced probability and aplications Lévêque SC 6 P CS-401 Applied data analysis West SC 6 A CS-524 Computational complexity (pas donné en 2020-21)Svensson IN 4 A CS-422 Database systems Ailamaki IN 7 P COM-480 Data visualization Vuillon SC 4 P CS-423 Distributed information systems Aberer SC 4 A COM-402 Information security and privacy Hubaux/Oechslin SC 6 A COM-404 Information theory and coding Telatar SC 7 A COM-308 * Internet analytics Grossglauser SC 5 P CS-431 Introduction to natural language processing Rajman/Chappelier IN 4 A CS-433 Machine learning Jaggi/Flammarion IN 7 A COM-516 Markov chains and algorithmic applications Lévêque/Macris SC 4 A COM-512 Networks out of control (pas donné en 2020-21)Thiran P./Grossglauser SC 4 P COM-503 Performance evaluation Le Boudec SC 7 P COM-500 Statistical signal and data processing through applications Ridolfi SC 6 P MATH-413 * Statistics for Data science Olhede MA 6 A CS-455 Topics in theoretical computer science Kapralov"}
{"pack_id": "french_pack", "section_title": "Spécialisations A-D", "page": 18, "chunk_id": "french_pack_18_1", "content": "COM-516 Markov chains and algorithmic applications Lévêque/Macris SC 4 A COM-512 Networks out of control (pas donné en 2020-21)Thiran P./Grossglauser SC 4 P COM-503 Performance evaluation Le Boudec SC 7 P COM-500 Statistical signal and data processing through applications Ridolfi SC 6 P MATH-413 * Statistics for Data science Olhede MA 6 A CS-455 Topics in theoretical computer science Kapralov IN 4 A Spécialisation C \"FOUNDATIONS OF SOFTWARE\" Responsable : Prof. M. Odersky 53 CS-450 Advanced algorithms Kapralov IN 7 P CS-420 Advanced compiler construction Schinz IN 4 P CS-453 Concurrent algorithms Guerraoui SC 5 A CS-422 Database Systems Ailamaki IN 7 P CS-451 Distributed algorithms Guerraoui SC 6 A CS-550 Formal verification Kuncak IN 6 A CS-452 Foundations of software Odersky IN 4 A COM-503 Performance evaluation Le Boudec SC 7 P CS-522 Principles of computer systems Argyraki/Candea SC/IN 7 A Spécialisation D \"CYBER SECURITY ‐ SP\" Responsable : Prof. C. Troncoso 71 CS-450 Advanced algorithms Kapralov IN 7 P CS-470 Advanced computer architecture Ienne IN 6 P COM-501 * Advanced cryptography Vaudenay SC 4 P CS-523 Advanced topics on privacy enhancing technologies Hubaux/Troncoso IN/SC 7 P EE-431 * Advanced VLSI design Burg EL 4 P COM-401 Cryptography and security Vaudenay SC 7 A CS-550 Formal verification Kuncak IN 6 A EE-429 * Fundamentals of VLSI Design Burg EL 4 A COM-402 Information security and privacy Hubaux/Oechslin SC 6 A COM-405 Mobile networks Hubaux SC 4 P CS-522 Principles of computer systems Argyraki/Candea SC/IN 7 A CS-412 Software security Payer IN 6 P COM-506 * Student seminar : security protocols and applications Oechslin/Vaudenay SC 3 P COM-407 TCP/IP Networking Le Boudec SC 6 A * = cours hors plan d'études pour les étudiants ne faisant pas la spécialisation"}
{"pack_id": "french_pack", "section_title": "Spécialisations E-H", "page": 19, "chunk_id": "french_pack_19_0", "content": "19 2020‐2021 INFORMATIQUE ‐ spécialisations Les enseignants, les crédits et la période des cours sont indiqués sous réserve de modification. Code Matières Enseignants Sections Crédits Période des cours Spécialisation E \"NETWORKING AND MOBILITY\" Responsable : Prof. J.‐Y. Le Boudec 51 CS-450 Advanced algorithms Kapralov IN 7 P COM-401 Cryptography and security Vaudenay SC 7 A CS-451 Distributed algorithms Guerraoui SC 6 A CS-423 Distributed information systems Aberer SC 4 A COM-402 Information security and privacy Hubaux/Oechslin SC 6 A COM-405 Mobile networks Hubaux SC 4 P COM-430 Modern digital communications : A hands-on approach Rimoldi SC 6 A COM-512 Networks out of control (pas donné en 2020-21)Thiran P./Grossglauser SC 4 P COM-503 Performance evaluation Le Boudec SC 7 P COM-407 TCP/IP networking Le Boudec SC 6 A Spécialisation F \"SIGNAL, IMAGES AND INTERFACES\" Responsables : Prof. M. Pauly 85 CS-440 Advanced computer graphics Jakob IN 6 P EE-554 Automatic speech processing Bourlard EL 3 A EE-512 Biomedical signal processing Vesin EL 6 A CS-413 Computational photography Süsstrunk SC 5 P CS-442 Computer vision Fua IN 4 P CS-446 Digital 3D geometry processing (pas donné en 2020-2021)Pauly IN 5 A CS-489 Experience design Huang IN 6 A MICRO-511 Image processing I Unser/Van De Ville MT 3 A MICRO-512 Image processing II Unser/Van De Ville MT 3 P CS-341 * Introduction to computer graphics Pauly IN 6 P CS-433 Machine learning Jaggi/Flammarion IN 7 A COM-514 Mathematical foundations of signal processing Simeoni /Behar Haro SC 6 A COM-430 Modern digital communications : A hands-on approach Rimoldi SC 6 A EE-511 Sensors in medical instrumentation Aminian EL 3 P COM-303 * Signal processing for communications Prandoni SC 6 P COM-500 Statistical signal and data processing through applications Ridolfi SC 6 P CS-444 Virtual reality Boulic IN 4 P Spécialisation G \"SOFTWARE SYSTEMS\" Responsable : Prof. G. Candea 74 CS-420 Advanced compiler construction Schinz IN 4 P CS-470 Advanced computer architecture Ienne IN 6 P CS-471 Advanced multiprocessor architecture (pas donné en 2020-21)Falsafi IN 6 A CS-453 Concurrent algorithms Guerraoui SC 5 A CS-422 Database Systems Ailamaki IN 7 P CS-438 Decentralized systems engineering"}
{"pack_id": "french_pack", "section_title": "Spécialisations E-H", "page": 19, "chunk_id": "french_pack_19_1", "content": "reality Boulic IN 4 P Spécialisation G \"SOFTWARE SYSTEMS\" Responsable : Prof. G. Candea 74 CS-420 Advanced compiler construction Schinz IN 4 P CS-470 Advanced computer architecture Ienne IN 6 P CS-471 Advanced multiprocessor architecture (pas donné en 2020-21)Falsafi IN 6 A CS-453 Concurrent algorithms Guerraoui SC 5 A CS-422 Database Systems Ailamaki IN 7 P CS-438 Decentralized systems engineering Ford IN 6 A CS-451 Distributed algorithms Guerraoui SC 6 A CS-452 Foundations of software Odersky IN 4 A COM-402 Information security and privacy Hubaux/Oechslin SC/IN 6 A COM-405 Mobile networks Hubaux SC 4 P COM-503 Performance evaluation Le Boudec SC 7 P CS-522 Principles of computer systems Argyraki/Candea SC/IN 7 A COM-407 TCP/IP networking Le Boudec SC 6 A Spécialisation H \"WIRELESS COMMUNICATIONS\" Responsable : Prof. E. Telatar 46 COM-417 Advanced probability and applications Lévêque SC 6 P COM-404 Information theory and coding Telatar SC 7 A EE-445 * Microwaves Skrivervik EL 4 A COM-405 Mobile networks Hubaux SC 4 P COM-430 Modern digital communications : A hands-on approach Rimoldi SC 6 A COM-512 Networks out of control (pas donné en 2020-21)Thiran P./Grossglauser SC 4 P EE-345 * Rayonnement et antennes Skrivervik EL 3 A COM-500 Statistical signal and data processing through applications Ridolfi SC 6 P COM-407 TCP/IP networking Le Boudec SC 6 A Légende : * = cours hors plan d'études pour les étudiants ne faisant pas la spécialisatA = automne, P = printemps - 1 semestre comprend 14 semaines"}
{"pack_id": "french_pack", "section_title": "Spécialisations I-J", "page": 20, "chunk_id": "french_pack_20_0", "content": "20 2020‐2021 INFORMATIQUE ‐ spécialisations Les enseignants, les crédits et la période des cours sont indiqués sous réserve de modification. Code Matières Enseignants Sections Crédits Période des cours Spécialisation I. \"COMPUTER SCIENCE THEORY\" Responsable : Prof. O. Svensson 85 CS-450 Advanced algorithms Kapralov IN 7 P COM-417 Advanced probability and applications Lévêque SC 6 P MATH-460 * Combinatorial optimization Eisenbrand MA 5 A CS-524 Computational complexity (pas donné en 2020-21) Svensson IN 4 A FIN-472 * Computational finance Pulido/Glau IF 5 A CS-453 Concurrent algorithms Guerraoui SC 5 A MATH-461 * Convexity Eisenbrand MA 5 A CS-451 Distributed algorithms Guerraoui SC 6 A MATH-483 Gödel and recursivity Duparc MA 5 A COM-404 Information theory and coding Telatar SC 7 A CS-433 Machine learning Jaggi/Flammarion IN 7 A COM-516 Markov chains and algorithmic applications Lévêque/Macris SC 4 A COM-300 * Modèles stochastiques pour les communications Thiran SC 6 A MATH-467 Probabilistic methods in combinatorics Marcus MA 5 A CS-448 Sublinear algorithms for big data analysis (pas donné en 2020-21)Kapralov IN 4 P CS-455 Topics in theoretical computer science Kapralov IN 4 A Spécialisation J. \"INTERNET INFORMATION SYSTEMS\" Responsable : Prof. B. Faltings et Prof. K. Aberer 64 COM-401 Cryptography and security Vaudenay SC 7 A CS-422 Database systems Ailamaki IN 7 P CS-451 Distributed algorithms Guerraoui SC 6 A CS-423 Distributed information systems Aberer SC 4 A CS-491 Enterprise and service-oriented architecture Wegmann SC 6 P CS-486 Interaction design Pu IN 4 P CS-430 Intelligent agents Faltings IN 6 A CS-431 Introduction to natural language processing Rajman/Chappelier IN 4 A CS-433 Machine learning Jaggi/Flammarion IN 7 A COM-512 Networks out of control (pas donné en 2020-21)Thiran P./Grossglauser SC 4 P COM-503 Performance evaluation Le Boudec SC 7 P EE-593 Social Media Gillet/Holzer EL 2 P Légende : * = cours hors plan d'études pour les étudiants ne faisant pas la spécialisation A = automne, P = printemps - 1 semestre comprend 14 semaines"}
{"pack_id": "french_pack", "section_title": "Mineur Biocomputing", "page": 21, "chunk_id": "french_pack_21_0", "content": "21 2020-2021 Biocomputing Section d'Informatique Mineur interdisciplinaire Responsable : Prof. M. Salathé Les enseignants, les crédits et la période des cours sont indiqués sous réserve de modification. Les cours déjà suivis au bachelor ou au master ne peuvent pas être pris également dans un mineur. 53 crédits offerts Code Matières Enseignants Livret des cours Crédits Période des cours CS-456 Artificial neural networks Gerstner IN 5 P BIO-465 Biological modeling of neural networks Gerstner IN 4 P BIO-315 Biomolecular structure and mechanics Dal Peraro SV 4 P CS-432 Computational motor control Ijspeert SV 4 P CS-423 Distributed information systems Aberer SC 4 A ENG-466 Distributed intelligent systems Martinoli SIE 5 P COM-502 Dynamical system theory for engineers Thiran P. SC 4 A MICRO-511 Image processing I Unser/Van De Ville MT 3 A MICRO-512 Image processing II Unser/Van De Ville MT 3 P BIO-109* Introduction aux sciences du vivant (pour IC) Zufferey R. SV 6 P CH-353 Introduction to electronic structure methods Röthlisberger CGC 4 A CS-433 Machine learning Jaggi/Flammarion IN 7 A * Ce cours (ou cours équivalent) est obligatoire pour ce mineur s'il n'a pas été pris au bachelor / This course (or equivalent) is mandatory for this minor if not already taken into the bach D'autres cours peuvent être pris en approbation avec le Prof. Marcel Salathé / Other courses ca be taken, if approved ba Prof. Marcel Salathé Légende : A = automne, P = printemps 1 semestre comprend 14 semaines."}
{"pack_id": "french_pack", "section_title": "Mineur Cyber security", "page": 22, "chunk_id": "french_pack_22_0", "content": "22 2020-2021 Cyber security Section d'Informatique Mineur disciplinaire Responsable : Prof. C. Troncoso Les enseignants, les crédits et la période des cours sont indiqués sous réserve de modification. 82 crédits offerts Les cours déjà suivis au bachelor ou au master ne peuvent pas être pris également dans un mineur. Codes Matières (liste indicative) Enseignants Livret des cours Crédits Période des cours CS-450 Advanced algorithms Kapralov IN 7 P CS-470 Advanced computer architecture Ienne IN 6 P COM-501 Advanced cryptography* Vaudenay SC 4 P CS-101 Advanced information, computation, communication I Aberer SC 7 A EE-431 Advanced VLSI design Burg EL 4 P MATH-310 Algebra Lachowska MA 3 A CS-250 Algorithms Svensson IN 6 A COM-208 Computer networks Argyraki SC 5 A COM-301 Computer security Troncoso IN 4 A COM-401 Cryptography and security* Vaudenay SC 7 A EE-429 Fundamentals of VLSI Design Burg EL 4 A COM-402 Information security and privacy Hubaux/Oechslin SC 6 A COM-405 Mobile networks* Hubaux SC 4 P CS-412 Software security Payer IN 6 P COM-506 Student seminar: security protocols and applications* Oechslin/Vaudenay SC 3 P COM-407 TCP/IP Networking Le Boudec SC 6 A Crédits obligatoires *pour le Mineur en Cyber Security, au moins 17 crédits parmi ces cours doivent obligatoirement être acquis. * For the Minor in Information Security it will be mandatory to accumulate at least 17 credits from these courses. Légende : A = automne, P = printemps 1 semestre comprend 14 semaines."}
{"pack_id": "french_pack", "section_title": "Mineur Informatique", "page": 23, "chunk_id": "french_pack_23_0", "content": "23 2020-2021 Informatique Section d'Informatique Mineur disciplinaire Responsable : Mme Sylviane Dal Mas Les enseignants, les crédits et la période des cours sont indiqués sous réserve de modification. Les cours déjà suivis au bachelor ou au master ne peuvent pas être pris également dans un mineur. 140 crédits offerts Code Matières (liste indicative) PrérequisEnseignants Livret des cours Crédits Période des cours CS-250 1 Algorithms Svensson IN 6 A CS-208 2 Computer architecture I Stojilovic IN 4 A COM-208 3 Computer networks Argyraki SC 5 A CS-210 Functional programming Kuncak/Odersky IN 5 A CS-207 4 Programmation orientée système Chappelier IN 3 P CS-212 4 Projet programmation système Chappelier/Bugnion IN 2 P CS-322 6 Introduction to database systems 4 Ailamaki/Koch IN 4 P COM-301 7 Computer security 3 Troncoso IN 4 A CS-323 8 Introduction to operating systems 4 Payer IN 5 A CS-305 9 Software engineering 4 Candea IN 4 A CS-306 9 Software development project 4 Candea IN 4 P CS-330 12 Intelligence artificielle 1 Faltings IN 4 P CS-341 13 Introduction to computer graphics Pauly IN 6 P CS-450 Advanced algorithms Kapralov IN 7 P CS-470 Advanced computer architecture Ienne IN 6 p COM-401 Cryptography and security * Vaudenay SC 7 A CS-422 Database systems Ailamaki IN 7 P CS-438 Decentralized systems engineering Ford IN 6 A CS-451 Distributed algorithms Guerraoui SC 6 A CS-452 Foundations of software Odersky IN 4 A COM-402 Information security and privacy Hubaux/Oechslin SC 6 A CS-433 Machine learning Jaggi/Flammarion IN 7 A CS-440 Advanced computer graphics Jakob IN 6 P CS-442 Computer vision Fua IN 4 P CS-430 Intelligent agents Faltings IN 6 A CS-596 Optional project in computer science ** Divers enseignants IN 8 A ou P CS-455 Topics in theoretical computer science Kapralov IN 4 A ** - Inscription sur dossier; Seulement pour étudiants en 2ème année de Master; Superviser par un professeur en IC Légende : A = automne, P = printemps 1 semestre comprend 14 semaines."}
{"pack_id": "french_pack", "section_title": "Règlement d'application du contrôle des études", "page": 24, "chunk_id": "french_pack_24_0", "content": "24 RÈGLEMENT D'APPLICATION DU CONTRÔLE DES contrôles de connaissances écrits ou oraux durant le semestre, ÉTUDES DE LA SECTION selon indications de l’enseignant. D'INFORMATIQUE pour l’année académique 2020-2021 du 2 juin 2020 Chapitre 1 : Cycle propédeutique La direction de l'École polytechnique fédérale de Lausanne Art. 4 - Examen propédeutique vu l'ordonnance sur la formation menant au bachelor et au master de l'EPFL du 14 juin 2004, 1 L’examen propédeutique comprend des branches vu l'ordonnance sur le contrôle des études menant au bachelor et « Polytechniques » pour 31 coefficients et des branches au master à l'EPFL du 30 juin 2015, « Spécifiques » pour 29 coefficients, distribuées indifféremment vu le plan d’études de la section d’Informatique sur deux blocs. arrête: 2 Le premier bloc de branches correspond à 38 coefficients et le second bloc de branches correspond à 22 coefficients. Article premier - Champ d'application 3 L’examen propédeutique est réussi lorsque : Le présent règlement fixe les règles d’application du contrôle des - l’étudiant a obtenu, à l’issue de la session d’hiver, une moyenne études de bachelor et de master de la section d’Informatique qui égale ou supérieure à 3.50 dans le premier bloc, condition pour se rapportent à l’année académique 2020-2021. entrer au semestre de printemps, et - qu’il a obtenu, à l’issue de la session d’été, une moyenne égale Art. 2 – Étapes de formation ou supérieure à 4.00 dans chacun des deux blocs, condition pour entrer au cycle bachelor. 1 Le bachelor est composé de deux étapes successives de formation : 4 L’étudiant qui échoue l’examen propédeutique ne sera pas - le cycle propédeutique d’une année dont la réussite se traduit autorisé l’année suivante à répéter les branches de semestre pour par 60 crédits ECTS acquis en une fois, condition pour entrer au lesquelles il a obtenu une note égale ou supérieure à 4.00. cycle bachelor. Le cycle propédeutique est commun avec celui de la section de systèmes de communication. - le cycle bachelor s’étendant sur deux ans dont la réussite Chapitre 2 : Cycle bachelor implique l’acquisition de 120 crédits, condition pour entrer au master."}
{"pack_id": "french_pack", "section_title": "Règlement d'application du contrôle des études", "page": 24, "chunk_id": "french_pack_24_1", "content": "en une fois, condition pour entrer au lesquelles il a obtenu une note égale ou supérieure à 4.00. cycle bachelor. Le cycle propédeutique est commun avec celui de la section de systèmes de communication. - le cycle bachelor s’étendant sur deux ans dont la réussite Chapitre 2 : Cycle bachelor implique l’acquisition de 120 crédits, condition pour entrer au master. Art. 5 - Organisation 2 Le master effectué à l’EPFL est composé de deux étapes successives de formation : 1 Les enseignements du bachelor sont répartis en cinq blocs, - le cycle master d’une durée de 3 semestres dont la réussite le groupe « projet », le groupe « options » et le bloc transversal implique l’acquisition de 90 crédits, condition pour effectuer le SHS. projet de master. - le projet de master, d’une durée de 17 semaines à l’EPFL ou de 2 Le groupe « options » se compose de toutes les branches à 25 semaines hors EPFL (industrie ou autre haute école) et dont option figurant dans la liste du plan d’études de 2ème année et 3ème la réussite se traduit par l’acquisition de 30 crédits. Il est placé année. 28 crédits doivent être obtenus individuellement dans le sous la responsabilité d'un professeur ou MER affilié à la section groupe « options », dont 5 crédits dans les options de 2ème année. d’informatique ou de systèmes de communication. Les crédits pris en supplément des 5 crédits exigés de 2ème année peuvent être validés comme crédits à options de 3ème année. Art 3 – Sessions d’examen 3 En 3ème année, des cours comptant pour un maximum de 10 1 Les branches de session sont examinées pendant les crédits au total peuvent être choisis en dehors de la liste du plan sessions d’hiver ou d’été. Elles sont mentionnées dans le plan d’études. Les cours pris en dehors de cette liste doivent être d’études avec la mention H ou E. acceptés préalablement par le directeur de la section. 2 Les branches de semestre sont examinées pendant le Art. 6 - Examen de 2ème année semestre d’automne ou le semestre de printemps."}
{"pack_id": "french_pack", "section_title": "Règlement d'application du contrôle des études", "page": 24, "chunk_id": "french_pack_24_2", "content": "plan sessions d’hiver ou d’été. Elles sont mentionnées dans le plan d’études. Les cours pris en dehors de cette liste doivent être d’études avec la mention H ou E. acceptés préalablement par le directeur de la section. 2 Les branches de semestre sont examinées pendant le Art. 6 - Examen de 2ème année semestre d’automne ou le semestre de printemps. Elles sont mentionnées dans le plan d’études avec la mention sem A ou sem 1 Les 14 crédits du plan d’études sont obtenus lorsque le bloc P. A est réussi. 3 Une branche annuelle, c’est-à-dire dont l’intitulé tient sur 2 Les 17 crédits du plan d’études sont obtenus lorsque le bloc une seule ligne dans le plan d’étude, est examinée globalement B est réussi. pendant la session d’été (E). 3 Les 20 crédits du plan d’études sont obtenus lorsque le bloc 4 Pour les branches de session, la forme écrite ou orale de C est réussi. l’examen indiquée pour la session peut être complétée par des"}
{"pack_id": "french_pack", "section_title": "Règlement d'application du contrôle des études", "page": 25, "chunk_id": "french_pack_25_0", "content": "25 4 Les 5 crédits de 2ème année du groupe « options » Art. 10 - Examen du cycle master s’acquièrent de façon indépendante, par réussite individuelle de chaque branche. 1 Le bloc “ Projets et SHS” est réussi lorsque 18 crédits sont obtenus. Art. 7 - Examen de 3e année 2 Le groupe « Core courses et Options », composé du groupe 1 Les 17 crédits du plan d’études sont obtenus lorsque le bloc 1 « Core courses » et du groupe 2 « Options » est réussi lorsque D est réussi. 72 crédits sont obtenus. 2 Les 8 crédits du plan d’études sont obtenus lorsque le 3 Le groupe 1 « Core courses » est réussi lorsqu’au moins 30 bloc E est réussi. crédits sont obtenus. 3 Les 8 crédits du groupe « projet » s’acquièrent de façon indépendante, par réussite individuelle du projet. Art. 11 - Enseignement SHS 4 Les 23 crédits de 3ème année du groupe « options » Les deux branches SHS donnent chacune lieu à 3 crédits. s’acquièrent de façon indépendante, par réussite individuelle de L’enseignement du semestre d’automne introduit à la réalisation chaque branche. du projet du semestre de printemps. Pour autant qu’il considère que le motif est justifié, le Collège des Humanités peut déroger Art. 8 - Examen de 2ème et 3ème années à cette organisation. Il peut également autoriser à ce qu’un étudiant réalise son projet sur un semestre qui ne suit pas Le bloc « SHS et MGT transversal » est réussi lorsque les 8 immédiatement celui dans lequel a lieu l’enseignement crédits du plan d’études sont obtenus. d’introduction. Art. 12 - Mineurs et spécialisations Chapitre 3 : Cycle master 1 Afin d’approfondir un aspect particulier de sa formation ou de développer des interfaces avec d’autres sections, l’étudiant peut choisir la formation offerte dans le cadre d'un mineur Art. 9 - Organisation figurant dans l’offre de l’EPFL ou d’une spécialisation de la section d’Informatique. 1 Les enseignements du cycle master sont répartis en un bloc “ Projets + SHS” et deux groupes dont les crédits doivent être 2 Le choix"}
{"pack_id": "french_pack", "section_title": "Règlement d'application du contrôle des études", "page": 25, "chunk_id": "french_pack_25_1", "content": "de développer des interfaces avec d’autres sections, l’étudiant peut choisir la formation offerte dans le cadre d'un mineur Art. 9 - Organisation figurant dans l’offre de l’EPFL ou d’une spécialisation de la section d’Informatique. 1 Les enseignements du cycle master sont répartis en un bloc “ Projets + SHS” et deux groupes dont les crédits doivent être 2 Le choix des cours qui composent un mineur se fait avec la obtenus de façon indépendante. Ils peuvent donner lieu à section d’informatique et avec le responsable du mineur. Les l’obtention d’une spécialisation ou d’un mineur. mineurs « Data Science », « Cyber security », « Informatique » et « Systèmes de communication » ne peuvent pas être choisis. 2 Le Bloc “ Projets + SHS” est composé d’un projet de 12 crédits et de l’enseignement SHS. 3 Le choix des cours qui composent une spécialisation est soumis, pour concertation à la section d’informatique. 3 Le groupe 1 « Core courses » est composé des cours de la liste du plan d’études dans la rubrique « Master ». 4 L’étudiant annonce le choix d’un mineur à sa section au plus tard à la fin du premier semestre des études de master. 4 Le groupe 2 « Options » est composé - des cours de la liste du groupe 2 « options » du plan 5 L’étudiant qui choisit une spécialisation dans la liste d’études dans la rubrique « Master » ; figurant dans le plan d’études s’inscrit au plus tard au début du - des crédits surnuméraires obtenus dans le groupe 1 troisième semestre des études de master. « Core courses » ; - d’un projet optionnel de 8 crédits suivant l’alinéa 5 ; 6 Un mineur ou une spécialisation est réussi quand 30 crédits - de cours hors plan d’études suivant l’alinéa 6 ; au minimum sont obtenus parmi les branches avalisées. - de cours liés à une spécialisation ou un mineur suivant l’art.13, Chapitre 4 : Stage et projet de master 5 Le projet du bloc “ Projets et SHS” et le projet optionnel du groupe 2 « Options »"}
{"pack_id": "french_pack", "section_title": "Règlement d'application du contrôle des études", "page": 25, "chunk_id": "french_pack_25_2", "content": "quand 30 crédits - de cours hors plan d’études suivant l’alinéa 6 ; au minimum sont obtenus parmi les branches avalisées. - de cours liés à une spécialisation ou un mineur suivant l’art.13, Chapitre 4 : Stage et projet de master 5 Le projet du bloc “ Projets et SHS” et le projet optionnel du groupe 2 « Options » ne peuvent être effectués dans le même semestre. Art. 13 – Stage d’ingénieur 6 Des cours, comptant pour un maximum de 15 crédits au 1 Les étudiants commençant leur cycle master doivent total, peuvent être choisis en dehors de la liste des cours sur le effectuer un stage d’ingénieur durant leur master : plan d’études dans la rubrique « Master ». Le choix de ces cours - soit un stage d’été de minimum 8 semaines doit être accepté préalablement par le directeur de la section qui - soit un stage de 6 mois en entreprise (en statut stage durant un peut augmenter le maximum de 15 crédits si la demande est semestre). Durant la période du COVID-19, la durée du stage peut justifiée. être adaptée."}
{"pack_id": "french_pack", "section_title": "Règlement d'application du contrôle des études", "page": 26, "chunk_id": "french_pack_26_0", "content": "26 - soit un Projet de Master de 25 semaines en entreprise (valide le stage et le Projet de Master) Chapitre 6 : Mobilité 2 Le stage peut être effectué dès le 2ème semestre du cycle master, mais avant le projet de master. Art. 16 – Périodes de mobilité autorisées 3 L’étudiant ne peut pas faire de cours/projet en parallèle à son Les étudiants de la section d’informatique peuvent effectuer un stage. séjour de mobilité en 3ème année de bachelor et/ou dans le cadre du projet de master. 4 Le responsable du stage de la section évalue le stage, par l’appréciation « réussi » ou « non réussi ». Sa réussite sera une Art. 17 - Conditions condition pour l’admission au projet de master. En cas de non réussite, il pourra être répété une fois, en règle générale dans une 1 Pour une mobilité en 3ème année de bachelor, l’étudiant doit autre entreprise. avoir réussi l’examen propédeutique avec une moyenne minimale de 4,5 et ne pas avoir de retard dans l’acquisition des 5 Il est validé avec les 30 crédits du projet de master. 60 crédits de la 2ème année de bachelor. 6 Les modalités d’organisation et les critères de validation du 2 Pour une mobilité au projet de master, l’étudiant doit avoir stage font l’objet d’une directive interne à la section. réussi le cycle master. 3 Des conditions spécifiques existant en fonction des Chapitre 5 : Spécialisation Enseignement destinations, l’accord du délégué à la mobilité est nécessaire pour partir en séjour de mobilité. Art. 14 – Spécialisation Enseignement 1. Les étudiants en Master Informatique ont la possibilité de suivre une spécialisation en informatique pour l’enseignement. 2. L’étudiant admis à cette spécialisation ne peut pas suivre de Au nom de la direction de l'EPFL spécialisation ou de mineur. Le plan d’études est modifié comme suit : (i) Un nouveau groupe de 30 ECTS de cours à la HEP Vaud Le président, M. Vetterli est rajouté et le nombre de ECTS du Cycle Master passe de 60 à Le vice-président pour l’éducation, P. Vandergheynst 30 ECTS ; (ii) les cours SHS"}
{"pack_id": "french_pack", "section_title": "Règlement d'application du contrôle des études", "page": 26, "chunk_id": "french_pack_26_1", "content": "la direction de l'EPFL spécialisation ou de mineur. Le plan d’études est modifié comme suit : (i) Un nouveau groupe de 30 ECTS de cours à la HEP Vaud Le président, M. Vetterli est rajouté et le nombre de ECTS du Cycle Master passe de 60 à Le vice-président pour l’éducation, P. Vandergheynst 30 ECTS ; (ii) les cours SHS sont remplacés par un cours à la HEP Vaud ; (iii) le Projet de Master peut s’étaler sur deux semestres et commencer après que l’étudiant ait complété le bloc Lausanne, le 2 juin 2020 « Projets et SHS » et le groupe « Core courses » ; (iv) la durée maximale des études ne peut pas dépasser 8 semestres. 3. Au moins 50 ECTS doivent avoir été obtenus pour débuter la spécialisation. Art. 15 – Procédure d’admission 1. L’admission à cette spécialisation n’est pas automatique. Pour être admis à la spécialisation, le candidat doit être inscrit au Master en Informatique de l’EPFL et répondre aux conditions pour l’admission au Diplôme d’enseignement pour le degré secondaire II fixées par le Règlement d’application de la loi sur la HEP du 3 juin 2009 (RLHEP). 2. L’étudiant s’inscrit auprès de la HEP Vaud selon les conditions et délais de la candidature en ligne et transmet les pièces requises par le RLHEP ainsi qu’une attestation d’immatriculation à l’EPFL."}
{"pack_id": "french_pack", "section_title": "Passerelle HES", "page": 27, "chunk_id": "french_pack_27_0", "content": "27 2020-2021 INFORMATIQUE / CYBERSECURITE Passerelle HES Code Matière Enseignants Sections Semestre Crédits Période Type sous réserve AUT PRI des examen de modification c e p c e p épreuves Proposition de cours 60 crédits du Bachelor pour passer au Master : Branches de bases 33 CS-250 Algorithms Svensson IN 4 2 6 H écrit MATH-203c Analyse III Struett MA 2 2 4 H écrit CS-208 Computer architecture I Stojilovic IN 2 2 4 H écrit COM-208 Computer networks Argyraki SC 2 2 5 H écrit PHYS-114 General physics : electromagnetism Dil PH 2 2 4 H écrit MATH-232 Probabilities and statistics Abbé MA 4 2 6 E écrit CS-251 Theory of computation Göös IN 2 2 4 E écrit Branches d'approfondissement 26 CS-210 Functional programming Kuncak/Odersky IN 2 2 5 H écrit CS-322 Introduction to database systems Ailamaki /Koch IN 2 1 1 4 E écrit CS-323 Introduction to operating systems Payer IN 2 1 2 5 H écrit CS-206 Parallelism and concurrency Kuncak / Odersky IN 1 1 2 4 sem P CS-305 Software engineering Candea IN 2 1 1 4 H écrit CS-306 Software development project Candea IN 4 4 sem P Totaux 18 12 5 9 6 7 59 Totaux par semaine 35 22 Légende : colonnes c/e/p : nb d'heures par semaine 1 semestre comprend 14 semaines. type examination : voir règlement d'application"}
{"pack_id": "french_pack", "section_title": "Règlement d'application du contrôle des études de la passerelle HES", "page": 28, "chunk_id": "french_pack_28_0", "content": "28 RÈGLEMENT D’APPLICATION DU CONTRÔLE Art. 2 - Inscription anticipée au master DES ÉTUDES CONCERNANT LA PASSERELLE HES- EPFL Pour s’inscrire aux branches de master, au moins 30 crédits pour l’année académique 2020-2021 doivent être acquis dans les branches de la passerelle du 2 juin 2020 (branches prises individuellement). Art. 3 - Conditions de réussite de la passerelle La direction de l'École polytechnique fédérale de Lausanne, 1. La passerelle est réussie lorsque ses crédits sont obtenus Vu l’art. 9 de l’ordonnance du Conseil des hautes écoles sur dans un délai de deux ans au maximum. Ces crédits sont la coordination de l’enseignement du 29 novembre 2019 ; obtenus par une moyenne des branches égale ou supérieure à Vu l’art. 11 de l’ordonnance concernant l’admission à l’EPFL 4.00 pour chacun des deux blocs de la passerelle. du 8 mai 1995 ; vu les art. 1 et 8 de la directive sur les programmes de master 2. L’obtention de moins de 30 crédits dans les branches de et les mineurs, du 17 octobre 2005 ; la passerelle (branches prises individuellement) au terme des vu l'ordonnance sur la formation menant au bachelor et au examens de la première année entraîne un échec définitif. master de l'EPFL du 14 juin 2004 ; vu l'ordonnance sur le contrôle des études menant au bachelor Art. 4 - Règles applicables en deuxième année et au master à l'EPFL du 30 juin 2015 ; 1. Celui qui doit obtenir des crédits manquants sur une arrête : deuxième année demeure soumis au règlement de passerelle qui se rapporte à sa première année (année d’admission à la Art. 1 - Passerelle HES-EPFL passerelle). 1. Le présent règlement fixe les règles spécifiques à 2. La répétition d’une branche est exécutée conformément l’admission à la formation de master de l’EPFL sur la base aux règles de la branche pour l’année de la répétition. d’un titre de bachelor HES (passerelle HES-EPFL ; ci-après la passerelle) qui se rapportent à l’année académique Art. 5 - Période des cours et épreuves 2019-2020. S’appliquent au surplus les règles d’études générales à l’EPFL, en particulier celles figurant"}
{"pack_id": "french_pack", "section_title": "Règlement d'application du contrôle des études de la passerelle HES", "page": 28, "chunk_id": "french_pack_28_1", "content": "l’admission à la formation de master de l’EPFL sur la base aux règles de la branche pour l’année de la répétition. d’un titre de bachelor HES (passerelle HES-EPFL ; ci-après la passerelle) qui se rapportent à l’année académique Art. 5 - Période des cours et épreuves 2019-2020. S’appliquent au surplus les règles d’études générales à l’EPFL, en particulier celles figurant dans son 1. Les cours de la passerelle débutent à la rentrée du ordonnance sur le contrôle des études. semestre d’automne. L’entrée en cours d’année est exclue. 2. Le bachelor HES avec une moyenne minimale 2. Conformément aux règles de l’EPFL, correspondant à la notation de 5.0 de l’EPFL permet - les branches de session sont examinées aux l’admission à un master EPFL dans la discipline sessions d’examens d’hiver ou d’été correspondante, avec condition de réussite de la passerelle. correspondantes avec d’éventuelles épreuves de semestre, 3. La passerelle complète la formation HES par l’obtention - les branches de semestre sont examinées pendant le à l’EPFL de 57 à 60 crédits en sciences de base, en ingénierie semestre correspondant, et ou en architecture, suivant le master suivi. - les branches annuelles sont examinées à la session d’examens d’été ponctuant l’année académique. 4. Les branches permettant l’obtention des crédits de la passerelle sont divisées en un bloc de branches de base et un bloc de branches d’approfondissement. Chacun des deux blocs comprend entre 25 et 35 crédits. 5. Aux branches permettant d’acquérir les crédits de la passerelle, peuvent s’ajouter les éventuelles branches prérequises pour les branches du master suivi, conformément au livret de cours correspondant. 6. La réussite de la passerelle permet l’admission définitive au master. Elle ne donne lieu à aucun titre. Au nom de la direction de l'EPFL Le président, M. Vetterli Le vice-président pour l’éducation, P. Vandergheynst Lausanne, le 2 juin 2020"}
{"pack_id": "french_pack", "section_title": "Descriptifs Cycle Propédeutique", "page": 29, "chunk_id": "french_pack_29_0", "content": "29 INFORMATIQUE Cycle Propédeutique (1ère année) 2020 / 2021"}
{"pack_id": "french_pack", "section_title": "Advanced information, computation, communication I", "page": 31, "chunk_id": "french_pack_31_0", "content": "31 2020-2021COURSEBOOKLET CS-101 Advanced information, computation, communication I AbererKarl Cursus Sem. Type Language English Cybersecurityminor H Opt. Coefficient 7 Informatique BA1 Obl. Session Winter Semester Fall Systèmesdecommunication BA1 Obl. Exam Written Workload 210h Weeks 14 Hours 6weekly Lecture 4weekly Exercises 2weekly Numberof positions Remark Thiscoursefocusesonthefoundational,discretemathematicscoreofadvancedcomputation. Summary Discretemathematicsisadisciplinewithapplicationstoalmostallareasofstudy.Itprovidesasetofindispensabletools tocomputerscienceinparticular.Thiscoursereviews(familiar)topicsasdiverseasmathematicalreasoning, combinatorics,discretestructures&algorithmicthinking. Content I.Mathematicalreasoning:propositionallogic,propositionalfunctions,quantifiers,rulesofinference;thisincludesvery basiclogiccircuits. II.Setsandcounting:cardinalities,inclusion/exclusionprinciple,sequencesandsummations. III.Algorithmsandcomplexity:basicalgorithms,computationalcomplexity,big-Onotationandvariants,countability. IV.Numberrepresentationssuchasbinaryandhexadecimaland(postponedto2ndsemester)basicnumbertheory: modulararithmetic,integerdivision,primenumbers,hashfunctions,pseudorandomnumbergeneration;applications. V.Inductionandrecursion:mathematicalinduction,recursivedefinitionsandalgorithms. VI.Basiccombinatorialanalysis:permutations,binomialtheorem,basicgeneratingfunctions. VII.Basicprobability:events,independence,randomvariables,Bayes'theorem. VIII.Structureofsets:relations,equivalencerelations,powerset. IX.(timepermitting)Elementarygraphtheory:graphs,EulerandHamiltonpaths,Dijkstra'salgorithm,spanningtrees. Keywords Propositionallogic,counting,complexity,big-O,numberrepresentations,sets,matrices,modulararithmetic,induction, basicprobabilities,Bayestheorem,combinatorialanalysis,recurrences,generatingfunctions,countability,graphtheory. LearningOutcomes Bytheendofthecourse,thestudentmustbeableto: •Recognizeifthereisamistakeina(simple)proof •Applygeneralproblem-solvingtechniques •Recognizethemathematicalstructurespresentinapplications •Applysimplerecursionanduseittodesignrecursivealgorithms •Applythetoolsstudiedinclasstosolveproblems •Demonstratefamiliaritywithmathematicalreasoning •Solvelinearrecurrencesandusegeneratingfunctions •Argueabout(un)countability •Formulatecomplete,clearmathematicalproofs Advancedinformation,computation,communicationI Page1/2"}
{"pack_id": "french_pack", "section_title": "Advanced information, computation, communication I", "page": 32, "chunk_id": "french_pack_32_0", "content": "32 2020-2021COURSEBOOKLET Transversalskills •Assessone'sownlevelofskillacquisition,andplantheiron-goinglearninggoals. •Continuetoworkthroughdifficultiesorinitialfailuretofindoptimalsolutions. •Demonstratethecapacityforcriticalthinking Teachingmethods Excathedralectures Expectedstudentactivities Studyingthebook,testyourunderstandingbymakingtheexercises,askquestions Assessmentmethods Finalexam(100%),mostly(andpossiblyexclusively)multiplechoice Supervision Officehours No Assistants Yes Forum No Others Alistofstudentsassistantsandtheircontactdatawillbemadeavailableonthemoodlepage forthiscourse,alongwithanassignmentofeachregisteredstudenttooneofthestudent assistants. Ifyouhaveaquestion,firstcontactthestudentassistantassignedtoyou.Ifthatdoesnothelp, contactoneoftheteachingassistants(NegarForoutan,BanaeiMohammadreza).Furthermore, youarealwayswelcometodropmeanemail(karl.aberer@epfl.ch)foranytypeofquestion relatedtothiscourseoryourstudyatEPFL. Neverhesitatetoaskquestionsbefore,duringorafterthelectures! Resources Bibliography \"DiscreteMathematicsandItsApplications\",KennethH.Rosen,8thed,McGraw-Hill2019.(Youshouldbe abletofindthepdfontheweb.) Ressourcesenbibliothèque •Discretemathematicsanditsapplications/Rosen Websites •http://willbeprovidedlater,ifany MoodleLink •http://willbeprovidedlater Advancedinformation,computation,communicationI Page2/2"}
{"pack_id": "french_pack", "section_title": "Advanced information, computation, communication II", "page": 33, "chunk_id": "french_pack_33_0", "content": "33 2020-2021COURSEBOOKLET COM-102 Advanced information, computation, communication II GastparMichaelC.,RimoldiBixio Cursus Sem. Type Language English Informatique BA2 Obl. Coefficient 7 Systèmesdecommunication BA2 Obl. Session Summer Semester Spring Exam Written Workload 210h Weeks 14 Hours 6weekly Lecture 4weekly Exercises 2weekly Numberof positions Summary Text,sound,andimagesareexamplesofinformationsourcesstoredinourcomputersand/orcommunicatedoverthe Internet.Howdowemeasure,compress,andprotecttheinformatintheycontain? Content I.Howtomeasureinformation.Sourceandprobability.Entropypersymbol.Sourcecoding. II.Cryptographyandinformationsecurity.Modulararithmetic,modernalgebraandnumbertheory.TheChinese remaindertheoremandRSA. III.Protectinginformation.Afewfinitefields.Linearspeaces.Hammingdistance.Linearcodes.Reed-Solomoncodes. Keywords Shannon'sentropy Linearcodes Reed-Solomoncodes Numbertheory AsymmetricCryptography,RSA LearningOutcomes Bytheendofthecourse,thestudentmustbeableto: •UnderstandShannon'sentropy •Constructanoptimalcode •Understandelementarynumbertheory •Knowwhatanabeliangroupis •Recognizeahiddenisomorphism •KnowhowRSAworks •Knowafewlinearcodesonsimplefinitefields Transversalskills •Takefeedback(critique)andrespondinanappropriatemanner. •Assessone'sownlevelofskillacquisition,andplantheiron-goinglearninggoals. Teachingmethods Advancedinformation,computation,communicationII Page1/2"}
{"pack_id": "french_pack", "section_title": "Advanced information, computation, communication II", "page": 34, "chunk_id": "french_pack_34_0", "content": "34 2020-2021COURSEBOOKLET Excathedrrawithexercises Expectedstudentactivities Homework(writtenandgrades)everweek. Assessmentmethods Continuousevaluations10%andfinalexam90% Resources Bibliography \"Sciencesdel'information\",J.-Y.LeBoudec,R.UrbankeetP.Thiran,online Ressourcesenbibliothèque • Introductionauxsciencesdel'information:entropie,compression,chiffrementetcorrectiond'erreurs/LeBoudec MoodleLink •http://moodle.epfl.ch/course/view.php?id=851 Advancedinformation,computation,communicationII Page2/2"}
{"pack_id": "french_pack", "section_title": "Algèbre linéaire", "page": 35, "chunk_id": "french_pack_35_0", "content": "35 2020-2021LIVRETDECOURS MATH-111(e) Algèbre linéaire UrechChristianLucius Cursus Sem. Type Langue français Informatique BA1 Obl. Coefficient 6 Systèmesdecommunication BA1 Obl. Session Hiver Semestre Automne Examen Ecrit Charge 180h Semaines 14 Heures 6hebdo Cours 4hebdo Exercices 2hebdo Nombrede places Résumé L'objectifducoursestd'introduirelesnotionsdebasedel'algèbrelinéaireetsesapplications. Contenu 1. Systèmeslinéaires 2. Algèbrematricielle 3. Espacesvectoriels 4. Basesetdimension 5. Applicationslinéairesetmatrices 6. Ledéterminantd'unematrice 7. Valeurspropres,vecteurspropres,etdiagonalisation 8. Produitscalaire 9. Matricesorthogonalesetmatricessymétriques Mots-clés espacevectoriel,linéarite,matrice,déterminant,orthogonalité,produitscalaire Compétencesrequises Coursprérequisindicatifs coursdebase Acquisdeformation Alafindececoursl'étudiantdoitêtrecapablede: •Effectuerdescalculsstandardsenalgèbrelinéaireeteninterprêterlesrésultats; •Définirdesconceptsthéoriquesrelevantsdel'algèbrelinéaireetendonnerdesexemplesillustratifs; •Identifierdesexemplesdeconceptsthéoriquesrelevantsdel'algèbrelinéaire; •Construirerigoureusementunraisonnementlogiquesimple; •Identifierquelquesliensentrel'algèbrelinéaireetd'autresbranchesdesmathématiques. Méthoded'enseignement Coursexcathedra,exercicesensalle Méthoded'évaluation Algèbrelinéaire Page1/2"}
{"pack_id": "french_pack", "section_title": "Algèbre linéaire", "page": 36, "chunk_id": "french_pack_36_0", "content": "36 2020-2021LIVRETDECOURS examenécrit Encadrement Officehours Non Assistants Oui Forumélectronique Oui Ressources Bibliographie Algèbrelinéaireetapplications,DavidC.Lay,5eedition,editeur:Pearson,ISBN:978-2-7613-9109-2 Ressourcesenbibliothèque •Algèbrelinéaireetapplications/Lay Préparationpour AlgèbreLinéaireII;AnalyseII Algèbrelinéaire Page2/2"}
{"pack_id": "french_pack", "section_title": "Algèbre linéaire (anglais)", "page": 37, "chunk_id": "french_pack_37_0", "content": "37 2020-2021COURSEBOOKLET MATH-111(en) Algèbre linéaire (anglais) MaddocksJohnH. Cursus Sem. Type Language English Chimieetgéniechimique BA1 Obl. Coefficient 6 Géniecivil BA1 Obl. Session Winter Semester Fall Géniemécanique BA1 Obl. Exam Written Génieélectriqueetélectronique BA1 Obl. Workload 180h Weeks 14 Informatique BA1 Obl. Hours 6weekly Ingénieriedessciencesduvivant BA1 Obl. Lecture 4weekly Microtechnique BA1 Obl. Exercises 2weekly Numberof 308 Scienceetgéniedesmatériaux BA1 Obl. positions Sciencesetingénieriedel'environnement BA1 Obl. Systèmesdecommunication BA1 Obl. Summary Thepurposeofthecourseistointroducethebasicnotionsoflinearalgebraanditsapplications. Content 1. Linearsystems; 2. Matrixalgebra; 3. Vectorspaces; 4. Basesanddimension; 5. Linearapplicationsandmatrices; 6. Determinantofamatrix; 7. Eigenvaluesandeigenvectors; 8. Innerproduct,orthogonality,quadraticforms; 9. Orthogonal&SymmetricMatrices Keywords vectorspace,linearity,matrix,determinant,orthogonality,innerproduct LearningOutcomes Bytheendofthecourse,thestudentmustbeableto: •Accuratelymakestandardcomputationsrelevanttolinearalgebraandinterprettheresults; •Defineandprovideillustrativeexamplesofrelevanttheoreticalnotions; •Identifyexamplesofrelevanttheoreticalnotions; •Constructasimplelogicalargumentrigorously; •Identifysomeconnectionsbetweenlinearalgebraandotherbranchesofmathematics. Teachingmethods Lecturesandexercisesintheclassroom Assessmentmethods Writtenexam Supervision Algèbrelinéaire(anglais) Page1/2"}
{"pack_id": "french_pack", "section_title": "Algèbre linéaire (anglais)", "page": 38, "chunk_id": "french_pack_38_0", "content": "38 2020-2021COURSEBOOKLET Officehours No Assistants Yes Forum No Resources Bibliography LinearAlgebraanditsApplications/D.C.Layetal,preferably5thedition Ressourcesenbibliothèque •LinearAlgebraanditsApplications/Lay Prerequisitefor AnalysisII,IIIandIV,NumericalAnalysisStatistics Algèbrelinéaire(anglais) Page2/2"}
{"pack_id": "french_pack", "section_title": "Algèbre linéaire (classe inversée)", "page": 39, "chunk_id": "french_pack_39_0", "content": "39 2020-2021LIVRETDECOURS MATH-111(pi) Algèbre linéaire (classe inversée) Cursus Sem. Type Langue français Chimieetgéniechimique BA1 Obl. Coefficient 6 Géniecivil BA1 Obl. Session Hiver Semestre Automne Géniemécanique BA1 Obl. Examen Ecrit Génieélectriqueetélectronique BA1 Obl. Charge 180h Semaines 14 Informatique BA1 Obl. Heures 6hebdo Ingénieriedessciencesduvivant BA1 Obl. Cours 4hebdo Microtechnique BA1 Obl. Exercices 2hebdo Nombrede 100 Scienceetgéniedesmatériaux BA1 Obl. places Sciencesetingénieriedel'environnement BA1 Obl. Systèmesdecommunication BA1 Obl. Remarque Pasdonnéen2020-21Courspilotemercideconsulterhttp://go.epfl.ch/algebre-piloteavantdevousinscrire.Envous inscrivant,vousacceptezquedesdonnéessurvotreapprentissagesoientcollectée Résumé L'objectifducoursestd'introduirelesnotionsdebasedel'algèbrelinéaireetsesapplications.Cetteclassepiloteest donnésousformeinversée. Contenu 1. Systèmeslinéaires 2. Algèbrematricielle 3. Espacesvectoriels 4. Basesetdimension 5. Applicationslinéairesetmatrices 6. Ledéterminantd'unematrice 7. Valeurspropres,vecteurspropres,etdiagonalisation 8. Produitsscalairesetespaceseuclidiens 9. Matricesorthogonalesetmatricessymétriques Mots-clés espacevectoriel,linéarite,matrice,déterminant,orthogonalité,produitscalaire Compétencesrequises Coursprérequisindicatifs coursdebase Acquisdeformation Alafindececoursl'étudiantdoitêtrecapablede: •Effectuerdescalculsstandardsenalgèbrelinéaireeteninterpréterlesrésultats; •Définirdesconceptsthéoriquesrelevantsdel'algèbrelinéaireetendonnerdesexemplesillustratifs; •Identifierdesexemplesdeconceptsthéoriquesrelevantsdel'algèbrelinéaire; •Construirerigoureusementunraisonnementlogiquesimple; •Identifierquelquesliensentrel'algèbrelinéaireetd'autresbranchesdesmathématiques. Algèbrelinéaire(classeinversée) Page1/2"}
{"pack_id": "french_pack", "section_title": "Algèbre linéaire (classe inversée)", "page": 40, "chunk_id": "french_pack_40_0", "content": "40 2020-2021LIVRETDECOURS Méthoded'enseignement Coursexcathedra,exercicesensalle. Lecoursestsousformeclasseinversée.L'étudiantdevrasepréparerauxséancesenclasseensuivantlecourssurle MOOC. Méthoded'évaluation Examenécrit Encadrement Officehours Non Assistants Oui Forumélectronique Oui Ressources Bibliographie Algèbrelinéaireetapplications,DavidC.Lay,5eedition,editeur:Pearson,ISBN978-2-7613-9109-2(pas besoindeMonLab) Algèbrelinéaireetapplications,DavidC.Lay,4eedition,editeur:Pearson,ISBN:978-2-7440-7583-4 Ressourcesenbibliothèque •Algèbrelinéaireetapplications/Lay Sitesweb •https://courseware.epfl.ch/courses/course-v1:EPFL+AlgebreLineaire+2018 LiensMoodle •http://moodle.epfl.ch/course/search.php?search=MATH-111%28pi%29 •http://moodle.epfl.ch/course/view.php?id=15414 Préparationpour Suitedesétudeseningénierie. Algèbrelinéaire(classeinversée) Page2/2"}
{"pack_id": "french_pack", "section_title": "Analyse I", "page": 41, "chunk_id": "french_pack_41_0", "content": "41 2020-2021LIVRETDECOURS MATH-101(e) Analyse I LachowskaAnna Cursus Sem. Type Langue français Informatique BA1 Obl. Coefficient 6 Systèmesdecommunication BA1 Obl. Session Hiver Semestre Automne Examen Ecrit Charge 180h Semaines 14 Heures 6hebdo Cours 4hebdo Exercices 2hebdo Nombrede places Résumé Étudierlesconceptsfondamentauxd'analyseetlecalculdifférentieletintégraldesfonctionsréellesd'unevariable. Contenu -Raisonner,démontreretargumenterenmathématiques -Nombres,structuresetfonctions -Suites,limitesetcontinuité -Sériesnumériques -Fonctionsréellesetprocessusdelimite -Calculdifférentieletintégral Mots-clés nombresréels,fonction,suitenumérique,suiteconvergente/divergente,limited'unesuite,sous-suite,fonction,limite d'unefonction,fonctioncontinue,sérienumérique,sérieconvergente/divergente,convergenceabsolue,dérivée,classe C^k,théorème(s)desaccroissementsfinis,développementlimité,sérieentière,intégraledeRiemann,primitive, théorèmedelavaleurmoyenne Acquisdeformation •Lebutfondamentaldececoursestd'acquérirlescompétencessuivantes: •Raisonnerrigoureusementpouranalyserdesproblèmes •Choisirousélectionnerlesoutilsd'analysepertinentspourrésoudredesproblèmes •Identifierlesconceptsinhérentsàchaqueproblème •Appliquerefficacementlesconceptspourrésoudrelesexercicessimilairesauxexemplesetexercicestraitésau cours •Semontrercapabled'analyseretderésoudredesproblèmesnouveaux •Résoudrelesproblèmesdeconvergence,desuitesetdeséries •Maîtriserlestechniquesducalculdifférentieletintégral •Parmilesoutilsdebase,ontrouvelesnotionsdeconvergence,desuitesetdeséries.Lesfonctionsd'unevariable serontétudiéesrigoureusement,avecpourbutunecompréhensionapprofondiedestechniquesducalculdifférentielet intégral. Méthoded'enseignement Coursexcathedraetexercicesensalle Méthoded'évaluation AnalyseI Page1/2"}
{"pack_id": "french_pack", "section_title": "Analyse I", "page": 42, "chunk_id": "french_pack_42_0", "content": "42 2020-2021LIVRETDECOURS Examenécrit Encadrement Officehours Non Assistants Oui Forumélectronique Non Autres Tutoratdesexercices autresmesuresàdéfinir Ressources Bibliographie JacquesDouchetandBrunoZwahlen:Calculdifférentieletintégral.Volume1.PPUR,2016. Ressourcesenbibliothèque •(versionélectronique) •Calculdifférentieletintégral/Douchet&Zwahlen AnalyseI Page2/2"}
{"pack_id": "french_pack", "section_title": "Analyse I (allemand)", "page": 43, "chunk_id": "french_pack_43_0", "content": "43 2020-2021LIVRETDECOURS MATH-101(de) Analyse I (allemand) KressnerDaniel Cursus Sem. Type Langue allemand Chimieetgéniechimique BA1 Obl. Coefficient 6 Géniecivil BA1 Obl. Session Hiver Semestre Automne Géniemécanique BA1 Obl. Examen Ecrit Génieélectriqueetélectronique BA1 Obl. Charge 180h Semaines 14 Informatique BA1 Obl. Heures 6hebdo Ingénieriedessciencesduvivant BA1 Obl. Cours 4hebdo Microtechnique BA1 Obl. Exercices 2hebdo Nombrede 60 Scienceetgéniedesmatériaux BA1 Obl. places Sciencesetingénieriedel'environnement BA1 Obl. Systèmesdecommunication BA1 Obl. Résumé EswerdendieGrundlagenderAnalysissowiederDifferential-undIntegralrechnungvonFunktioneneinerreellen Veränderlichenerarbeitet. Contenu -MathematischesBegründen,Beweisen,undArgumentieren -Funktionen -Folgen,GrenzwerteundStetigkeit -Reihen -ReelleFunktionenundGrenzwerte -Differential-undIntegralrechnung Mots-clés Funktionen,Folge,konvergente/divergenteFolge,GrenzwerteinerFolge,Teilfolge,GrenzwerteinerFunktion,stetige Funktion,Reihe,konvergente/divergenteReihe,absoluteKonvergenz,Ableitung,FunktionsklasseC^k,Mittelwertsatz derDifferentialrechnung,Taylor-Entwicklung,Potenzreihe,Riemann-Integral,Stammfunktion,Mittelwertsatzder Integralrechnung Acquisdeformation •Raisonnerrigoureusementpouranalyserdesproblèmes •Choisirousélectionnerlesoutilsd'analysepertinentspourrésoudredesproblèmes •Identifierlesconceptsinhérentsàchaqueproblème •Appliquerefficacementlesconceptspourrésoudrelesexercicessimilairesauxexemplesetexercicestraitésau cours •Résoudrelesproblèmesdeconvergence,desuitesetdeséries •Analyserdesproblèmesnouveaux Compétencestransversales AnalyseI(allemand) Page1/2"}
{"pack_id": "french_pack", "section_title": "Analyse I (allemand)", "page": 44, "chunk_id": "french_pack_44_0", "content": "44 2020-2021LIVRETDECOURS •Utiliseruneméthodologiedetravailappropriée,organiserun/sontravail. •Auto-évaluersonniveaudecompétenceacquiseetplanifiersesprochainsobjectifsd'apprentissage. •Gérersespriorités. •Persévérerdansladifficultéouaprèsunéchecinitialpourtrouverunemeilleuresolution. Méthoded'enseignement VorlesungenundTutorien Méthoded'évaluation SchriftlicheKlausur Encadrement Officehours Non Assistants Oui Forumélectronique Oui Ressources Servicedecoursvirtuels(VDI) Non Polycopiés EinergänzendesdeutschsprachigesVorlesungsskriptwirdzurVerfügunggestellt. AnalyseI(allemand) Page2/2"}
{"pack_id": "french_pack", "section_title": "Analyse I (anglais)", "page": 45, "chunk_id": "french_pack_45_0", "content": "45 2020-2021COURSEBOOKLET MATH-101(en) Analyse I (anglais) SvaldiRoberto Cursus Sem. Type Language English Chimieetgéniechimique BA1 Obl. Coefficient 6 Géniecivil BA1 Obl. Session Winter Semester Fall Géniemécanique BA1 Obl. Exam Written Génieélectriqueetélectronique BA1 Obl. Workload 180h Weeks 14 Informatique BA1 Obl. Hours 6weekly Ingénieriedessciencesduvivant BA1 Obl. Lecture 4weekly Microtechnique BA1 Obl. Exercises 2weekly Numberof 239 Scienceetgéniedesmatériaux BA1 Obl. positions Sciencesetingénieriedel'environnement BA1 Obl. Systèmesdecommunication BA1 Obl. Summary Westudythefundamentalconceptsofanalysis,calculusandtheintegralofreal-valuedfunctionsofarealvariable. Content -Reasoning,provingandarguinginmathematics -Numbers,structuresandfunctions -Sequences,limitandcontinuity -Seriesofreals -Real-valuedfunctionsofarealvariableandconvergence -DifferentialCalculusandtheIntegral Keywords Realnumbers,function,sequence,convergent/divergentsequence,limit,subsequence,limitofafunction,continuous function,seriesofrealnumbers,convergent/divergentseries,absoluteconvergence,derivative,classC^k,meanvalue theorem,Taylor'stheorem,Taylorseries,Riemannintegral,indefiniteintegral,intermediatevaluetheorem. LearningOutcomes •Theintendedlearningoutcomesofthiscoursearethatstudentsacquirethefollowingcapacities: •Reasonrigorouslytoanalyseproblems •Chooseappropriateanalyticaltoolsforproblemsolving. •Beabletoconceptualiseinviewoftheapplicationsofanalysis. •Applyefficientlymathematicalconceptsforproblemsolvingbymeansofexamplesandexercises •Analyzeandtosolvenewproblems. •Masterthebasictoolsofanalysisas,forexample,notionsofconvergence,sequencesandseries. •Studyingrigorouslyrealfunctionsweintendthatstudentswilldemonstrateadeepunderstandingofcalculus Teachingmethods Excathedra/onlinelecturesandexercisesessionswithtutorsandstudentassistants. Assessmentmethods AnalyseI(anglais) Page1/2"}
{"pack_id": "french_pack", "section_title": "Analyse I (anglais)", "page": 46, "chunk_id": "french_pack_46_0", "content": "46 2020-2021COURSEBOOKLET Writtenexam Supervision Officehours No Assistants Yes Forum No Others Tutoringofexercises othermeasurestobedefined AnalyseI(anglais) Page2/2"}
{"pack_id": "french_pack", "section_title": "Analyse II", "page": 47, "chunk_id": "french_pack_47_0", "content": "47 2020-2021LIVRETDECOURS MATH-106(e) Analyse II LachowskaAnna Cursus Sem. Type Langue français Informatique BA2 Obl. Coefficient 6 Systèmesdecommunication BA2 Obl. Session Eté Semestre Printemps Examen Ecrit Charge 180h Semaines 14 Heures 6hebdo Cours 4hebdo Exercices 2hebdo Nombrede places Résumé Étudierlesconceptsfondamentauxd'analyseetlecalculdifférentieletintégraldesfonctionsréellesdeplusieurs variables. Contenu -L'espaceR^n -Calculdifférentieldesfonctionsàplusieursvariables -Intégralesmultiples -Équationsdifférentiellesordinaires Mots-clés Espacevectorieleuclidien,,dérivéepartielle,différentielle,matricejacobienne,extremumlocald'unefonctionde plusieursvariables,matricehessienne,développementlimité,gradient,divergence,rotationnel,règledecomposition, théorèmedesfonctionsimplicites,multiplicateursdeLagrange,intégralemultiple,équationdifférentielleordinaire Compétencesrequises Coursprérequisobligatoires AnalyseI,AlgèbrelinéaireI Coursprérequisindicatifs AnalyseI,AlgèbrelinéaireI Conceptsimportantsàmaîtriser -calculdifférentieletintégraldesfonctionsréellesd'unevariable -lesnotionsdeconvergence -espacevectoriel,matrices,valeurspropres Acquisdeformation •Lebutfondamentaldececoursreste,commepourlapartieI,d'acquérirlescapacitéssuivantes: •Appliquer •avecaisanceetapprofondirlescompétencesetconnaissancesacquisesenAnalyseI: •Raisonner •rigoureusementpouranalyserlesproblèmes •Choisirousélectionner AnalyseII Page1/2"}
{"pack_id": "french_pack", "section_title": "Analyse II", "page": 48, "chunk_id": "french_pack_48_0", "content": "48 2020-2021LIVRETDECOURS •lesoutilsd'analysepertinentspourrésoudredesproblèmes •Identifier •lesconceptsinhérentsàchaqueproblème •Appliquer •efficacementlesconceptspourrésoudrelesexercicessimilairesauxexemplesetexercicestraitésaucours •Semontrercapabled'analyseretderésoudredesproblèmesnouveaux •Maîtriserlestechniquesducalculdifférentieletintégral. •Maîtriserleséquationsdifférentiellesélémentaires,l'espaceR^n,lesfonctionsdeplusieursvariables,lesdérivées partiellesetlesintégralesmultiples. Méthoded'enseignement Coursexcathedraetexercicesensalle Méthoded'évaluation Examenécrit Encadrement Officehours Non Assistants Oui Forumélectronique Non Autres Tutoratdesexercices autresmesuresàdéfinir Ressources Bibliographie JacquesDouchetandBrunoZwahlen:Calculdifférentieletintégral.PPUR,2011. L'enseignantpréciseralesmanuelsrecommandésdanssoncours. AnalyseII Page2/2"}
{"pack_id": "french_pack", "section_title": "Analyse II (anglais)", "page": 49, "chunk_id": "french_pack_49_0", "content": "49 2020-2021COURSEBOOKLET MATH-106(en) Analyse II (anglais) MountfordThomas Cursus Sem. Type Language English Chimieetgéniechimique BA2 Obl. Coefficient 6 Géniecivil BA2 Obl. Session Summer Semester Spring Géniemécanique BA2 Obl. Exam Written Génieélectriqueetélectronique BA2 Obl. Workload 180h Weeks 14 Informatique BA2 Obl. Hours 6weekly Ingénieriedessciencesduvivant BA2 Obl. Lecture 4weekly Microtechnique BA2 Obl. Exercises 2weekly Numberof 230 Scienceetgéniedesmatériaux BA2 Obl. positions Sciencesetingénieriedel'environnement BA2 Obl. Systèmesdecommunication BA2 Obl. Summary Thecoursestudiesfundamentalconceptsofanalysisandthecalculusoffunctionsofseveralvariables. Content -TheEuclideanspaceR^n. -Vectorfunctionsandcurves -Differentiationoffunctionsofseveralvariables. -Multipleintegrals -Ordinarydifferentialequations. Keywords Euclideanvectorspace,partialderivative,differential,Jacobian,Hessian,Taylorexpansion,gradient,chain rule,implicit functiontheorem,Lagrangemultipliers,multipleintegrals,ordinarydifferentialequation LearningPrerequisites Requiredcourses AnalysisI,LinearAlgebraI Importantconceptstostartthecourse - LearningOutcomes •ThegoalofthiscourseconsistsasforAnalysis1isthatstudentsacquirethefollowingcapacities: •ConsolidatetheskillsandknowledgetheyacquiredinAnalysis1. •Reason •rigorouslyandtoanalyseproblems •Choose •appropriateanalyticaltoolsforproblemsolving. •Conceptualizeproblems AnalyseII(anglais) Page1/2"}
{"pack_id": "french_pack", "section_title": "Analyse II (anglais)", "page": 50, "chunk_id": "french_pack_50_0", "content": "50 2020-2021COURSEBOOKLET •Apply •efficientlymathematicalconceptsforproblemsolvingbymeansofexamplesandexercises •Analyze •andtosolvenewproblems. •Masterthebasictoolsofanalysis •Masterthebasictoolsofelementaryordinarydifferentialequations,theEuclideanspaceR^nandfunctionsofseveral variables Teachingmethods Excathedralectures,exercisessessionsintheclassroom. Assessmentmethods Writtenexam Supervision Officehours No Assistants Yes Forum No Others Tutoringofexercises othermeasurestobedefined Resources Bibliography JacquesDouchetandBrunoZwahlen:Calculdifférentieletintégral.PPUR,2011. Websites •http://mcss.epfl.ch/page-105207-en.html AnalyseII(anglais) Page2/2"}
{"pack_id": "french_pack", "section_title": "Digital system design", "page": 51, "chunk_id": "french_pack_51_0", "content": "51 2020-2021COURSEBOOKLET CS-173 Digital system design KluterTiesJanHenderikus Cursus Sem. Type Language English Informatique BA2 Obl. Coefficient 6 Systèmesdecommunication BA2 Obl. Session Summer Semester Spring Exam Duringthe semester Workload 180h Weeks 14 Hours 6weekly Lecture 4weekly Practical 2weekly work Numberof positions Summary Thegoalistofamiliarizethestudentswiththehardwarecomponentsofcomputingsystems,andtoteachthemodern methodsofanalysisandsynthesisofcombinationalandsequentialsystems,withtheassistanceofhigh-levellanguages suchasVHDL. Content 1. Analogversusdigital,logic:theprinciplesandtheoperators. 2. Booleanalgebra,combinationalfunctions,andKarnaughdiagrams. 3. Sequentialfunctionsandtheirthreerepresentatives. 4. Coding,howdoweinterpretthosebits. 5. Finitestatemachines. 6. Realgatesandtechnology. 7. Programmablelogicandtheirapplication. 8. Describingsystemsatahigherlevelbyusingahardwaredescriptionlanguage(VHDL) 9. Applicationofthelearnedtheorybypracticalproblems. Keywords Digitalsystemdesign,logicgates,Booleanalgebra,gates,flip-flops,latches,FPGA,CPLD,FSM,coding,VHDL LearningPrerequisites Requiredcourses None Recommendedcourses None LearningOutcomes Bytheendofthecourse,thestudentmustbeableto: •Identifysequentialandcombinationallogicfunctions •Recognizelogicfunctions,gates,latches,andflipflops •DescribesimpledigitalsystemsinVHDL •AnalyzedigitalsystemseitherdescribedinVHDLorimplementedwithgates •Implementadigitalsystemfromaproblemdescription Digitalsystemdesign Page 1 / 2"}
{"pack_id": "french_pack", "section_title": "Digital system design", "page": 52, "chunk_id": "french_pack_52_0", "content": "52 2020-2021COURSEBOOKLET •Solvebooleanequationsandnumbersystemproblems •DesignacompletedigitalsystemthatrunsonFPGA •Detectdifferencesbetweenthetheoryandthepracticalapplication Transversalskills •Useaworkmethodologyappropriatetothetask. •Continuetoworkthroughdifficultiesorinitialfailuretofindoptimalsolutions. •UsebothgeneralanddomainspecificITresourcesandtools •Accessandevaluateappropriatesourcesofinformation. Teachingmethods Courseexcathedra,exercisesandpracticallaboratoryprojects Expectedstudentactivities Thestudentmustattendthecourse,prepareandsolvetheexercises,prepareandcarryoutthelaboratoryprojects Assessmentmethods Midtermtest(40%) Finaltest(40%) Midtermpracticalproject(10%) Finalpracticalproject(10%) Supervision Officehours No Assistants Yes Forum Yes Resources Virtualdesktopinfrastructure(VDI) Yes Bibliography W.J.DallyandR.C.Harting,Digitaldesign:Asystemsapproach,CambridgeUniversityPress,2012J. Wakerly,Digitaldesign(4thedition),PrenticeHall,2005P.J.Ashenden,Thestudent'sguidetoVHDL(2nd edition),MorganKaufmann,2008C.Maxfield,Beboptothebooleanboogie:Anunconventionalguideto electronics(3rdedition),Newnes,2008 Ressourcesenbibliothèque •C.Maxfield,Beboptothebooleanboogie:Anunconventionalguidetoelectronics(3rded) •W.J.DallyandR.C.Harting,Digitaldesign:Asystemsapproach •J.Wakerly,Digitaldesign(4thed) •P.J.Ashenden,Thestudent'sguidetoVHDL(2nded) Notes/Handbook Allmaterialisavailableonmoodleincluding: •Slides • Exercises •Theorybooklet • Old exams Prerequisite for Computer Architecture I (CS-208) Computer Architecture II (CS-209) Digitalsystemdesign Page 2 / 2"}
{"pack_id": "french_pack", "section_title": "Introduction à la programmation", "page": 53, "chunk_id": "french_pack_53_0", "content": "53 2020-2021LIVRETDECOURS CS-107 Introduction à la programmation SamJamila Cursus Sem. Type Langue français Auditeursenligne H Obl. Coefficient 5 Informatique BA1 Obl. Session Hiver Semestre Automne Systèmesdecommunication BA1 Obl. Examen Ecrit Charge 150h Semaines 14 Heures 5hebdo Cours 2hebdo Exercices 3hebdo Nombrede places Résumé Cecoursabordelesconceptsfondamentauxdelaprogrammationetdelaprogrammationorientéeobjet(langage JAVA).Ilpermetégalementdesefamilisarieravecunenvironnementinformatique(stationdetravailsousUNIX) Contenu •Introductionàl'environnementUNIX(connection,multi-fenêtrage,éditiondetextes,email,...),élémentsdebasedu fonctionnementd'unsystèmeinformatiqueetpriseenmaind'unenvironnementdeprogrammation(éditeur, compilateur,...). •Initiationàlaprogrammation(langageJAVA):variables,expressions,structuresdecontrôle,modularisation, entrées-sorties •Introductionàlaprogrammationobjet(langageJAVA):objets,classes,méthodes,encapsulation,héritage, polymorphisme •Pratiquedeconceptsalgorithmquesfondamentaux (récursion,recherche,trietc.). Mots-clés Java,programmationorientée-objet,Unix. Compétencesrequises Coursprérequisobligatoires Aucun Coursprérequisindicatifs Aucun Conceptsimportantsàmaîtriser Aucun Acquisdeformation Introductionàlaprogrammation Page1/2"}
{"pack_id": "french_pack", "section_title": "Introduction à la programmation", "page": 54, "chunk_id": "french_pack_54_0", "content": "54 2020-2021LIVRETDECOURS Alafindececoursl'étudiantdoitêtrecapablede: •Concevoirdesalgorithmesrésolvantdestâchessimples •TranscrireunalgorithmeensonprogrammeéquivalentenJava •ModéliserenlangageJavaunesituationsimpledumonderéelle •Structurerunproblèmecomplexeensous-problèmes •Analyseruncodepourendécrirelerésultatoulecorriger •Argumenterlavaliditédedécisiondeconceptiondebasedansunprogrammeorienté-objet •Testerl'adéquationdurésultatd'unprogrammeparrapportàlatâchevisée •RéaliserdefaçonautonomeuneapplicationdepetitetailleaumoyendulangageJavaetenutilisantlesconcepts fondamentauxdelaprogrammationorientéeobjet Compétencestransversales •Utiliserlesoutilsinformatiquescourantsainsiqueceuxspécifiquesàleurdiscipline. •Persévérerdansladifficultéouaprèsunéchecinitialpourtrouverunemeilleuresolution. •Utiliseruneméthodologiedetravailappropriée,organiserun/sontravail. •Accéderauxsourcesd'informationsappropriéesetlesévaluer. Méthoded'enseignement Excathedra,travauxpratiquessurordinateuretsupportenligneMOOC Travailattendu participationaucours,résolutionsd'exercices. Méthoded'évaluation 1-Examenécritindividuel (40%) 2-Mini-projet1(20%) 3-Mini-projet 2(40%) Lesmini-projetssefontàdeux. Encadrement Officehours Non Assistants Oui Forumélectronique Oui Ressources Servicedecoursvirtuels(VDI) Oui Bibliographie Notesdecoursdisponiblesenligne. Livre(s)deréférenceindiqué(s)endébutdesemestre Préparationpour Pratiquedelaprogrammationorientée-objet(CS-108) Introductionàlaprogrammation Page2/2"}
{"pack_id": "french_pack", "section_title": "Physique générale : mécanique", "page": 55, "chunk_id": "french_pack_55_0", "content": "55 2020-2021LIVRETDECOURS PHYS-101(c) Physique générale : mécanique BréchetSylvain Cursus Sem. Type Langue français Chimieetgéniechimique BA1 Obl. Coefficient 6 Informatique BA1 Obl. Session Hiver Semestre Automne Examen Ecrit Charge 180h Semaines 14 Heures 6hebdo Cours 3hebdo Exercices 3hebdo Nombrede places Résumé Lebutducoursdephysiquegénéraleestdedonneràl'étudiantlesnotionsdebasenécessairesàlacompréhension desphénomènesphysiques.L'objectifestatteintlorsquel'étudiantestcapabledeprévoirquantitativementles conséquencesdecesphénomènesavecdesoutilsthéoriquesappropriés. Contenu IntroductionetCinématique:référentiels,trajectoire,vitesse,accélération,coordonnéescartésiennesetcylindriques. Dynamiquedupointmatériel:quantitédemouvement,loisdeNewton,forcesfondamentales,empiriquesetde liaison,mouvementoscillatoire,momentcinétique. Travail,puissance,énergie:énergiescinétique,potentielle,mécanique,loisdeconservation,mouvements gravitationnels,collisions. Changementderéférentiels:dynamiquedanslesréférentielsnoninertiels Dynamiquedessystèmes: centredemasse,momentcinétique,énergie Solideindéformable:momentcinétique,momentd'inertie,effetsgyroscopiques Compléments L'enseignementpeutcontenir,maispasexclusivement,lesélémentssuivants:mécaniqueanalytique,coordonnées sphériques,relativitérestreinte Mots-clés Physiquegénérale,mécaniquedupointmatériel,mécaniquedusolide,coordonnées,cinématique,relativité,énergie, travail Compétencesrequises Coursprérequisindicatifs •Niveaumathématiquedelamaturitéfédérale,voirparexemple\"www.vsmp.ch/crm/cat.htm\" •\"Savoir-FaireenMaths-biencommencersesétudesscientifiques\",Y.Biollay,A.Chaabouni,J.Stubbe, PPUR,2010 Conceptsimportantsàmaîtriser Espacevectoriel,produitscalaireetproduitvectoriel,dérivationetintégrationd’unefonctionréelle, équationsdifférentiellesordinaires Acquisdeformation Alafindececoursl'étudiantdoitêtrecapablede: Physiquegénérale:mécanique Page1/2"}
{"pack_id": "french_pack", "section_title": "Physique générale : mécanique", "page": 56, "chunk_id": "french_pack_56_0", "content": "56 2020-2021LIVRETDECOURS •Elaborerunmodèlephysiqued'unsystèmemécanique •Démontrerunsavoir-fairedanslarésolutiondeproblèmes •Structurerlesmodèlesentermesd'équationsdifférentielles •Formuleretutiliserdeshypothèsessimplificatricespourdécrireuneexpérience •UtiliserlesmodèlesthéoriquesquidécriventlaNature •Estimerlesordresdegrandeur •Relierlesnotionsdecoursetlesobservationsdumondequotidien Compétencestransversales •Utiliseruneméthodologiedetravailappropriée,organiserun/sontravail. Méthoded'enseignement Cours,exercicesensalleettravailpersonnel Méthoded'évaluation Examenécritàlasessiond'hiver Ressources Bibliographie •TraitédePhysique:LaMécanique.J.-Ph.Ansermet,PPUR2009 •PhysiqueGénérale(vol.1)2èmeédition,Alonso&Finn,InterEditions,Paris,1988 •Physicsforscientistsandengineers,4èmeédition,Giancoli.InternationalEdition,PrenticeHall •ConceptualPhysics,10thedition,PaulG.Hewitt,CitycollegeSanFrancisco,2005 •Mooc-Mécaniquedel'EPFL,J.-Ph.Ansermet, www.coursera.org,2013 Ressourcesenbibliothèque •LaMécanique/Ansermet •Physicsforscientistsandengineers/Giancoli •ConceptualPhysics/Hewitt •Mooc-Mécanique/Ansermet •PhysiqueGénérale/Alonso Polycopiés \"MaPhysique\",Vol.1(polycopié),GiorgioMargaritondo Sitesweb •http://moodle.epfl.ch/course/view.php?id=14244 LiensMoodle •http://moodle.epfl.ch/course/view.php?id=14244 Préparationpour PhysiquegénéraleII Physiquegénérale:mécanique Page2/2"}
{"pack_id": "french_pack", "section_title": "Physique générale : mécanique (allemand)", "page": 57, "chunk_id": "french_pack_57_0", "content": "57 2020-2021LIVRETDECOURS PHYS-101(de) Physique générale : mécanique (allemand) GruetterRolf Cursus Sem. Type Langue allemand Chimieetgéniechimique BA1 Obl. Coefficient 6 Géniecivil BA1 Obl. Session Hiver Semestre Automne Géniemécanique BA1 Obl. Examen Ecrit Génieélectriqueetélectronique BA1 Obl. Charge 180h Semaines 14 Informatique BA1 Obl. Heures 6hebdo Ingénieriedessciencesduvivant BA1 Obl. Cours 3hebdo Microtechnique BA1 Obl. Exercices 3hebdo Nombrede 60 Scienceetgéniedesmatériaux BA1 Obl. places Sciencesetingénieriedel'environnement BA1 Obl. Systèmesdecommunication BA1 Obl. Résumé DieStudentenerwerbendieGrundkenntnissezumVerständnisvonphysikalischenPhänomenenderMechanik.Sie entwickelndieFähigkeit,dieAuswirkungendieserPhänomenemitdenentsprechendentheoretischenWerkzeugen quantitativzubestimmen. Contenu EnleitungundKinematik:AbschätzenvonGrössenordnungen,physikalischeDenkweise,Bezugssysteme,Bahnkurve, Geschwindigkeit,Beschleunigung,kartesischeundzylindrischeKoordinatensysteme DynamikdesMassenpunktes:Impuls,Newton'sAxiome,grundlegendeundempirischeKräfte(verhältnisse), MechanischeSchwingungen,Drehimpuls. Arbeit,Leistung,Energie:Kinetische,potentielleundmechanischeEnergie,Erhaltungssätze,Gravitation.Kollisionen. AenderungderBezugssysteme:beschleunigteBezugssysteme MechanikvonSystemen:Massenzentrum,(Dreh)impuls,Energie MechanikstarrerKörper:Drehimpuls,Trägheitsimpuls,Hebelgesetz,gyroskopischeEffekte Ergänzungen:DerStoffkannfolgendenicht-inklusiveElementebeinhalten:sphärischeKoordinatensystem,Einführung indiespezielleRelativitätstheorie Mots-clés AllgemeinePhysik,Koordinaten,Kinematik,Energie,Arbeit,MechanikdesstarrenKörpers,Koordinaten,Relativität. Compétencesrequises Coursprérequisindicatifs AusgezeichneteGrundkenntnissederMathematikNiveauSchweizerischeMaturitätsprüfung(zB. http://www.math.ch/kanon/) Conceptsimportantsàmaîtriser Vektoralgebra:Skalar-undVektorprodukt,ZerlegenvonVektoren.Beziehungendesrechtwinkligen Dreiecks. LösungvonlinearenGleichungsystemenmit2oder3Unbekannten. Integration/DifferentiationvonFunktionenundVektoren. UmwandlungphysikalischerEinheiten Acquisdeformation Alafindececoursl'étudiantdoitêtrecapablede: Physiquegénérale:mécanique(allemand) Page1/3"}
{"pack_id": "french_pack", "section_title": "Physique générale : mécanique (allemand)", "page": 58, "chunk_id": "french_pack_58_0", "content": "58 2020-2021LIVRETDECOURS •ErstelleneinesphysikalischenModellseinesmechanischenSystems. •Know-howentwickeln,umeinProblemzulösen •ErkennenderkorrektenEinheiten •BeurteilenbenutztervereinfachenderAnnahmen •IdentifizierendesvorhergesehenenqualtitativenVerhaltens •AbschätzenvonGrößenordnungen •ZusammenhängezwischenVorlesungundAlltagerkennen •BerücksichtigendersignifikantenStellen •HerleitenderBewegungsgleichungen Compétencestransversales •Utiliseruneméthodologiedetravailappropriée,organiserun/sontravail. Méthoded'enseignement Kurs,UbungenimSaalundpersönlicheArbeit. Travailattendu NebenderVorlesungundUbungs-sessionen(DieseZeitangabenkönnenvondergeleistetenVorbereitungaufsStudium undderQualitätderArbeitsorganisationabhangen): VorderVorlesung,ca.2bis3SeitenimVorlesungswerklesen(ca.15min) NachderVorlesung,eineZUsammenfassung/Formelsammlungerstellen(ca.30min.),gefoltvonmehreren Vorbereitungsübungen(ca.60min) Ubungenvervollständigen(ca.3h),onlinequizbeantworten(ca.15min) Méthoded'évaluation schriftlichePrüfung Encadrement Officehours Oui Assistants Oui Forumélectronique Non Ressources Bibliographie •Physicsforscientistsandengineers,4èmeédition,Giancoli.InternationalEdition,Pearson/PrenticeHall •Mathematicsforphysicswithcalculus,Das,Pearson/PrenticeHall •W.Demtröder,Experimentalphysik1,SpringerVerlag Ressourcesenbibliothèque • Sitesweb •http://lifmet.epfl.ch LiensMoodle Physiquegénérale:mécanique(allemand) Page2/3"}
{"pack_id": "french_pack", "section_title": "Physique générale : mécanique (allemand)", "page": 59, "chunk_id": "french_pack_59_0", "content": "59 2020-2021LIVRETDECOURS •http://moodle.epfl.ch/course/view.php?id=14481 Préparationpour Physiquegénérale-thermodynamique Physiquegénérale:mécanique(allemand) Page3/3"}
{"pack_id": "french_pack", "section_title": "Physique générale : mécanique (anglais)", "page": 60, "chunk_id": "french_pack_60_0", "content": "60 2020-2021COURSEBOOKLET PHYS-101(en) Physique générale : mécanique (anglais) ManleySuliana Cursus Sem. Type Language English Chimieetgéniechimique BA1 Obl. Coefficient 6 Géniecivil BA1 Obl. Session Winter Semester Fall Géniemécanique BA1 Obl. Exam Written Génieélectriqueetélectronique BA1 Obl. Workload 180h Weeks 14 Informatique BA1 Obl. Hours 6weekly Ingénieriedessciencesduvivant BA1 Obl. Lecture 3weekly Microtechnique BA1 Obl. Exercises 3weekly Numberof 308 Scienceetgéniedesmatériaux BA1 Obl. positions Sciencesetingénieriedel'environnement BA1 Obl. Systèmesdecommunication BA1 Obl. Summary Studentswilllearntheprinciplesofmechanicstoenableabetterunderstandingofphysicalphenomena,suchasthe kinematicsanddyamicsofpointmassesandsolidbodies.Studentswillacquirethecapacitytoquantitativelyanalyze theseeffectswiththeappropriatetheoreticaltools. Content Thecoursemaycontain,butnotexclusively,thefollowingelements: Mechanics Introductionandkinematics Referenceframes,trajectories,velocity,acceleration,Cartesian,sphericalandcylindricalcoordinates. Dynamicsofthepointmassandsolidbody Momentum,Newton'slaws,fundamentalforces,empiricalforcesandconstraints.Oscillatorymotion,Angular momentum. Work,power,energy Kineticenergy,potentialenergy,conservationlaws,gravitationalmotion.Collisions. Keywords Generalphysics,pointmasses,coordinates,kinematics,energy,work LearningPrerequisites Recommendedcourses Mathlevelrequiredfor\"maturitéfédérale\",seeontheleftthehyperlinksandthebook,indicativeofthelevel ofmathappropriateforagoodstartatEPFL. LearningOutcomes Bytheendofthecourse,thestudentmustbeableto: •Developaknow-howtosolveaproblem •Structuremodelsintermsofdifferentialsequations •Applysimplifyingassumptionstodescribeanexperience Physiquegénérale:mécanique(anglais) Page1/2"}
{"pack_id": "french_pack", "section_title": "Physique générale : mécanique (anglais)", "page": 61, "chunk_id": "french_pack_61_0", "content": "61 2020-2021COURSEBOOKLET •Estimateordersofmagnitude •DistinguishthetheoreticalmodelsdescribingNatura •Contextualisetheoreticalmodelsineverydaylife •Formulateaphysicalmodel Transversalskills •Useaworkmethodologyappropriatetothetask. Teachingmethods Lectures+exercises Assessmentmethods Thecourseconcludeswithawrittenexam Resources Bibliography •Serway,PhysicsforScientistsandEngineers. •DouglasGiancoli.PhysicsforScientistsandEngineers.4thEdition. •D.Halliday,R.Resnick,K.S.Krane.Physics,Volume1. Ressourcesenbibliothèque •Serway,PhysicsforScientistsandEngineers. •D.Halliday,R.Resnick,K.S.Krane.Physics,Volume1 •DouglasGiancoli.PhysicsforScientistsandEngineers.4thEdition Prerequisitefor GeneralphysicsII Physiquegénérale:mécanique(anglais) Page2/2"}
{"pack_id": "french_pack", "section_title": "Pratique de la programmation orientée-objet", "page": 62, "chunk_id": "french_pack_62_0", "content": "62 2020-2021LIVRETDECOURS CS-108 Pratique de la programmation orientée-objet SchinzMichel Cursus Sem. Type Langue français Informatique BA2 Obl. Coefficient 9 Systèmesdecommunication BA2 Obl. Session Eté Semestre Printemps Examen Pendantle semestre Charge 270h Semaines 14 Heures 10hebdo Cours 2hebdo Exercices 2hebdo Projet 6hebdo Nombrede places Résumé LesétudiantsperfectionnentleursconnaissancesenJavaetlesmettentenpratiqueenréalisantunprojetdetaille conséquente.Ilsapprennentàutiliseretàmettreenœuvrelesprincipauxtypesdecollections(listes,ensembles,tables associatives),etexaminentquelquespatronsdeconception. Contenu ApprofondissementdesconnaissancesdulangageJava,enparticulierdelagénéricité(polymorphismeparamétrique), desclassesimbriquéesetanonymesetdeslambdas. IntroductionàdifférentsaspectsdelabibliothèquestandardJava:collections,entrées-sorties,interfacesutilisateur graphiques,etc. Etudedesmisesenœuvredescollectionsparchaînage,arbresbinairesderechercheouhachage. Introductionauxpatronsdeconception(designpatterns)etexamendesplusimportants(Decorator,Composite,Builder, etc.). Examendel'utilisationjudicieusedel'héritageetdel'immuabilité. Réalisationd'unprojetdeprogrammationconséquentenJava. Mots-clés Java,programmationorientée-objets,collections,patronsdeconception. Compétencesrequises Coursprérequisobligatoires Introductionàlaprogrammation. Acquisdeformation Alafindececoursl'étudiantdoitêtrecapablede: •ConcevoiretécriredesprogrammesJavadetaillemoyenne. •UtiliseràbonescientlatotalitédesconceptsdeJava. •UtiliseretconcevoirdesclassesetméthodesgénériquesenJava. •Utiliseretmettreenoeuvrelesprincipalessortesdecollection(listes,ensembles,tablesassociatives). •Utiliserjudicieusementl'héritageetl'immuabilitédansleslangagesorienté-objets. •Reconnaitreetsavoirutiliserplusieurspatronsdeconception. Compétencestransversales Pratiquedelaprogrammationorientée-objet Page1/2"}
{"pack_id": "french_pack", "section_title": "Pratique de la programmation orientée-objet", "page": 63, "chunk_id": "french_pack_63_0", "content": "63 2020-2021LIVRETDECOURS •Utiliserlesoutilsinformatiquescourantsainsiqueceuxspécifiquesàleurdiscipline. Méthoded'enseignement Ex-cathedra. Travailattendu Participationaucours,réalisationdesexercices,réalisationduprojet. Méthoded'évaluation Durantlesemestre:projet(60%),examenintermédiaire(15%)etexamenfinal(25%). Encadrement Officehours Non Assistants Oui Forumélectronique Oui Ressources Servicedecoursvirtuels(VDI) Oui Ressourcesenbibliothèque •JavaGenericsandCollections/Naftalin •EffectiveJava/Bloch Sitesweb •https://cs108.epfl.ch/ Pratiquedelaprogrammationorientée-objet Page2/2"}
{"pack_id": "french_pack", "section_title": "Descriptifs Cycle Bachelor", "page": 65, "chunk_id": "french_pack_65_0", "content": "65 INFORMATIQUE Cycle Bachelor (2ème année et 3ème année) 2020 / 2021"}
{"pack_id": "french_pack", "section_title": "Algebra", "page": 67, "chunk_id": "french_pack_67_0", "content": "67 2020-2021COURSEBOOKLET MATH-310 Algebra LachowskaAnna Cursus Sem. Type Language English Chimie BA5 Obl. Credits 3 Cybersecurityminor H Opt. Session Winter Semester Fall HES-SC H Obl. Exam Written Informatique BA5 Opt. Workload 90h Weeks 14 Systèmesdecommunication BA5 Obl. Hours 3weekly Lecture 2weekly Exercises 1weekly Numberof positions Summary Studybasicconceptsofmodernalgebra:groups,rings,fields. Content -Algebraicstructures:sets,groups,rings,fields. -Groups.Subgroups.Homomorphismsofgroups,normalsubgroups,quotients.Cyclicgroups,symmetricgroups. Classificationoffiniteabeliangroups. -Rings.Homomorphismsofrings.Ideals,principal,primeandmaximalideals,principalidealdomains.Quotientrings. TheChineseremaindertheorem. -Examplesofrings.Integers.basicproperties.Euler'sandFermat'stheorems.Polynomialrings.GCD,unique factorization. -Fields.Finitefields.Characteristicofafield. Keywords Group,homomorphism,subgroup,normalsubgroup,quotientgroup,cyclicgroup,symmetricgroup,orderofthegroup, orderofanelementinthegroup,finiteabeliangroups. Ring,ideal,principalideal, maximalideal,uniqueprincipalideal domain,Euler'stotientfunction, field,finitefield,characteristicofafield. LearningPrerequisites Requiredcourses LinearAlgebraI,AnalyseI Recommendedcourses LinearAlgebraI,AnalyseI,AnalyseII LearningOutcomes Bytheendofthecourse,thestudentmustbeableto: •Applyconceptsandideasofthecourse •Reasonrigorouslyusingthenotionsofthecourse •Chooseanappropriatemethodtosolveproblems •Identifytheconceptsrelevanttoeachproblem •Applyconceptstosolveproblemssimilartotheexamplesshowninthecourseandinproblemsets •Solvenewproblemsusingtheideasofthecourse Algebra Page1/2"}
{"pack_id": "french_pack", "section_title": "Algebra", "page": 68, "chunk_id": "french_pack_68_0", "content": "68 2020-2021COURSEBOOKLET •Implementappropriatemethodstoinvestigatethestructureofagivengroup,ringorfield,andstudytheirproperties Teachingmethods Lecturesandexercisesessions Assessmentmethods Threeshortin-classtests(15%ofthegrade) Writtenexam(85%ofthegrade) Supervision Officehours No Assistants Yes Forum No Resources Bibliography 1.D.S.Dummit,R.M.Foote,AbstractAlgebra.Wiley,ThirdEdition 2.S.Lang,UndergraduateAlgebra.UndergraduatetextsinMathematics.Springer-Verlag,Inc. NewYork, secondedition,1990. 3.L.Childs,AConcreteIntroductiontoHigherAlgebra.UndergraduatetextsinMathematics, Springer-Verlag,Inc.NewYork,1995. Ressourcesenbibliothèque •UndergraduateAlgebra/Lang • AConcreteIntroductiontoHigherAlgebra/Childs •Abstractalgebra/Dummit Notes/Handbook CompletelecturenoteswillbeavailableinPDF MoodleLink •https://moodle.epfl.ch/course/view.php?id=15441 Algebra Page2/2"}
{"pack_id": "french_pack", "section_title": "Algorithms", "page": 69, "chunk_id": "french_pack_69_0", "content": "69 2020-2021COURSEBOOKLET CS-250 Algorithms SvenssonOlaNilsAnders Cursus Sem. Type Language English Cybersecurityminor H Opt. Credits 6 HES-IN H Obl. Session Winter Semester Fall HES-SC H Obl. Exam Written Informatique BA3 Obl. Workload 180h Weeks 14 Mathématiques BA5 Opt. Hours 6weekly MineurenDatascience H Opt. Lecture 4weekly MineurenInformatique H Opt. Exercises 2weekly Numberof MineurenSystèmesdecommunication H Opt. positions Scienceeting.computationelles MA1,MA3 Opt. Systèmesdecommunication BA3 Obl. Summary Thestudentslearnthetheoryandpracticeofbasicconceptsandtechniquesinalgorithms.Thecoursecovers mathematicalinduction,techniquesforanalyzingalgorithms,elementarydatastructures,majoralgorithmicparadigms suchasdynamicprogramming,sortingandsearching,andgraphalgorithms. Content MathematicalInduction •Mathematicalbackground,Euler'sformulafortrees,Schwartz-Zippellemma. AnalysisofAlgorithms • O-notation,timeandspacecomplexity,recurrencerelations,probabilisticanalysis. Datastructures • Arrays,linkedlists,trees,heaps,hashing,graphs. Designofalgorithmsbyinduction • Evaluatingpolynomials,divide-and-conqueralgorithms,dynamicprogramming. GreedyAlgorithms •Spanningtreeandshortestpathalgortihms Sortingandsearching • Mergesort,bucketsort,quicksort,heapsort,binarysearch. Graphsalgorithmsanddatastructures • Graphstraversals,shortestpaths,spanningtrees,transitiveclosure,decompostitions,matching,networkflows. Complexity • Polynomialreductions,NP-completeness. Keywords Algorithms Page1/2"}
{"pack_id": "french_pack", "section_title": "Algorithms", "page": 70, "chunk_id": "french_pack_70_0", "content": "70 2020-2021COURSEBOOKLET algorithms,datastructures,efficiency,problemsolving LearningPrerequisites Recommendedcourses AdvancedICCI LearningOutcomes Bytheendofthecourse,thestudentmustbeableto: •Illustratetheexecutionofalgorithmsonexampleinputs •Describebasicdatastructuressuchasarrays,lists,stacks,queues,binarysearchtrees,heaps,andhashtables •Analyzealgorithmefficiency •Comparealternativealgorithmsanddatastructureswithrespecttoefficiency •Choosewhichalgorithmordatastructuretouseindifferentscenarios •Usealgorithmsanddatastructurestaughtinthecourseonconcreteprobleminstances •Designnewalgorithmsanddatastructuresbasedonknownmethods •Provethecorrectnessofanalgorithm Teachingmethods Excathedralecture,exercisesinclassroom Assessmentmethods •Programmingexercises(15%) •Theoreticalhomework(15%) •Finalexam(70%) Resources Bibliography ThomasCormen,CharlesLeiserson,RonaldRivest,CliffordStein:Introductiontoalgorithms,Third Edition,MITPress,2009. Ressourcesenbibliothèque • Introductiontoalgorithms/Cormen Algorithms Page2/2"}
{"pack_id": "french_pack", "section_title": "Analyse III", "page": 71, "chunk_id": "french_pack_71_0", "content": "71 2020-2021LIVRETDECOURS MATH-203(c) Analyse III StrüttDavid Cursus Sem. Type Langue français HES-IN H Obl. Crédits 4 HES-SIE H Obl. Session Hiver Semestre Automne HES-SC H Obl. Examen Ecrit Informatique BA3 Obl. Charge 120h Semaines 14 Sciencesetingénieriedel'environnement BA3 Obl. Heures 4hebdo Systèmesdecommunication BA3 Obl. Cours 2hebdo Exercices 2hebdo Nombrede places Résumé Lecoursétudielesconceptsfondamentauxdel'analysevectorielleetl'analysedeFourierenvuedeleurutilisationpour résoudredesproblèmespluridisciplinairesd'ingénieriescientifique. Contenu Analysevectorielle Lesopérateursgradient,rotationnel,divergenceetlaplacien.Intégralescurvilignesetintégralesdesurfaces.Champs vectorielsetpotentiels.ThéorèmesdeGreen,deladivergenceetdeStokes. AnalysedeFourier SériesdeFourier.IdentitédeParceval.TransforméesdeFourier.IdentitédePlancherel.Utilisationsetapplications. Compétencesrequises Coursprérequisobligatoires AnalyseI,AnalyseII,Algèbrelinéaire. Acquisdeformation •Comprendreetmaîtriserlesnotions,lesconceptsetlesméthodesétudiésaucours. •Comprendreetmaîtriserlesnotions,lesconceptsetlesméthodespratiquésdanslessériesd'exercices. Méthoded'évaluation Examenécrit. Encadrement Officehours Non Assistants Oui Forumélectronique Non Ressources Servicedecoursvirtuels(VDI) Non Bibliographie AnalyseIII Page1/2"}
{"pack_id": "french_pack", "section_title": "Analyse III", "page": 72, "chunk_id": "french_pack_72_0", "content": "72 2020-2021LIVRETDECOURS B.DacorognaetC.Tanteri,Analyseavancéepouringénieurs,PPUR2018. Ressourcesenbibliothèque •Analyseavancéepouringénieurs/Dacorogna Préparationpour AnalyseIV. AnalyseIII Page2/2"}
{"pack_id": "french_pack", "section_title": "Analyse IV", "page": 73, "chunk_id": "french_pack_73_0", "content": "73 2020-2021LIVRETDECOURS MATH-207(d) Analyse IV StrüttDavid Cursus Sem. Type Langue français Géniecivil BA6 Opt. Crédits 4 HES-SIE E Obl. Session Eté Semestre Printemps HES-SC E Obl. Examen Ecrit Informatique BA4 Opt. Charge 120h Semaines 14 Sciencesetingénieriedel'environnement BA4 Obl. Heures 4hebdo Systèmesdecommunication BA4 Obl. Cours 2hebdo Exercices 2hebdo Nombrede places Résumé Lecoursétudielesconceptsfondamentauxdel'analysecomplexeetdel'analysedeLaplaceenvuedeleurutilisation pourrésoudredesproblèmespluridisciplinairesd'ingénieriescientifique. Contenu Analysecomplexe Définitionsetexemplesdefonctionscomplexes.Fonctionsholomorphes.EquationsdeCauchy-Riemann.Intégrales complexes.FormuledeCauchy.SériesdeLaurent.Théorèmedesrésidus. AnalysedeLaplace TransforméesdeLaplace.Applicationsàdeséquationsdifférentiellesordinaires.Applicationsàdeséquationsaux dérivéespartielles. Compétencesrequises Coursprérequisobligatoires Algèbrelinéaire,AnalyseI,AnalyseII,AnalyseIII. Acquisdeformation •Comprendreetmaîtriserlesnotions,lesconceptsetlesméthodesétudiésaucours. •Comprendreetmaîtriserlesnotions,lesconceptsetlesméthodespratiquésdanslessériesd'exercices. Méthoded'évaluation Examenécrit. Encadrement Officehours Non Assistants Oui Forumélectronique Non Ressources Servicedecoursvirtuels(VDI) Non Bibliographie AnalyseIV Page1/2"}
{"pack_id": "french_pack", "section_title": "Analyse IV", "page": 74, "chunk_id": "french_pack_74_0", "content": "74 2020-2021LIVRETDECOURS B.DacorognaetC.Tanteri,Analyseavancéepouringénieurs,PPUR2018. Ressourcesenbibliothèque •AnalyseavancéepourIngénieurs/Dacorogna AnalyseIV Page2/2"}
{"pack_id": "french_pack", "section_title": "Calcul quantique", "page": 75, "chunk_id": "french_pack_75_0", "content": "75 2020-2021LIVRETDECOURS CS-308 Calcul quantique MacrisNicolas Cursus Sem. Type Langue français Informatique BA6 Opt. Crédits 4 Systèmesdecommunication BA6 Opt. Session Eté Semestre Printemps Examen Ecrit Charge 120h Semaines 14 Heures 4hebdo Cours 3hebdo Exercices 1hebdo Nombrede places Remarque Coursindépendantde\"Traitementquantiquedel'information\"(COM-309) Résumé Laminiaturisationdesordinateursconduitàréviserlesparadigmesducalculclassiquepourdévelopperdesmodèlesde calculquantique.Lecoursintroduitlesnotionsdebitquantique,porteslogiquesetcircuitsquantiques,traiteles principauxalgorithmesquantiques,etlesmachinesIBMQ. Contenu Intrductionaucalculquantique -Calculclassique:modèledescircuitsclassiques,calculréversible. -Bitsquantiques,espacedeHilbertdeNqubits,transformationsunitairesetporteslogiquesélémentaires,postulatdela mesure. -Modèledescircuitsquantiques,portesuniverselles. -ProblèmedeDeutschetJosza. Algorithmesdebase -SousespacevectorielcacheetalgorithmedeSimon. -Intermèdemathématique:factorisationd'unentieretpériodedefonctionsdiscrètes.Notionssurlesfractions continuées. -TransforméedeFourierquantiqueetalgorithmederecherchedelapérioded'unefonctiondiscrète. -AlgorithmedefactorisationdeShor. -AlgorithmedeGroverpourlarecherchedansunebasededonnée. Intrication(sujetachoixetfacultatif) -Etatsintriquesetcircuitsassociés. -Protocolesavecopérationslocalesquantiques+communicationclassique. -Protocolededistillationetmesuredel'intrication. Codage(sujetachoixetfacultatif) -Modèlesdebruiteterreursdanslesétatsquantiques. -CodecorrecteursdeShoretSteane. -Codesstabilisateurs. Mots-clés Calculquantique,circuitsquantiques,portesuniverselles,transforméedeFourierquantique,algorithmedeShor,Grover, intrication,codesquantiques. Compétencesrequises Coursprérequisobligatoires Calculquantique Page1/2"}
{"pack_id": "french_pack", "section_title": "Calcul quantique", "page": 76, "chunk_id": "french_pack_76_0", "content": "76 2020-2021LIVRETDECOURS Algèbrelinéaire. Conceptsimportantsàmaîtriser Matrices,valeursetvecteurspropres,produitscalaire,nombrecomplexes. Acquisdeformation Alafindececoursl'étudiantdoitêtrecapablede: •Expliquerleconceptd'algorithmequantiquesurlemodèledescircuits. •Connaitrelesportesuniversellesutiliséesdansuncircuitquantique. •Expliquerlesprincipauxalgorithmesquantiques •Calculerl'évolutiond'unétatàtraversuncircuitquantique •Appliquerlepostulatdelamesure •FairedescalculsalgébriquesimpliquantdesétatsàplusieursqubitsennotationdeDirac •SefamiliariseravecIBMQetQiskit Méthoded'enseignement Ex-Cathedra.Exercices.UtilisationdesordinateursquantiquesIBMQ Travailattendu Participationaucours,exercicesetutilisationdesmachinesIBMQ Méthoded'évaluation miniprojectonIBMQexperience,4gradedhomeworks,examenfinalecrit. Ressources Bibliographie N.DavidMermin:QuantumComputerScience,anintroduction.CambridgeUniversityPress NielsenandChuang:QuantumComputationandInformation.CambridgeUniversityPress Ressourcesenbibliothèque •QuantumComputationandInformation/Nielsen •QuantumComputerScience/Mermin Polycopiés Notesdecours Sitesweb •http://ipg.epfl.ch/doku.php?id=en:courses Préparationpour COM-611QuantumInformationTheoryandComputation Calculquantique Page2/2"}
{"pack_id": "french_pack", "section_title": "Chimie générale", "page": 77, "chunk_id": "french_pack_77_0", "content": "77 2020-2021LIVRETDECOURS CH-160(b) Chimie générale TerrettazSamuel Cursus Sem. Type Langue français Géniecivil BA1 Obl. Coefficient 3 Informatique BA5 Opt. Session Hiver Semestre Automne Systèmesdecommunication BA5 Opt. Examen Ecrit Charge 90h Semaines 14 Heures 3hebdo Cours 2hebdo Exercices 1hebdo Nombrede places Résumé Cetenseignementvisel'acquisitiondesnotionsessentiellesrelativesàlastructuredelamatière,auxéquilibresetàla réactivitéchimiques.Lecoursetlesexercicesfournissentlaméthodologiepermettantderésoudreparleraisonnement etlecalculdesproblèmesinéditsdechimiegénérale. Contenu 1.Atomistique:structureélectroniquedesatomes,orbitalesatomiques,spectroscopie,classificationpériodique 2.Liaisonchimique:représentationdeLewis,règledel'octet,liaisonionique,liaisoncovalente,énergiedeliaison, modèleVSEPRetgéométriedesmolécules,orbitalesmoléculaires,momentdipolaire,forcesdevanderWaalsetde London,liaisonsintermoléculaires 3.Quantitéschimiques:masseatomique,isotopes,notiondemole,formuleschimiques,concentrations 4.Réactionschimiquesetstoechiométrie:équationschimiques,réactiflimitant,électrolytes,loisdesgazparfaits, pressionspartielles 5.Thermochimie:énergieinterne,premierprincipedelathermodynamique,enthalpiesdestransformationsphysiques etdesréactionschimiques,entropiedeuxièmeprincipe,enthalpielibre 6.Equilibreschimiques:enthalpielibredansunmélange,potentielchimiqueetactivité,quotientréactionnel,constante d'équilibre,influencedseparamètresréactionnelssurleséquilibres 7.Propriétésdessolutions:dissolutionetsolvatation,solubilité,loisdeRaoultetdeHenry,propriétéscolligativesdes solutions(ébullioscopie,cryoscopie,pressionosmotique) 8.Transfertdeproton:équilibresacide-base:théoriedeBronsted-Lowry,couplesacide-base,constanted'ionisation, échelledepH,calculdepHdesolutions,titragesacide-base 9.Transfertd'électron:électrochimie:équilibragedeséquationsrédox,pilesélectrochimiques,potentielsstandard, pilesetaccumulateurs,équationdeNemst,loideFaraday,électrolyse 10.Cinétiquechimique:vitessederéaction,loisdevitesse,molécularitéetordred'uneréaction,théorieducomplexe activé,loid'Arrhenius,catalyse Mots-clés Structureélectroniquedesatomes,liaisonschimiques,stoechiométrie,thermochimie,équilibresthermodynamiques, acidesetbase,oxydoréduction,cinétiquechimique Méthoded'évaluation Examenécrit Ressources Bibliographie •Chimiegénérale/Hill Chimiegénérale Page1/2"}
{"pack_id": "french_pack", "section_title": "Chimie générale", "page": 78, "chunk_id": "french_pack_78_0", "content": "78 2020-2021LIVRETDECOURS •Chimiedessolutions/Hill •Exercicesdechimiegénérale/Comninellis Ressourcesenbibliothèque •Chimiegénérale/Hill •Chimiedessolutions/Hill •Exercicesdechimiegénérale/Comninellis Chimiegénérale Page2/2"}
{"pack_id": "french_pack", "section_title": "Computer architecture I", "page": 79, "chunk_id": "french_pack_79_0", "content": "79 2020-2021COURSEBOOKLET CS-208 Computer architecture I StojilovicMirjana Cursus Sem. Type Language English HES-IN H Obl. Credits 4 Informatique BA3 Obl. Session Winter Semester Fall MineurenInformatique H Opt. Exam Written Systèmesdecommunication BA3 Obl. Workload 120h Weeks 14 Hours 4weekly Lecture 2weekly Practical 2weekly work Numberof positions Summary Thecourseintroducesthestudentstothebasicnotionsofcomputerarchitectureand,inparticular,tothechoicesofthe InstructionSetArchitectureandtothememoryhierarchyofmodernsystems. Content •ComplexdigitalsystemsinVHDL. •Basiccomponentsofacomputer. •InstructionSetArchitectures. •Assembly-levelprogramming. •Multi-cycleimplementationofprocessors. •Caches. •Virtualmemory. Keywords ComputerArchitecture,BasicProcessorArchitecture, InstructionsSets,CacheHierarchies,VirtualMemory. LearningPrerequisites Requiredcourses Digitalsystemdesing Importantconceptstostartthecourse •DigitaldesigninVHDL •FPGAdesignsoftware:IntelQuartus •Simulationandverificationofdigitalsystemsbehavior:ModelSim. LearningOutcomes Bytheendofthecourse,thestudentmustbeableto: •Designandimplementaprocessorattheregistertransferlevelusinglogicsynthesizersandsimulators. ComputerarchitectureI Page1/2"}
{"pack_id": "french_pack", "section_title": "Computer architecture I", "page": 80, "chunk_id": "french_pack_80_0", "content": "80 2020-2021COURSEBOOKLET •Developassemblylanguageprograms. •Justifytheorganizationofamodernmemorysystemincludingcachehierarchy. •Designandimplementacachememory. Teachingmethods •Excathedra/onlinelecturesandexercises. •LabsondedicatedFPGAboards. Expectedstudentactivities •Attendingthecourseandexercise/labsessions(inpersonoronline) •Completingthelabassignments. •Homework:solvingindividuallytheexercisesinthecourseexercisebook. •Participatinginthediscussionsontheforum. Assessmentmethods Gradedlabs,duringthesemester(30%) Finalexam,duringtheexamsession(70%) Supervision Officehours Yes Assistants Yes Forum Yes Resources Virtualdesktopinfrastructure(VDI) Yes Bibliography DavidA.PattersonandJohnL.Hennessy,ComputerOrganizationandDesign:The Hardware/SoftwareInterface,MorganKauffman,5thedition,2013. Ressourcesenbibliothèque •Computerorganizationanddesign Websites •https://parsa.epfl.ch/course-info/cs208/ MoodleLink •https://moodle.epfl.ch/course/view.php?id=14225 Prerequisitefor ComputerarchitectureII ComputerarchitectureI Page2/2"}
{"pack_id": "french_pack", "section_title": "Computer architecture II", "page": 81, "chunk_id": "french_pack_81_0", "content": "81 2020-2021COURSEBOOKLET CS-209 Computer architecture II IennePaolo Cursus Sem. Type Language English Génieélectriqueetélectronique MA2,MA4 Opt. Credits 4 Informatique BA4 Obl. Session Summer Semester Spring Systèmesdecommunication BA4 Opt. Exam Duringthe semester Workload 120h Weeks 14 Hours 4weekly Lecture 2weekly Practical 2weekly work Numberof positions Summary Thecoursecompletestheintroductiontocomputerarchitecture. Content •Inputs/OutputsandInterrupts •Exceptions •ComputerPerformance •Pipelining •DynamicScheduling •SuperscalarandVLIWProcessors •MultiprocessorsandCacheCoherence Keywords ComputerArchitecture,Processor,CPU,ILP,Multiprocessors,Coherence LearningPrerequisites Requiredcourses •CS-173(DigitalSystemDesign) •CS-208(ComputerArchitectureI) LearningOutcomes Bytheendofthecourse,thestudentmustbeableto: •Designasimpleexceptionhandlerinassembler •DesignpipelineddigitalcircuitsatRegisterTransferLevel •Optimizetheperformanceofaprocessorpipelinebyreorderinginstructions •Explainpossiblesolutionstothecachecoherenceproblem Teachingmethods ComputerarchitectureII Page1/2"}
{"pack_id": "french_pack", "section_title": "Computer architecture II", "page": 82, "chunk_id": "french_pack_82_0", "content": "82 2020-2021COURSEBOOKLET Ex-cathedracoursesandlabsonanFPGAboard. Assessmentmethods •LabI(13%) •TestI(35%) •Pipelinesimulation(4%) •LabII(13%) •TestII(35%) Supervision Officehours No Assistants Yes Forum Yes Resources Virtualdesktopinfrastructure(VDI) No Bibliography DavidA.PattersonandJohnL.Hennessy,ComputerOrganizationandDesign:TheHardware/Software Interface,MorganKauffman,5thedition,2013. Ressourcesenbibliothèque •Computerorganizationanddesign MoodleLink •https://moodle.epfl.ch/course/view.php?id=14153 Prerequisitefor •CS-470(AdvancedComputerArchitecture) ComputerarchitectureII Page2/2"}
{"pack_id": "french_pack", "section_title": "Computer language processing", "page": 83, "chunk_id": "french_pack_83_0", "content": "83 2020-2021COURSEBOOKLET CS-320 Computer language processing KuncakViktor Cursus Sem. Type Language English Informatique BA5 Opt. Credits 6 Systèmesdecommunication BA5 Opt. Session Winter Semester Fall Exam Duringthe semester Workload 180h Weeks 14 Hours 6weekly Lecture 2weekly Exercises 2weekly Practical 2weekly work Numberof positions Summary Weteachthefundamentalaspectsofanalyzingandinterpretingcomputerlanguages,includingthetechniquestobuild compilers.Youwillbuildaworkingcompilerfromanelegantfunctionallanguageintothenewwebstandardforportable binariescalledWebAssembly(https://webassembly.org/) Content Seehttps://lara.epfl.ch/w/cc 1.Overview,sourcelanguagesandrun-timemodels 2.Reviewofformallanguages 3.Lexicalanalysis 4.Syntacticanalysis(parsing) 5.Nameanalysis 6.Typechecking 7.Codegeneration 8.Correctnessofcompilers Keywords programminglanguage; compiler; interpreter; regularexpression; context-freegrammar; typesystem; codegeneration; staticcodeanalysis LearningPrerequisites Recommendedcourses DiscreteMathematics Theoryofcomputation FunctionalProgramming Computerarchitecture LearningOutcomes Bytheendofthecourse,thestudentmustbeableto: Computerlanguageprocessing Page1/3"}
{"pack_id": "french_pack", "section_title": "Computer language processing", "page": 84, "chunk_id": "french_pack_84_0", "content": "84 2020-2021COURSEBOOKLET •Designaprogramminglanguage •Constructacompiler •Coordinatedevelopmentwithprojectpartner •Formulatecorrectnessconditionsforcompiler •Estimatetimetoimplementaprogramminglanguagefeature •Produceaworkingprogramminglanguageimplementation •Decidewhichlanguagefeaturesmakeimplementationdifficult •Specifyprogramminglanguageandcompilerfunctionality Transversalskills •Assessprogressagainsttheplan,andadapttheplanasappropriate. •Evaluateone'sownperformanceintheteam,receiveandrespondappropriatelytofeedback. •Respecttherulesoftheinstitutioninwhichyouareworking. •Continuetoworkthroughdifficultiesorinitialfailuretofindoptimalsolutions. •Demonstrateacapacityforcreativity. •Takefeedback(critique)andrespondinanappropriatemanner. •Makeanoralpresentation. •Writeascientificortechnicalreport. Teachingmethods •Followlectures •Projectwork,indepdentlyandundersupervisionofassistants Assessmentmethods Thegradeisbasedontheprogramming,testing,documentation,andpresentationofprojectsdoneonstudent'sown laptopsduringthesemester. Differentgroupsofstudentsmaybeassigneddifferentvariantsofprojects.Theremaybesmallbutunavoidable variationsinthedifficultyofdifferentvariants. Supervision Officehours Yes Assistants Yes Forum Yes Resources Bibliography AndrewW.Appel,ModerncompilerimplementationinJava(orML),Addison-Wesley1997(fullPDF availablefromEPFLlibrary) AlfredV.Aho,MonicaS.Lam,RaviSethi,JeffreyD.Ullman:Compilers:Principles,Techniques,and Tools(2ndEdition,2006) NiklausWirth:CompilerConstruction,neattextbookfromaprominentclassicalauthority.Freelyavailable http://www.ethoberon.ethz.ch/WirthPubl/CBEAll.pdf Ressourcesenbibliothèque •Additionally,allmaterial •Compilers,principle,techniquesandtools/Aho Computerlanguageprocessing Page2/3"}
{"pack_id": "french_pack", "section_title": "Computer language processing", "page": 85, "chunk_id": "french_pack_85_0", "content": "85 2020-2021COURSEBOOKLET •CompilerConstruction/Wirth •ModerncompilerimplementationinJava/Appel Notes/Handbook http://lara.epfl.ch/w/cc Faboulousandgentlypacedvideos:https://www.coursera.org/course/compilers Websites •https://lara.epfl.ch/w/cc Prerequisitefor Advancedcompilerconstruction RecommendedforFoundationsofsoftware Computerlanguageprocessing Page3/3"}
{"pack_id": "french_pack", "section_title": "Computer networks", "page": 86, "chunk_id": "french_pack_86_0", "content": "86 2020-2021COURSEBOOKLET COM-208 Computer networks ArgyrakiKaterina Cursus Sem. Type Language English Cybersecurityminor H Opt. Credits 5 HES-IN H Obl. Session Winter Semester Fall HES-SC H Obl. Exam Written Informatique BA3 Obl. Workload 150h Weeks 14 MineurenInformatique H Opt. Hours 4weekly MineurenSystèmesdecommunication H Opt. Lecture 2weekly Systèmesdecommunication BA3 Obl. Exercises 2weekly Numberof UNIL-Sciencesforensiques H Opt. positions Summary Thiscourseprovidesanintroductiontocomputernetworks.Itdescribestheprinciplesthatunderlymodernnetwork operationandillustratesthemusingtheInternetasanexample. Content •OverviewofInternetoperation(maincomponentsandprotocols). •Applicationlayer(web,cookies,peertopeer). •Socketprogramming(howtowriteaverysimplenetworkapplication). •Transportlayer(UDP,TCP,congestioncontrol). •Networklayer(IPforwardingandbasicrouting). •Datalinklayer(switching). •Security(secureemail,SSL,IPsec). Keywords •Computernetworks •Internet •HTTP •Peer-to-peernetworks •Sockets,TCP/IP,congestioncontrol,routing,switching,networksecurity. LearningPrerequisites Requiredcourses •CS107-Introductiontoprogramming •COM101-AdvancedInformationComputationCommunicationI LearningOutcomes Bytheendofthecourse,thestudentmustbeableto: •Designsimplenetworkapplications. Computernetworks Page1/3"}
{"pack_id": "french_pack", "section_title": "Computer networks", "page": 87, "chunk_id": "french_pack_87_0", "content": "87 2020-2021COURSEBOOKLET •Choosewhichfunctionstoimplementateachnetworklayer. •Comparedifferentnetworkprotocols. •Performsimplenetworktroubleshooting. •Usesimplenetworkmonitoringtools. •Implementsimpleclient-serverapplications. •Investigatesimplenetworkattacks. •ExplainhowbasicInternetapplicationswork. •ExplainhowTCP/IPworks. Transversalskills •UsebothgeneralanddomainspecificITresourcesandtools •Useaworkmethodologyappropriatetothetask. •Demonstratethecapacityforcriticalthinking •Demonstrateacapacityforcreativity. Teachingmethods •Lectures •Readingsssignments •Homeworkproblems •Hands-onexercises Expectedstudentactivities Thestudentsareexpectedto: •attendthelectures •completehomeworkproblems •completehands-onexercises •studytheirnotesand--whenneeded--complementbyreadingrelevantbookchapters Assessmentmethods •Finalexam •Midtermexam(online) •Quizzes(online) Supervision Officehours Yes Assistants Yes Forum Yes Resources Bibliography ComputerNetworking:ATop-DownApproachbyJamesF.KuroseandKeithW.Ross. Ressourcesenbibliothèque Computernetworks Page2/3"}
{"pack_id": "french_pack", "section_title": "Computer networks", "page": 88, "chunk_id": "french_pack_88_0", "content": "88 2020-2021COURSEBOOKLET •ComputerNetworking/Kurose Websites •https://sites.google.com/site/com208computernetworks/ Computernetworks Page3/3"}
{"pack_id": "french_pack", "section_title": "Computer security", "page": 89, "chunk_id": "french_pack_89_0", "content": "89 2020-2021COURSEBOOKLET COM-301 Computer security TroncosoCarmela Cursus Sem. Type Language English Cybersecurityminor H Opt. Credits 4 Informatique BA5 Obl. Session Winter Semester Fall MineurenInformatique H Opt. Exam Duringthe MineurenSystèmesdecommunication H Opt. semester Workload 120h Systèmesdecommunication BA5 Obl. Weeks 14 UNIL-Sciencesforensiques H Opt. Hours 4weekly Lecture 2weekly Exercises 1weekly Practical 1weekly work Numberof positions Summary Thisisanintroductorycoursetocomputersecurityandprivacy.Itsgoalistoprovidestudentswithmeanstoreason aboutsecurityandprivacyproblems,andprovidethemwithtoolstoconfrontthem. Content Thegoalofthiscourseistointroducestudentstosecurityengineering.Thecoursewillhelpstudentstothinkasan adversarysothattheycananalysesystemsandestablishsecuritypolicies.Wewillcoveranumberofcommonsecurity mechanismsatalllayers,andlearntheirpropertiesandlimitations. Coretopics: •Securitydesignprinciples •Accesscontrol •Authenticationmechanisms •Appliedcryptography •SotwareandNetworksecurity •Privacy Keywords SecurityPrivacy LearningPrerequisites Recommendedcourses CS-233aorCS-233bIntroductiontoMachineLearning(forprogramming) COM-208ComputerNetworks CS-323Operativesystems Importantconceptstostartthecourse BasicnotionsTCP/IP Basicnotionsprogramming LearningOutcomes Computersecurity Page1/2"}
{"pack_id": "french_pack", "section_title": "Computer security", "page": 90, "chunk_id": "french_pack_90_0", "content": "90 2020-2021COURSEBOOKLET Bytheendofthecourse,thestudentmustbeableto: •Analyzesystemsforsecurity •Decideonsecuritymechanismstoapply •Establishasecuritypolicy Teachingmethods Pre-recordedlectures Practicalassignemntsinteractivelresolvedinclassusingtheconceptslearnedinthelectures Writtenexercisestoreaffirmthelearningofthecourse Practicalprogramminghomeworkstodevelopattacksanddefenses Expectedstudentactivities Attendinglectures,solvingexercises,readinganddemonstratingunderstandingofprovidedmaterials. Assessmentmethods •Takehomeexams(80%) •Practicalhomeworks(20%) Supervision Officehours Yes Assistants Yes Forum Yes Resources Bibliography ComputersecuritybyDieterGollmann SecurityEngineeringbyRossAnderson ComputerSecurity:PrinciplesandPracticebyStallingsandBrown Ressourcesenbibliothèque •SecurityEngineeringbyRossAnderson •ComputersecuritybyDieterGollmann •ComputerSecurity:PrinciplesandPracticebyStallingsandBrown Prerequisitefor •COM-402Informationsecurityandprivacy •CS-523Advancedtopicsonprivacyenhancingtechnologies Computersecurity Page2/2"}
{"pack_id": "french_pack", "section_title": "Electromagétisme I : lignes et ondes", "page": 91, "chunk_id": "french_pack_91_0", "content": "91 2020-2021LIVRETDECOURS EE-200 Electromagnétisme I : lignes et ondes FleuryRomain Cursus Sem. Type Langue français Génieélectriqueetélectronique BA3 Obl. Crédits 3 HES-EL H Obl. Session Hiver Semestre Automne Informatique BA5 Opt. Examen Ecrit Systèmesdecommunication BA5 Opt. Charge 90h Semaines 14 Heures 3hebdo Cours 2hebdo Exercices 1hebdo Nombrede places Résumé Lesignalélectriqueestunvecteuressentielpourlatransmissiond'informationetd'énergie.Enhautefréquenceellese manifestecommeunsignalélectromagnétiquedontl'étudedemandeledéveloppementdemodèlesphysiqueset mathématiquesspécifiquesbaséssurleséquationsd'onde. Contenu 1)Composantsélectroniqueslocalisésoudistribués 1. Limitesdelathéoriedescircuitslocalisés 2. Tempsdemontéeettempsdepropagation 3. Périodeettempsdepropagation 4. Tailleducomposantetlongueurd’onde 5. Lesdifférentstypesdecomposantsélectroniques 2)Théoriedeslignesdetransmission:domainetemporel 1. Discussionheuristique 2. Equationsdebaseetsolutions 3. Réflexionsauxdiscontinuités 4. Terminaisonsrésistives 5. Terminaisonsréactives 6. Terminaisonsnonlinéaires:diagrammedeBergeron 7. Application:réflectométrieendomainetemporel 8. Paramètresdeslignesdetransmissionscourantes 3)Théoriedeslignesdetransmission:domainefréquentiel 1. Ondesmonochromatiquesetphaseurscomplexes 2. Lignesterminéesparuncourt-circuitouuncircuitouvert 3. Lignesterminéesparuneimpédancearbitraire 4. Fluxdepuissancesurunelignedetransmission 5. Adaptationd’impédance 6. AbaquedeSmith 7. Effetdespertesetabsorption 8. Systèmesàdeuxports:paramètresS,Z,etM Mots-clés Signalélectromagnétique,CircuitsDistribués,Lignesdetransmission,OndesélectromagnétiquesGuidées,Réflexionet transmission,Circuitséquivalents,Circuitsradiofréquences,Impédance. Compétencesrequises Coursprérequisobligatoires ElectromagnétismeI:lignesetondes Page1/2"}
{"pack_id": "french_pack", "section_title": "Electromagétisme I : lignes et ondes", "page": 92, "chunk_id": "french_pack_92_0", "content": "92 2020-2021LIVRETDECOURS EE-100,Scienceettechnologiesdel'électricité Coursprérequisindicatifs Algèbre,AnalyseIetII,Physiquegénérale Conceptsimportantsàmaîtriser Critèresdevaliditédel'hypothèsedescircuitslocalisés. Propriétésdusignalélectromagnétique:vitesse,fréquence,longueurd'onde. Natureetcomportementdessignauxetondesélectromagnétiques:propagationguidéeunidimensionnelle (lignesdetransmission),endomainetemporeletfréquentiel. Diagrammesdesreflectionsmultiples.Réflectométrieendomainetemporel. Notiondephaseurcomplexe.AbaquedeSmith,Adaptationd'impédance. Acquisdeformation Alafindececoursl'étudiantdoitêtrecapablede: •Analyserunsystèmeàlignesdetransmission •Calculerlaréponsed'uncircuitdistribué •Concevoirunsystèmeadaptéenimpédance •UtiliserunAbaquedeSmith Méthoded'enseignement Excathedraavecexercicesensalle.UnsupportdecoursestfournisurMoodle,contenantl'essentielducours,ainsique descadresvidespourpermettreàl'étudiantdeprendrenotesdesdémonstrationsetexempleseffectuésavecle professeur.Lesexercices,enrelationdirecteaveclecours,peuventnécessiterl'utilisationd'unordinateur(MatLabou Mathematica). Travailattendu Participationactiveaucoursetauxséancesd'exercices. Méthoded'évaluation Examenécrit. Ressources Bibliographie 1)SupportdecoursparR.Fleury,disponiblesurMoodle. Pourallerplusloin: 2)\"Électromagnétisme\",Vol.IIIduTraitéd'électricitédel'EPFL- 3)Ramo:\"FieldsandWavesinCommunicationElectronics\" Ressourcesenbibliothèque •Electromagnétisme/Gardiol •FieldsandWavesinCommunicationElectronics/Ramo Préparationpour ElectromagnétismeII:calculdeschamps.TransmissionsHyperfréquencesetOptiques,Télécommunications,Réseaux électriques,RayonnementetAntennes,Propagation,Audio,cycleMasterEPFL-SELetEPFL-SC ElectromagnétismeI:lignesetondes Page2/2"}
{"pack_id": "french_pack", "section_title": "Electromagétisme II : calcul des champs", "page": 93, "chunk_id": "french_pack_93_0", "content": "93 2020-2021LIVRETDECOURS EE-201 Electromagnétisme II : calcul des champs FleuryRomain Cursus Sem. Type Langue français Génieélectriqueetélectronique BA4 Obl. Crédits 3 HES-EL E Obl. Session Eté Semestre Printemps Informatique BA6 Opt. Examen Ecrit Systèmesdecommunication BA6 Opt. Charge 90h Semaines 14 Heures 3hebdo Cours 2hebdo Exercices 1hebdo Nombrede places Résumé Cecourstraitedel'électromagnétismedanslevideetdanslesmilieuxcontinus.Apartirdesprincipesfondamentauxde l'électromagnétisme,onétablitlesméthodesderésolutiondeséquationsdeMaxwelldanslevideetdansdesmilieux matérielscomplexes. Contenu 1)Rappelsd’analysevectorielle 1. Champsvectorielsetchampscalaires 2. Systèmesdecoordonnées 3. Gradient,divergenceetrotationnel 2)Théorieduchampélectromagnétique 1. Principesfondamentaux:ÉquationsdeMaxwell,Conservationdelacharge,Champsmonochromatiques,Relations constitutives,Conditionsauxlimites 2. Théorèmesfondamentaux:ThéorèmedePoynting,Dualitéélectromagnétique,Unicitéduchamp,Réciprocitéde Lorentz 3)Ondesplanesmonochromatiques 1. Relationdedispersion 2. Polarisation 3. Conducteurseteffetdepeau 4. CoefficientsdeFresnel 5. Théoriedeslignesdetransmission 4)Rayonnementenespacelibre 1. Solutionexacte:Potentielvecteuretpotentielscalaire,JaugedeLorentz,FonctiondeGreen,Dipôleinfinitésimal 2. Solutionenchamplointain 3. Méthodedesimages 4. Principed’équivalencedeHuygens 5. Limitedediffraction 5)Milieuxdispersifs(siletempslepermet) 1. Matériauxplasmoniques:modèledeDrude 2. RelationsdeKramers-Kronig Mots-clés electromagnetisme,théorieduchamp,distributionsdechargesetcourantsélectriques,propagationdesondes électromagnétiques,rayonnement,champlointain,milieuxcontinus Compétencesrequises Coursprérequisobligatoires PhysiqueGénérale(Electromagnétisme) ElectromagnétismeII:calculdeschamps Page1/2"}
{"pack_id": "french_pack", "section_title": "Electromagétisme II : calcul des champs", "page": 94, "chunk_id": "french_pack_94_0", "content": "94 2020-2021LIVRETDECOURS Coursprérequisindicatifs AnalyseI,II,III Conceptsimportantsàmaîtriser Chargesetcourant,Champélectromagnétique,Ondesélectromagnétiques(longueurd'onde,fréquence, vitesse,impédancecaractéristique,polarisation),Radiation,polarisationdelamatière,dissipation. Acquisdeformation Alafindececoursl'étudiantdoitêtrecapablede: •Théoriserlesprincipesfondamentauxdel'électromagnétisme •Comparerlesdifférentespropriétésélectromagnétiquesdesmatériaux •Calculerleschampsélectriquesetmagnétiquesrayonnésparunedistributiondecharge Méthoded'enseignement Excathedraavecexercicesensalle. Travailattendu Participationactiveaucoursetauxséancesd'exercices. Méthoded'évaluation Examenécrit. Ressources Bibliographie SupportdecoursparR.Fleury,disponiblesurMoodle. Ressourcesenbibliothèque •FieldsandWavesinCommunicationElectronics/Ramo •Electromagnétisme/Gardiol Polycopiés DisponiblesurMoodle. Préparationpour TransmissionsHyperfréquencesetOptiques,Photonique,Télécommunications,OrientationCommunicationsmobiles, RayonnementetAntennes,Propagation,Audio ElectromagnétismeII:calculdeschamps Page2/2"}
{"pack_id": "french_pack", "section_title": "Electronique I", "page": 95, "chunk_id": "french_pack_95_0", "content": "95 2020-2021LIVRETDECOURS EE-202(b) Electronique I ZysmanEytan Cursus Sem. Type Langue français Informatique BA3 Opt. Crédits 4 Systèmesdecommunication BA3 Opt. Session Hiver Semestre Automne Examen Pendantle semestre Charge 120h Semaines 14 Heures 3hebdo Cours 2hebdo Exercices 1hebdo Nombrede places Résumé Découvrirlemondedel'électroniquedepuislesloisfondamentalesdescomposantsdiscretslinéairesetnonlinéaires. Lescircuitsobtenusavecdesassemblagesdecomposantsnécessitentdenombreusestechniquesdemodélisationet d'analyseainsiquedesvérificationexploitantunsimulateur Contenu Cours •Composantspassifslinéaires •Techniquesderésolutiondecircuitslinéaires •Lesdiodes •introductionauxtransistors •Techniquesdemodélisationdescomposantsnonlinéaires •Simulationélectronique Exercices L'étudiantappliqueralesnombreusesméthodesvuesencourspourrésoudredesexercicespratiquesquipourrontêtre vérifiésaveclasimulation. Mots-clés Composantspassifs,composantsactifs,composantslinéaires,composantsnonlinéaires,diodes,transistors, modélisation,simulation,LoisdeKirchhoff,Thévenin-Norton,Superposition,impédancescomplexes,fonctionsde transfert,Bode,conceptd'amplification. Compétencesrequises Coursprérequisobligatoires Coursd'analyse:équationdifférentiellesdupremieretsecondordre,nombrescomplexes,résolutionde systèmed'équationslinéaires. Coursprérequisindicatifs Electricitédebase:électrostatique,électrocinétique. Acquisdeformation Alafindececoursl'étudiantdoitêtrecapablede: ElectroniqueI Page 1 / 2"}
{"pack_id": "french_pack", "section_title": "Electronique I", "page": 96, "chunk_id": "french_pack_96_0", "content": "96 2020-2021LIVRETDECOURS •Analyserdescircuitscomplexes •Modéliserdescomposantsnonlinéaires •Modéliserdescircuitscomplexes •Raisonneràpartirdeméthoded'observation •Dessinerdescomportementstemporelsetfréquentiels •Interpréterdessignauxdenaturesdiverses •Utiliserlesbonnesméthodesderésolution Compétencestransversales •Utiliserlesoutilsinformatiquescourantsainsiqueceuxspécifiquesàleurdiscipline. •Auto-évaluersonniveaudecompétenceacquiseetplanifiersesprochainsobjectifsd'apprentissage. Méthoded'enseignement EnraisonduCOVID-19,l'enseignement,incluantcoursetexercices,seferaenvisioconférence.Lesenregistrements desséancesserontdisponiblessurMoodle. Méthoded'évaluation ToujoursenraisonduCOVID-19,l'évaluationseferasouslaformed'unrapportindividuelsurdesproblèmesde conceptionetlesrésultatsdevrontêtrevalidéspardessimulations.Lerapportserasuivid'uneinterrogationorale. LerapportdevraêtreremisavantlesvacancesdeNoëletl'oralseraorganisédèslarentréedejanvier. Encadrement Officehours Non Assistants Oui Forumélectronique Oui Ressources Bibliographie •Principesd'électronique:coursetexercicescorrigés.AlbertPaulMalvino;trad.del'américainpar BernardBoittiaux;Paris:Dunod,2002 Ressourcesenbibliothèque •Principesd'électronique/Malvino Polycopiés •listedesitesapprofondissantlesnotionsvuesencours •Diapositivesducours •Diapositivescommentées •Exercicesetcorrigés. •Développementsencourssurécraninteractifoutablet LiensMoodle •http://moodle.epfl.ch/course/view.php?id=13726 Préparation pour Électronique II Electronique I Page 2 / 2"}
{"pack_id": "french_pack", "section_title": "Electronique II", "page": 97, "chunk_id": "french_pack_97_0", "content": "97 2020-2021LIVRETDECOURS EE-203(b) Electronique II ZysmanEytan Cursus Sem. Type Langue français Informatique BA5 Opt. Crédits 4 Systèmesdecommunication BA5 Opt. Session Hiver Semestre Automne Examen Pendantle semestre Charge 120h Semaines 14 Heures 4hebdo Cours 2hebdo Exercices 2hebdo Nombrede places Résumé Maîtriserdesblocsfonctionnelsnécessitantunplushautniveaud'abstraction.Réalisationdefonctionsélectroniquesde hautniveauexploitantlesamplificateursopérationnels. Contenu Cours •Modèlesd'amplificateurs •Bandepassantedesamplificateurs •Familleslogiques •l'amplificateuropérationnelenréactionnégative •l'amplificateuropérationnelenréactionpositive •lesfiltresactifsd'ordreN •l'amplificateuropérationneletsesimperfections •lesbascules Exercicesettravauxpratiques CommeenélectroniqueI,l'étudiantappliqueradenombreusesméthodesvuesencourspourrésoudredesexercices pratiquesquipourrontêtrevérifiésaveclasimulation. Mots-clés Amplificateur,Modèledequadripôle,polarisation,schémapetitsignaux,Filtres,bandepassante,puissantestatique, puissancedynamique,Slew-rate,Tchebychev,Butterworth,TriggerdeSchmitt,comparateur,intégrateur,différentiateur, monostable,bistable,astable,générateurdesignaux,margedebruit,Fan-In,Fan-Out,Puissancedissipée,tension d'offset. Compétencesrequises Coursprérequisindicatifs ÉlectroniqueI Acquisdeformation Alafindececoursl'étudiantdoitêtrecapablede: •Concevoirdesfiltresactifs ElectroniqueII Page1/2"}
{"pack_id": "french_pack", "section_title": "Electronique II", "page": 98, "chunk_id": "french_pack_98_0", "content": "98 2020-2021LIVRETDECOURS •Concevoirdescircuitsamplificateurs •Comparerlesdifférentesfamilleslogiques •Analyserlabandepassanted'unefonctionélectronique •Exploiterdesblocsfonctionnelsdehautniveau •Représenterlanotiondetemps •Synthétiserdescircuitslogiques Compétencestransversales •Utiliserlesoutilsinformatiquescourantsainsiqueceuxspécifiquesàleurdiscipline. •Auto-évaluersonniveaudecompétenceacquiseetplanifiersesprochainsobjectifsd'apprentissage. Méthoded'enseignement EnraisonduCOVID-19,l'enseignement,incluantcoursetexercices,seferaenvisioconférence.Lesenregistrements desséancesserontdisponiblessurMoodle. Encadrement Officehours Non Assistants Oui Forumélectronique Oui Ressources Bibliographie Principesd'électronique:coursetexercicescorrigés.AlbertPaulMalvino;trad.del'américainparBernard Boittiaux;Paris:Dunod,2002 Ressourcesenbibliothèque •Principesd'électronique/Malvino Polycopiés •listedesitesapprofondissantlesnotionsvuesencours •Diapositivesducours •Diapositivescommentées •Exercicesetcorrigés. •Développementsencourssurécraninteractifoutablet LiensMoodle •http://moodle.epfl.ch/course/view.php?id=13727 Préparationpour ElectroniqueIII ElectroniqueII Page2/2"}
{"pack_id": "french_pack", "section_title": "Electronique III", "page": 99, "chunk_id": "french_pack_99_0", "content": "99 2020-2021LIVRETDECOURS EE-381 Electronique III ZysmanEytan Cursus Sem. Type Langue français Informatique BA6 Opt. Crédits 3 Systèmesdecommunication BA6 Opt. Session Eté Semestre Printemps Examen Pendantle semestre Charge 90h Semaines 14 Heures 3hebdo Cours 2hebdo Exercices 1hebdo Nombrede places Résumé Comparaisonentrelessystèmesàcomposantsdiscretsetlessystèmesintégrés.Introductionauxsystèmes électroniquesnumériquesetanalogiquesetàleurinterfaçage.Analysesousformed'unprojetd'uncahierdescharges d'unsystèmeintégrémixteanalogique/numérique. Contenu Cours •Cellulesanalogiques:miroirdecourant,pairedifférentielle,Push-pull,... •ConversionA/NetN/A:introduction-définitions,conversionnumérique/analogique,conversion analogique/numérique. •OscillateuretbouclesàverrouillagedephaseouPhase-LockedLoops(PLL) •Introductionauxtechnologiesmixtesanalogiquesetnumériques •Techniquesdeconceptiondecircuitsintégrés •ApplicationauxASICanalogiques/numériques Exercices l'étudiantanalyseraetsimuleradenombreuxblocsfonctionnelsvusencours projet L'étudiantferalaconceptiond'unpetitsystèmeélectroniquemixteanalogiqueetnumériqueetévaluerasacomplexité sousformedecircuitintégré. Mots-clés pairedifférentielle,miroirdecourant,structurecascod,chargeactive,Push-Pull,Darlington,Wilson,Widlar,FullCustom, Semi-custom,Librairiedecellules,FPGA,EPLD,PLA,ROM,Architecturedecircuitintégré,Technologiedes semiconducteurs,PLL,Stabilité,Oscillateur,Convertisseurincrémental,convertisseurlogarithmique,convertisseurflash etsemiFlash,Sigma/Delta. Compétencesrequises Coursprérequisindicatifs Coursd'électroniquedebaseIetII Conceptsimportantsàmaîtriser AutomatesdeMooreetdeMealy. TransforméedeLaplace. Acquisdeformation ElectroniqueIII Page1/3"}
{"pack_id": "french_pack", "section_title": "Electronique III", "page": 100, "chunk_id": "french_pack_100_0", "content": "100 2020-2021LIVRETDECOURS Alafindececoursl'étudiantdoitêtrecapablede: •Analyseruncahierdeschargesenélectronique •Concevoirunsystèmeélectronique •Décrirelecomportementducircuitsousformealgorithmique •Estimerlacomplexitéetlesperformancesducircuit Compétencestransversales •Fixerdesobjectifsetconcevoirunpland'actionpourlesatteindre. •Planifierdesactionsetlesmeneràbiendefaçonàfaireunusageoptimaldutempsetdesressourcesàdisposition. •Communiquerefficacementetêtrecomprisycomprispardespersonnesdelanguagesetculturesdifférentes. •Utiliserlesoutilsinformatiquescourantsainsiqueceuxspécifiquesàleurdiscipline. •Accéderauxsourcesd'informationsappropriéesetlesévaluer. •Ecrireunrapportscientifiqueoutechnique. •Faireuneprésentationorale. Méthoded'enseignement •Coursexcathedraetexercicesdirigésensalle. •Animationdeséancesdeprojet Travailattendu •Remised'unrapportd'analysedesystèmeélectronique Méthoded'évaluation •Travailécrit •Rapportetprésentationoraleduprojet Encadrement Officehours Non Assistants Non Forumélectronique Oui Ressources Bibliographie Traitédel'électroniqueanalogiqueetnumérique,1,Techniquesanalogiqueetnumérique,Paul Horowitz,WinfieldHill,Elektor,2009 Ressourcesenbibliothèque •Traitédel'électroniqueanalogiqueetnumérique(vo.1)/Horrowitz Polycopiés •listedesitesapprofondissantlesnotionsvuesencours ElectroniqueIII Page2/3"}
{"pack_id": "french_pack", "section_title": "Electronique III", "page": 101, "chunk_id": "french_pack_101_0", "content": "101 2020-2021LIVRETDECOURS •Diapositivesducours •Diapositivescommentées •Exercicesetcorrigés. •DéveloppementsencourssurTablet •Cahierdeschargesduprojet ElectroniqueIII Page3/3"}
{"pack_id": "french_pack", "section_title": "Functional programming", "page": 102, "chunk_id": "french_pack_102_0", "content": "102 2020-2021COURSEBOOKLET CS-210 Functional programming KuncakViktor,OderskyMartin Cursus Sem. Type Language English HES-IN H Obl. Credits 5 HES-SC H Obl. Session Winter Semester Fall Informatique BA3 Obl. Exam Written MineurenDatascience H Opt. Workload 150h Weeks 14 MineurenInformatique H Opt. Hours 4weekly Systèmesdecommunication BA3 Opt. Lecture 2weekly Exercises 2weekly Numberof positions Summary Understandingoftheprinciplesandapplicationsofdeclaratativeprogramming,thefundamentalmodelsofprogram execution,applicationoffundamentalmethodsofprogramcomposition,meta-programmingthroughtheconstructionof interpretersandadvancedprogrammingtechniques. Content IntroductiontoprogramminginScala FunctionsandEvaluation Higher-OrderFunctions DataandAbstraction Typesandpatternmatching Lists Collections Lazyevaluation Forexpressions,generatorsandmonads FunctionsandState LambdacalculusandLisp InterpretingFunctionalLanguages LearningPrerequisites Requiredcourses CS-107Introductiontoprogramming CS-108Practiceofobject-orientedprogramming LearningOutcomes Bytheendofthecourse,thestudentmustbeableto: •Createfunctionalprograms •Designrobustandreadablesoftware •Formalizeprogramcorrectness •Interpretprogramsautomatically •Provecorrectnessusinginduction •Constructsoftware •Demonstrateacapacityforcreativity. •Useaworkmethodologyappropriatetothetask. •Setobjectivesanddesignanactionplantoreachthoseobjectives Functionalprogramming Page1/2"}
{"pack_id": "french_pack", "section_title": "Functional programming", "page": 103, "chunk_id": "french_pack_103_0", "content": "103 2020-2021COURSEBOOKLET •Givefeedback(critique)inanappropriatefashion. Teachingmethods MOOC.ExCathedra.Exercisesandprojects Assessmentmethods •70%examintheexamsession •25%programminglabassignmentsduringthesemester •5%writtenexercisesduringthesemester Supervision Officehours Yes Assistants Yes Forum Yes Resources Bibliography Abelson/Sussman:StructureandInterpretationofComputerPrograms,MITPress MartinOdersky,LexSpoon,andBillVenners:ProgramminginScala(ThirdEdition).Acomprehensive step-by-stepguide.https://www.artima.com/shop/programming_in_scala Ressourcesenbibliothèque •StructureandInterpretationofComputerPrograms/Abelson •ProgramminginScala(ThirdEdition)/Odersky Websites •https://www.artima.com/shop/programming_in_scala •https://www.scala-lang.org/ •https://gitlab.epfl.ch/lamp/cs210 Functionalprogramming Page2/2"}
{"pack_id": "french_pack", "section_title": "General physics : electromagnetisme", "page": 104, "chunk_id": "french_pack_104_0", "content": "104 2020-2021COURSEBOOKLET PHYS-114 General physics: electromagnetism DilHugo Cursus Sem. Type Language English HES-IN H Obl. Credits 4 HES-SC H Obl. Session Winter Semester Fall Informatique BA3 Obl. Exam Written Systèmesdecommunication BA3 Obl. Workload 120h Weeks 14 Hours 4weekly Lecture 2weekly Exercises 2weekly Numberof positions Summary Thecoursefirstdevelopsthebasiclawsofelectricityandmagnetismandillustratestheuseinunderstandingvarious electromagneticphenomena. Content ELECTRICITYANDMAGNETISM Electricfields:electricchargesandfields;Coulomb'slaw;Gauss'slaw Electricpotentialandenergy:potential;energy;capacitanceandcapacitors;dielectricmaterials Magnetism:magneticforcesandfields;Ampere'slaw;Biot-Savartlaw Electromagnetism:electromotiveforce;Farady'slaw;inductanceandinductors;Maxwell'sequations Electromagneticwaves:electromagneticspectrum;antennas LearningPrerequisites Recommendedcourses GeneralPhysicsI LearningOutcomes Bytheendofthecourse,thestudentmustbeableto: •Formulateapproachforsolvingphysicsproblems •Analyzephysicalsystems •Establishcompetenceincomplexproblemsolving Transversalskills •Useaworkmethodologyappropriatetothetask. •Takefeedback(critique)andrespondinanappropriatemanner. •Accessandevaluateappropriatesourcesofinformation. Teachingmethods Excathedrawithdemonstrations,exercisesinclass Assessmentmethods onlyfinalwrittenexam Generalphysics:electromagnetism Page1/2"}
{"pack_id": "french_pack", "section_title": "General physics : electromagnetisme", "page": 105, "chunk_id": "french_pack_105_0", "content": "105 2020-2021COURSEBOOKLET Supervision Assistants Yes Resources Bibliography polycopiés/coursenotes Generalphysics:electromagnetism Page2/2"}
{"pack_id": "french_pack", "section_title": "Intelligence artificielle", "page": 106, "chunk_id": "french_pack_106_0", "content": "106 2020-2021LIVRETDECOURS CS-330 Intelligence artificielle FaltingsBoi Cursus Sem. Type Langue français Informatique BA6 Opt. Crédits 4 MineurenInformatique E Opt. Session Eté Semestre Printemps Systèmesdecommunication BA6 Opt. Examen Pendantle semestre Charge 120h Semaines 14 Heures 4hebdo Cours 2hebdo Exercices 2hebdo Nombrede places Résumé Introductionauxtechniquesdel'IntelligenceArtificielle,complémentéepardesexercicesdeprogrammationquimontrent lesalgorithmesetdesexemplesdeleurapplicationàdesproblèmespratiques. Contenu Lecourscomportetroissegmentsquitraitentles3différentsformesd'inférencelogique:déduction,abductionet induction: 1.Représentationdeconnaissancesenlogiquedeprédicats,algorithmesd'inférence 2.Systèmesexperts 3.Raisonnementimprécisetincertain 4.Algorithmesderecherche 5.SatisfactiondeContraintes 6.DiagnosticetPlanification 7.Apprentissagesupervisé 8.Apprentissagenon-supervisé 9.Apprentissagebio-inspiré Compétencesrequises Coursprérequisindicatifs Functionalprogramming Conceptsimportantsàmaîtriser Logiquedeprédicats Algorithmesdebase Théoriedeprobabilités Programmation Acquisdeformation Alafindececoursl'étudiantdoitêtrecapablede: •Choisirlebontyped'inférencepouruneapplication •Choisirlaméthodelaplusappropriéepouruncertaintyped'inférence •Evaluerlafaisabilitéd'uneapplicationdel'IntelligenceArtificielle •Choisir,implémenteretdécriredesalgorithmesd'inférencedéductivesurlabasedecalculdeprédicats Intelligenceartificielle Page1/2"}
{"pack_id": "french_pack", "section_title": "Intelligence artificielle", "page": 107, "chunk_id": "french_pack_107_0", "content": "107 2020-2021LIVRETDECOURS •Formulerdesconnaissancesutilisantlalogiquedesprédicats •Décriredesméthodesd'inférenceavecdesinformationsimprécisesetincertaines •Choisir,implémenteretdécriredesalgorithmesderechercheetdesatisfactiondecontraintes •Choisiretdécriredesméthodespourlediagnostic •Choisir,implémenteretdécriredesméthodespourlaplanification •Choisir,implémenteretdécriredesméthodesd'apprentissagesupervisésurlabased'exemples •Choisir,implémenteretdécriredesméthodesd'apprentissagenon-supervisé Méthoded'enseignement Excathedra,travauxpratiquessurordinateur Travailattendu Participationaucoursetexercices:4heures/semaine Lecture:2heures/semaine Travailindependant:3heures/semaine Méthoded'évaluation Exercices30%,examensintermediaireetfinal70% Ressources Bibliographie BoiFaltings,MichaelSchumacher:IntelligenceArtificielleparlapratique,PPUR (Russel&Norvig:ArtificialIntelligence:AModernApproach/PrenticeHall) Ressourcesenbibliothèque •ArtificialIntelligence/Russell •IntelligenceArtificielleparlapratique/Faltings Sitesweb •http://liawww.epfl.ch/ •http://moodle.epfl.ch/ Préparationpour IntelligentAgents Intelligenceartificielle Page2/2"}
{"pack_id": "french_pack", "section_title": "Interaction personne-système", "page": 108, "chunk_id": "french_pack_108_0", "content": "108 2020-2021LIVRETDECOURS CS-213 Interaction personne-système Cursus Sem. Type Langue français Informatique BA4 Opt. Crédits 5 Systèmesdecommunication BA4 Opt. Session Eté Semestre Printemps Examen Ecrit Charge 150h Semaines 14 Heures 4hebdo Cours 2hebdo Projet 2hebdo Nombrede places Remarque pasdonnéen2020-21 Résumé Ledomainede\"humancomputerinteraction\"rassemblelesconnaissancesetméthodespermettantd'optimiserla manièredontunutilisateurinteragitavecunordinateur/unrobot.Cesconnaissancesportentsurlefonctionnementdes systèmes,maisaussisurlefonctionnementdeshumainsquil'utilisent. Contenu Partie1:Interactions 1.Stylesd'##interaction.Quellessontlespropriétésdesdifférentesinterfaces:langagesdecommandes,interfaces tangibles,vocales,gestuelles,réalitévirtuelleouaugmentée,etc.? 2.Cognition.Pourquoilesutilisateurscommettent-ilsdeserreurs?Commentapprennent-ilsàutiliserunenouvelle application? 3.Perception.Quefaut-ilcomprendredelavisionhumainepourdévelopperuneinterface?Commentcrée-t-onune perception3Dsurunécran2D? 4.Interactiondesign.Quelssontlesprincipesàrespecterlorsdelaconceptiond'##uneinterface? Partie2:Contextes 5.Interactionpersonne-robot.L'##interactionavecunrobotdiffère-t-elledel'##interactionavecunordinateur?Quelest lerôledufeedback\"##haptic\"Â?Unrobotpeut-ilpercevoirnosémotions?Quianticipelesintentionsdel'##autre? 6.\"##Ubiquitouscomputingâ##.Quellesdifficultésapparaissentdansl'##interactionavecuntéléphone,\"unevoiture,un micro-ondeouundistributeurdeboissons? 7.Interactionsmédiatiséesentrepersonnes.Commentledigitalsupporte-t-illacollaborationà distance?Quelles différencesentreuneréunionprésentielleetunevisio-conférence? 8.Lesjeux.Quels\"##gamesmechanics\"##permettentdeconcevoirunjeuetd'##accrocherlejoueur? Partie3:Mét\"hodes 9.\"##UsabilityTesting\"##.Commentvérifiersiuneapplicationestfacileàutiliser?Quandutiliserle\"##magicien d'##Oz\"? 10.\"##Userexperience\"##.Quellescompétencessontrequisespourun\"##UXdesigner\"? 11.Méthodesexpérimentales.Commentconduireuneexpérienceformelleaveclesutilisateurs?Quepeut-ontirer d'##un\"##eyetracker\"? 12.Mécanismesd'##adaptation.Commentl'##interfacedoit-elles'##adapterauxspécificitésd'##unutilisateurs? Acquisdeformation Alafindececoursl'étudiantdoitêtrecapablede: •Détecterlesdéfautsd'uneinterface •Expliquerlesdéfautsdupointdevuedel'utilisateur •Suggérerdesaméliorationsàuneinterface •Réaliseruntestde\"usability\" Interactionpersonne-système Page1/2"}
{"pack_id": "french_pack", "section_title": "Interaction personne-système", "page": 109, "chunk_id": "french_pack_109_0", "content": "109 2020-2021LIVRETDECOURS •Concevoiruneexpérience •Analyserlesdonnéesd'un\"eyetracker\" •Recommanderunstyled'interactionpourunetâchedonnée Méthoded'enseignement Coursex-cathedraincluantdesexpériences Projet:développementd'unjeumulti-utilisateursavecdesrobots.CellulosaumoyendelaplatformeUnity3D. Travailattendu DévelopperunjeuàpartirdelaplatformeUnity Méthoded'évaluation Projet(50%) Examenécrit(50%) Encadrement Officehours Non Assistants Oui Forumélectronique Oui Préparationpour CS-486Interactiondesign Interactionpersonne-système Page2/2"}
{"pack_id": "french_pack", "section_title": "Internet analytics", "page": 110, "chunk_id": "french_pack_110_0", "content": "110 2020-2021COURSEBOOKLET COM-308 Internet analytics GrossglauserMatthias Cursus Sem. Type Language English Informatique BA6 Opt. Credits 5 MineurenSystèmesdecommunication E Opt. Session Summer Semester Spring Systèmesdecommunication BA6 Opt. Exam Duringthe semester Workload 150h Weeks 14 Hours 5weekly Lecture 2weekly Exercises 1weekly Project 2weekly Numberof positions Summary Internetanalyticsisthecollection,modeling,andanalysisofuserdatainlarge-scaleonlineservices,suchassocial networking,e-commerce,search,andadvertisement.Thisclassexploresanumberofthekeyfunctionsofsuchonline servicesthathavebecomeubiquitousoverthepastdecade. Content Theclassseeksabalancebetweenfoundationalbutrelativelybasicmaterialinalgorithms,statistics,graphtheoryand relatedfields,withreal-worldapplicationsinspiredbythecurrentpracticeofinternetandcloudservices. Specifically,welookatsocial&informationnetworks,recommendersystems,clusteringandcommunitydetection, search/retrieval/topicmodels,dimensionalityreduction,streamcomputing,andonlineadauctions.Together,these provideagoodcoverageofthemainusesfordataminingandanalyticsapplicationsinsocialnetworking,e-commerce, socialmedia,etc. Thecourseiscombinationoftheoreticalmaterialsandweeklylaboratorysessions,whereweexploreseverallarge-scale datasetsfromtherealworld.Forthis,youwillworkwithadedicatedinfrastructurebasedonHadoop&ApacheSpark. Keywords datamining;machinelearning;socialnetworking;map-reduce;hadoop;recommendersystems;clustering;community detection;topicmodels;informationretrieval;streamcomputing;adauctions LearningPrerequisites Requiredcourses Stochasticmodelsincommunication(COM-300) Recommendedcourses Basiclinearalgebra Algorithms&datastructures Importantconceptstostartthecourse Graphs;linearalgebra;Markovchains;Java LearningOutcomes Bytheendofthecourse,thestudentmustbeableto: Internetanalytics Page1/2"}
{"pack_id": "french_pack", "section_title": "Internet analytics", "page": 111, "chunk_id": "french_pack_111_0", "content": "111 2020-2021COURSEBOOKLET •Explorereal-worlddatafromonlineservices •Developframeworksandmodelsfortypicaldataminingproblemsinonlineservices •Analyzetheefficiencyandeffectivenessofthesemodels •data-miningandmachinelearningtechniquestoconcretereal-worldproblems Teachingmethods Excathedra+homeworks+labsessions Expectedstudentactivities Lectureswithassociatedhomeworksexplorethebasicmodelsandfundamentalconcepts.Thelabsaredesignedto exploreverypracticalquestionsbasedonanumberoflarge-scalereal-worlddatasetswehavecuratedfortheclass.The labsdrawonknowledgeacquiredinthelectures,butarehands-onandself-contained. Assessmentmethods Project20%,midterm30%,finalexam50% Resources Bibliography C.Bishop,PatternRecognitionandMachineLearning,Springer,2006 A.Rajaraman,J.D.Ullman:MiningofMassiveDatasets,2012 M.Chiang:NetworkedLife,Cambridge,Cambridge,2012 D.Easley,J.Kleinberg:Networks,Crowds,andMarkets,Cambridge,2010 Ch.D.Manning,P.Raghavan,H.Schütze:IntroductiontoInformationRetrieval,Cambridge,2008 M.E.J.Newman:Networks:AnIntroduction,Oxford,2010 Websites •http://icawww1.epfl.ch/ix/ Internetanalytics Page2/2"}
{"pack_id": "french_pack", "section_title": "Introduction aux sciences du vivant (pour IC)", "page": 112, "chunk_id": "french_pack_112_0", "content": "112 2020-2021LIVRETDECOURS BIO-109 Introduction aux sciences du vivant (pour IC) ZuffereyRomain Cursus Sem. Type Langue français Informatique BA6 Opt. Crédits 6 MineurenBiocomputing E Opt. Session Eté Semestre Printemps Systèmesdecommunication BA6 Opt. Examen Ecrit Charge 180h Semaines 14 Heures 6hebdo Cours 4hebdo Exercices 2hebdo Nombrede places Résumé Cecoursprésentelesprincipesfondamentauxàl'œuvredanslesorganismesvivants.Autantquepossible,l'accentest missurlescontributionsdel'InformatiqueauxprogrèsdesSciencesdelaVie. Contenu LecoursabordelaplupartdesconceptsfondamentauxdesSciencesdelaVie. Lessujetsdéveloppésparcequ'ilssontàl'interfaceavecl'informatiqueincluent: -alignementdesséquences,assemblagedeséquencesengénome -matricededistancesetdéductiond'unarbrephylogénétique -détectiondedomainestransmembranairesetdesignauxdelocalisationsubcellulairedansuneséquenced'acides aminés. -compositonenbasesd'ungénomeentier,deuxièmeloideparitédeChargaff,variationslocalesdeladensitéenCpG -optimisationdescodonsdansdiversesapplicationpratiques. Mots-clés Bioinformatique,génome,séquençage,évolution,communicationintercellulaires Acquisdeformation Alafindececoursl'étudiantdoitêtrecapablede: •Identifierlesprincipalesstructurescellulairesetcomprendrelesméthodesutiliséespourlesobserver •Identifierlessegmentsinformatifsd'ungénome •AppliquerdesalgorithmespourrésoudredesquestionsenrelationaveclesSciencesdelaVie •Expliquerleprocessusdel'expressiongénique •Analyserdesdonnéesexpérimentalesbrutesetentirerdesconclusionssensées Compétencestransversales •Accéderauxsourcesd'informationsappropriéesetlesévaluer. •Communiquerefficacementetêtrecomprisycomprispardespersonnesdelanguagesetculturesdifférentes. Travailattendu Enplusdelaparticipationsactiveauxcoursetauxexercices,4heuresdetravailpersonnelsontattendues. Méthoded'évaluation Introductionauxsciencesduvivant(pourIC) Page1/2"}
{"pack_id": "french_pack", "section_title": "Introduction aux sciences du vivant (pour IC)", "page": 113, "chunk_id": "french_pack_113_0", "content": "113 2020-2021LIVRETDECOURS Examenécritdurantlasessiond'été. Encadrement Officehours Oui Assistants Oui Forumélectronique Non Ressources Polycopiés Lesdiasducoursetlessériesd'exercicessontmisesàdispositionduMoodle. Introductionauxsciencesduvivant(pourIC) Page2/2"}
{"pack_id": "french_pack", "section_title": "Introduction to computer graphics", "page": 114, "chunk_id": "french_pack_114_0", "content": "114 2020-2021COURSEBOOKLET CS-341 Introduction to computer graphics PaulyMark Cursus Sem. Type Language English Génieélectriqueetélectronique MA2,MA4 Opt. Credits 6 Informatique BA6 Opt. Session Summer Semester Spring MineurenInformatique E Opt. Exam Written MineurenSystèmesdecommunication E Opt. Workload 180h Weeks 14 Systèmesdecommunication BA6 Opt. Hours 5weekly Lecture 2weekly Exercises 1weekly Practical 2weekly work Numberof positions Summary Thestudentsstudyandapplyfundamentalconceptsandalgorithmsofcomputergraphicsforrendering,geometry synthesis,andanimation.Theydesignandimplementtheirowninteractivegraphicsprograms. Content ThiscourseprovidesanintroductiontothefieldofComputerGraphics.Wewillcoverelementaryrenderingalgorithms suchasrasterizationandraytracing,examinemathematicalconceptsandalgorithmsforgeometricmodeling,andthen studyconceptsandalgorithmsforcomputeranimation.Studentswillexperimentwithmoderngraphicsprogrammingand buildsmallinteractivedemos.Complementedbysometheoreticalexercises,theseprogrammingtasksleadtoa graphicssoftwareproject,wheresmallteamsofstudentsdesignandimplementacompletegraphicsapplication. Keywords Pixelsandimages,2Dand3Dtransformations,perspectivetransformationsandvisibility,rasterization,interpolationand lighting,raytracing,shaderprogramming,texturemapping,proceduralmodeling,curvesandsurfaces,polygonal meshes,particlesystems LearningPrerequisites Requiredcourses LinearAlgebra,Calculus Recommendedcourses NumericalMethodsforVisualComputing LearningOutcomes Bytheendofthecourse,thestudentmustbeableto: •Explainandapplythefundamentalmathematicalconceptsofcomputer-basedimageandgeometrysynthesis •Implementabasicrenderingpipelinebasedonrasterizationandraytracing •Designandimplementgeometrysynthesisbasedonproceduralmodeling •Designandimplementbasiccomputeranimationalgorithms •Integrateindividualcomponentsintoacompletegraphicsapplication •Coordinateateamduringasoftwareproject Introductiontocomputergraphics Page1/2"}
{"pack_id": "french_pack", "section_title": "Introduction to computer graphics", "page": 115, "chunk_id": "french_pack_115_0", "content": "115 2020-2021COURSEBOOKLET Teachingmethods Lectures,interactivedemos,theoryandprogrammingexercises,programmingproject,projecttutoring Expectedstudentactivities Thestudentareexpectedtostudytheprovidedreadingmaterialandactivelyparticipateinclass.Theyshouldprepare andresolvetheexercises,prepareandcarryouttheprogrammingproject.Exercisesandprojectaredoneingroupsof threestudents. Assessmentmethods ExercisesandProject, FinalExamination Supervision Officehours Yes Assistants Yes Forum Yes Resources Bibliography Alistofbookswillbeprovidedatthebeginningoftheclass Ressourcesenbibliothèque •Polygonmeshprocessing/Botsch Notes/Handbook Slidesandonlineresourceswillbeprovidedinclass Websites •http://lgg.epfl.ch/ICG Prerequisitefor AdvancedComputerGraphics Introductiontocomputergraphics Page2/2"}
{"pack_id": "french_pack", "section_title": "Introduction to database systems", "page": 116, "chunk_id": "french_pack_116_0", "content": "116 2020-2021COURSEBOOKLET CS-322 Introduction to database systems AilamakiAnastasia,KochChristoph Cursus Sem. Type Language English Energieetdurabilité MA2,MA4 Opt. Credits 4 HES-IN E Obl. Session Summer Semester Spring HES-SC E Obl. Exam Written Informatique BA6 Obl. Workload 120h Weeks 14 MineurSTASRussie E Opt. Hours 4weekly MineurenDatascience E Opt. Lecture 2weekly MineurenInformatique E Opt. Exercises 1weekly Project 1weekly Sciencesetingénieriedel'environnement MA2,MA4 Opt. Numberof Systèmesdecommunication BA6 Opt. positions Summary Thiscourseprovidesadeepunderstandingoftheconceptsbehinddatamanagementsystems.Itcoversfundamental datamanagementtopicssuchassystemarchitecture,datamodels,queryprocessingandoptimization,databasedesign, storageorganization,andtransactionmanagement. Content Thiscourseprovidesadeepunderstandingoftheconceptsbehinddatamanagementsystems. Duringthiscourse,thestudentswilllearnabout: • TheEntity-relationshipandRelationalModels • RelationalAlgebraandCalculus • TheSQLQueryLanguage • TraditionalandModernDataStorage,FileOrganizations,andIndexing • HashingandSorting • QueryEvaluationandRelationalOperators • QueryOptimization • SchemaRefinement • TransactionManagement(ConcurrencyControlandRecovery) Homework Homeworkswillbeassignedtoaidandassesscomprehensionoftheabovematerial.Homeworkwillbeeitherdone usingpenandpaperortheywillbeprogrammingexercises.Duringthesemesterthestudentswillbeaskedtodoa projecttogainexperienceonhowtobuildadatabaseapplication,andtoapplywhattheylearninclass. Keywords databases,databasedesign,datamodeling,normalization,databasemanagementsystems(DBMS),files,indexes, storage,externalsorting,queries,queryevaluation,queryoptimization,transactions,concurrency,recovery,SQL LearningPrerequisites Requiredcourses Datastructures Recommendedcourses Introductiontodatabasesystems Page1/3"}
{"pack_id": "french_pack", "section_title": "Introduction to database systems", "page": 117, "chunk_id": "french_pack_117_0", "content": "117 2020-2021COURSEBOOKLET Forthepracticalpartofthecourse(project)thefollowingskillswillbeneeded: •Systemorientedprogramming,withfocusonscriptinglanguagestoenhancetheparsingprocessofraw data. •Buildinguserinterfaces,eitherweb(e.g.,PHP,JSP,ASP,...)orapplicationGUI(e.g.,java). Importantconceptstostartthecourse Beforethebeginningofthecoursestudentsmustbefamiliarwith: •Datastructures •Algorithmsconcepts LearningOutcomes Bytheendofthecourse,thestudentmustbeableto: •Expressapplicationinformationrequirements •UsearelationalDBMS •CreateadatabaseonarelationalDBMS •Designadatabasewithapracticalapplicationinmind •ModelthedataofanapplicationusingERandrelationalmodeling •ExplorehowaDBMSperformsitswork •ReportperformanceandpossibleoptimizationsforapplicationsusingDBMS •Justifydesignandimplementationchoices Transversalskills •Assessprogressagainsttheplan,andadapttheplanasappropriate. •Evaluateone'sownperformanceintheteam,receiveandrespondappropriatelytofeedback. •Writeascientificortechnicalreport. •Makeanoralpresentation. Teachingmethods Excathedra;includingexercisesinclass,practicewithpenandpaperorwithacomputer,andaproject Expectedstudentactivities Duringthesemester,thestudentsareexpectedto: •attendthelecturesinordertoaskquestionsandinteractwiththeprofessor, •attendtheexercisessessiontosolveanddiscussexercisesaboutherecentlytaughtmaterial, •workonaprojectduringthesemesterwhichcoversthepracticalsideofbuildinganapplicationusingadatabase system, •takeamidterm •takeafinalexam Assessmentmethods Homework,project,writtenexaminationsandcontinuouscontrol. Resources Introductiontodatabasesystems Page2/3"}
{"pack_id": "french_pack", "section_title": "Introduction to database systems", "page": 118, "chunk_id": "french_pack_118_0", "content": "118 2020-2021COURSEBOOKLET Bibliography Slides,listofbooks,additionalmaterial(researcharticles),allindicatedand/oravailableonmoodlepage. Ressourcesenbibliothèque •DatabaseManagementSystems/Ramakrishnan Notes/Handbook Theslidesthatareusedintheclassareavailableforthestudents. Introductiontodatabasesystems Page3/3"}
{"pack_id": "french_pack", "section_title": "Introduction to machine learning (BA3)", "page": 119, "chunk_id": "french_pack_119_0", "content": "119 2020-2021COURSEBOOKLET CS-233(a) Introduction to machine learning (BA3) SalzmannMathieu Cursus Sem. Type Language English Informatique BA3 Opt. Credits 4 Sciencesetingénieriedel'environnement BA5 Opt. Session Winter Semester Fall Systèmesdecommunication BA3 Opt. Exam Written Workload 120h Weeks 14 Hours 4weekly Lecture 2weekly Exercises 2weekly Numberof positions Summary Machinelearninganddataanalysisarebecomingincreasinglycentralinmanysciencesandapplications.Inthiscourse, fundamentalprinciplesandmethodsofmachinelearningwillbeintroduced,analyzedandpracticallyimplemented. Content •Introduction:Generalconcepts,datarepresentation,basicoptimization. •Linearmethods:Linearregression,least-squareclassification,logisticregression,linearSVMs. •Nonlinearmethods:Polynomialregression,kernelmethods,Knearestneighbors •Deeplearning:Multi-layerperceptron,CNNs. •Unsupervisedlearning:Dimensionalityreduction,clustering. Keywords Machinelearning,classification,regression,algorithms LearningPrerequisites Requiredcourses Linearalgebra Importantconceptstostartthecourse •Basiclinearalgebra(matrix/vectormultiplications,systemsoflinearequations,SVD). •Multivariatecalculus(derivativew.r.t.vectorandmatrixvariables). •Basicprogrammingskills(labswillusePython). LearningOutcomes Bytheendofthecourse,thestudentmustbeableto: •Definethefollowingbasicmachinelearningproblems:regression,classification,clustering,dimensionalityreduction •Explainthemaindifferencesbetweenthem •Derivetheformulationofthesemachinelearningmodels •Assess/Evaluatethemaintrade-offssuchasoverfitting,andcomputationalcostvsaccuracy •Implementmachinelearningmethodsonreal-worldproblems,andrigorouslyevaluatetheirperformanceusing Introductiontomachinelearning(BA3) Page1/2"}
{"pack_id": "french_pack", "section_title": "Introduction to machine learning (BA3)", "page": 120, "chunk_id": "french_pack_120_0", "content": "120 2020-2021COURSEBOOKLET cross-validation. Teachingmethods •Lectures •Labsessions Expectedstudentactivities •Attendlectures •Attendlabsessionsandworkontheweeklytheoryandcodingexercises Assessmentmethods •Twogradedexercisesessions(10%each).Canbedoneremotelywithazoompresencetoanswerquestions •Finalexam(80%) Supervision Officehours No Assistants Yes Forum Yes Others Coursewebsite Introductiontomachinelearning(BA3) Page2/2"}
{"pack_id": "french_pack", "section_title": "Introduction to machine learning (BA4)", "page": 121, "chunk_id": "french_pack_121_0", "content": "121 2020-2021COURSEBOOKLET CS-233(b) Introduction to machine learning (BA4) FuaPascal Cursus Sem. Type Language English Informatique BA4 Opt. Credits 4 Sciencesetingénieriedel'environnement BA6 Opt. Session Summer Semester Spring Systèmesdecommunication BA4 Opt. Exam Written Workload 120h Weeks 14 Hours 4weekly Lecture 2weekly Exercises 2weekly Numberof positions Summary Machinelearninganddataanalysisarebecomingincreasinglycentralinmanysciencesandapplications.Inthiscourse, fundamentalprinciplesandmethodsofmachinelearningwillbeintroduced,analyzedandpracticallyimplemented. Content •Introduction:Knearestneighbors,datarepresentation,basicoptimization. •Linearmodels:Linearregression,least-squareclassification,logisticregression,linearSVMs. •Nonlinearmethod:Polynomialregression,kernelmethods. •Deeplearning:Multi-layerpereceptron,CNNs. •Unsupervisedlearning:Dimensionalityreduction,clustering. Keywords Machinelearning,classification,regression,algorithms LearningPrerequisites Requiredcourses Linearalgebra Importantconceptstostartthecourse •Basiclinearalgebra(matrix/vectormultiplications,systemsoflinearequations,SVD). •Multivariatecalculus(derivativew.r.t.vectorandmatrixvariables). •Basicprogrammingskills(labswillusePython). LearningOutcomes Bytheendofthecourse,thestudentmustbeableto: •Definethefollowingbasicmachinelearningproblems:regression,classification,clustering,dimensionalityreduction •Explainthemaindifferencesbetweenthem •Implementalgorithmsforthesemachinelearningmodels •Optimizethemaintrade-offssuchasoverfitting,andcomputationalcostvsaccuracy •Implementmachine-learningmethodstoreal-worldproblems,andrigorouslyevaluatetheirperformanceusing Introductiontomachinelearning(BA4) Page1/2"}
{"pack_id": "french_pack", "section_title": "Introduction to machine learning (BA4)", "page": 122, "chunk_id": "french_pack_122_0", "content": "122 2020-2021COURSEBOOKLET cross-validation.Experiencecommonpitfallsandhowtoovercomethem. Teachingmethods •Lectures •Labsessions Expectedstudentactivities •Attendlectures •Attendlabsessionsandworkontheweeklytheoryandcodingexercises Assessmentmethods •Continuouscontrol(gradedlabs) •Writtenfinalexam Supervision Officehours Yes Assistants Yes Forum Yes Others Coursewebsite Introductiontomachinelearning(BA4) Page2/2"}
{"pack_id": "french_pack", "section_title": "Introduction to multiprocessor architecture", "page": 123, "chunk_id": "french_pack_123_0", "content": "123 2020-2021COURSEBOOKLET CS-307 Introduction to multiprocessor architecture FalsafiBabak Cursus Sem. Type Language English Informatique BA5 Obl. Credits 4 Scienceeting.computationelles MA1,MA3 Opt. Session Winter Semester Fall Systèmesdecommunication BA5 Opt. Exam Written Workload 120h Weeks 14 Hours 3weekly Lecture 2weekly Project 1weekly Numberof positions Summary Multiprocessorsareacorecomponentinalltypesofcomputinginfrastructure,fromphonestodatacenters.Thiscourse willbuildontheprerequisitesofprocessordesignandconcurrencytointroducetheessentialtechnologiesrequiredto combinemultipleprocessingelementsintoasinglecomputer. Content -Formsofparallelism -Parallelprogrammingmodels -Cachecoherence -Memoryconsistency -Synchronization -Interconnectionnetworks -Softwareefficiency&optimization -GPUarchitecture&programming Keywords Multiprocessors,multicores,manycores,cachecoherence,memoryconsistencymodels,memoryordering,manycore cachehierarchies,interconnectionnetworks,synchronization,parallelism,GPU LearningPrerequisites Requiredcourses CS-206Parallelismandconcurrency CS-208Computerarchitecture Importantconceptstostartthecourse Introductoryunderstandingofcomputerarchitecture&organization BasicC/C++systemsprogramming LearningOutcomes Bytheendofthecourse,thestudentmustbeableto: •Detectandaddressinefficienciesinparallelsoftware •Designandevaluatesoftwareformultipleparallelplatforms •Designandevaluatehardwareforsharedmemory •Compareandcontrasthardwaredesignchoicesinparallelplatforms Introductiontomultiprocessorarchitecture Page1/2"}
{"pack_id": "french_pack", "section_title": "Introduction to multiprocessor architecture", "page": 124, "chunk_id": "french_pack_124_0", "content": "124 2020-2021COURSEBOOKLET •Demonstrateanddescribetheoperationofsnoopinganddirectorycoherenceprotocols Teachingmethods Lectures,homeworkandproject Assessmentmethods •ProgrammingAssignements-30% •Exercises-30% •Finalexam-40% Supervision Officehours Yes Assistants Yes Resources Websites •https://parsa.epfl.ch/course-info/cs307/ Introductiontomultiprocessorarchitecture Page2/2"}
{"pack_id": "french_pack", "section_title": "Introduction to operating systems", "page": 125, "chunk_id": "french_pack_125_0", "content": "125 2020-2021COURSEBOOKLET CS-323 Introduction to operating systems PayerMathias Cursus Sem. Type Language English HES-IN H Obl. Credits 5 Informatique BA5 Obl. Session Winter Semester Fall MineurenInformatique H Opt. Exam Written Systèmesdecommunication BA5 Opt. Workload 150h Weeks 14 Hours 5weekly Lecture 2weekly Exercises 1weekly Practical 2weekly work Numberof positions Summary Introductiontobasicconceptsofoperatingsystems. Content Thepurposeofthiscourseistodiscussthedesignofoperatingsystems,andoperatingsystemsconcepts.Topicswe willcoverincludeoperatingsystemorganization,systemprogramming,networkedanddistributedsystems,andstorage systems.Mostofthetimewillbespentonmulti-processsystems(processes,interprocesscommunication,and synchronization),memoryorganization(paging),resourceallocationandscheduling,filesystems,andI/O. Coretopics: •Functionandgeneralstructureofanoperatingsystem. •Processmanagement. •Memorymanagement. •Filesystems. •Virtualizationandvirtualmachines. •Securityaspectsofoperatingsystems Keywords Operatingsystems LearningPrerequisites Requiredcourses CS-206Parallelismeandconcurrency CS-207Programmationorientéesystème CS-212Projetprogrammationsystème LearningOutcomes Bytheendofthecourse,thestudentmustbeableto: •Managekeycomponentsofoperatingsystems •Interpretvirtualizationofresources •Discriminatepersistencepolicies Introductiontooperatingsystems Page1/2"}
{"pack_id": "french_pack", "section_title": "Introduction to operating systems", "page": 126, "chunk_id": "french_pack_126_0", "content": "126 2020-2021COURSEBOOKLET •Manageconcurrencybetweentasks •Specifysecurityaspectsofoperatingsystems Teachingmethods Lecturesandexercises. Expectedstudentactivities Attendanceatlecturesandcompletingexercises. Assessmentmethods Thestudentsareassessedbothontheirtheoreticalknowledgeaboutoperatingsystemsaswellasbasedon implementingpartsofanoperatingsystem. •Theoreticalassessmentsduringthesemesterintheforumofweeklyquizzes(10%ofthegrade) •Practicalassessmentsthroughseveralprogramminglabsduringthesemester(50%ofthegrade) •Theoreticalassessmentsintheformofafinalexamintheexamsession(40%ofthegrade). Supervision Officehours Yes Assistants Yes Forum Yes Resources Bibliography OperatingSystems:ThreeEasyPieces,R.Arpaci-DusseauandA.Arpaci-Dusseau(freeonlinebook). SlidesavailableonMoodle. Ressourcesenbibliothèque •OperatingSystems:ThreeEasyPieces/Arpaci-Dusseau Référencessuggéréesparlabibliothèque •OperatingSystemsConcepts/Silberschatz Introductiontooperatingsystems Page2/2"}
{"pack_id": "french_pack", "section_title": "Modèles stochastiques pour les communications", "page": 127, "chunk_id": "french_pack_127_0", "content": "127 2020-2021LIVRETDECOURS COM-300 Modèles stochastiques pour les communications ThiranPatrick Cursus Sem. Type Langue français Bioingénierie MA3 Opt. Crédits 6 HES-SC H Obl. Session Hiver Semestre Automne Informatique BA5 Opt. Examen Ecrit Ingénieriedessciencesduvivant MA1,MA3 Opt. Charge 180h Semaines 14 MineurenDatascience H Opt. Heures 6hebdo MineurenSystèmesdecommunication H Opt. Cours 4hebdo Sciencesduvivant MA3 Opt. Exercices 2hebdo Nombrede Systèmesdecommunication BA5 Obl. places Résumé L'objectifdececoursestlamaitrisedesoutilsdesprocessusstochastiquesutilespouruningénieurtravaillantdansles domainesdessystèmesdecommunication,delasciencedesdonnéesetdel'informatique. Contenu •Rappelsdeprobabilité:axiomesdeprobabilité,variablealéatoireetvecteuraléatoire. •Quelquesinégalitésutiles. •Processusstochastiquesàtempscontinuetàtempsdiscret:analysedusecondordre(stationarité,ergodisme, densitéspectrale,relationsdeWiener-Khintchine,réponsed'unsystèmelinéaireinvariantàdesentréesaléatoires, processusgaussien,processusARMA,filtresdeWiener).Exemplesd'applicationàdescassimplesdedétection optimaleoudetraitementd'image. •ProcessusdePoissonetbruitimpulsifdePoisson.Exempled'applicationauxtransmissionssurfibresoptiques. •ChaînesdeMarkovàtempsdiscret.Classificationdesétats,chaînesergodiques:comportementasymptotique, chaînesabsorbantes:tempsd'atteinte,marchesaléatoiressimples,processusdebranchement.Exemples d'applicationàl'analysed'unalgorithmeoud'unsystèmeinformatiquedistribué. •ChaînesdeMarkovàtempscontinu.Classificationdesétats,chaînesergodiques:comportementasymptotique. Processusdenaissanceetdemortàl'étattransitoireetstationnaire.Exemplesd'applicationàl'analysedefiles d'attentesimples:définition,loideLittle,filesM/M/1...M/M/s/K,M/G/1. Mots-clés Probabilité,Processusstochastique,Moments,stationarité,Processusgaussien,ProcessusdePoisson,Chaînede Markov,Filed'attente. Compétencesrequises Coursprérequisobligatoires •Algèbrelinéaire(MATH111ouéquivalent). •AnalyseI,II,III(MATH101,106,203ouéquivalent). •Premiercoursdeprobabilité(MATH232ouéquivalent). •CircuitsetsystèmesII(EE205ouéquivalent),ouSignauxetsystèmes(MICRO310/311ouéquivalent), pourlesnotionsdebasedethéoriedessystèmes(déterministes)linéaires. Coursprérequisindicatifs Modèlesstochastiquespourlescommunications Page1/3"}
{"pack_id": "french_pack", "section_title": "Modèles stochastiques pour les communications", "page": 128, "chunk_id": "french_pack_128_0", "content": "128 2020-2021LIVRETDECOURS •CircuitsetsystèmesI(EE204ouéquivalent)pourlesnotionsdebasedethéoriedescircuits. •AnalyseIV(MATH204ouéquivalent)pourlesnotionsd'analysecomplexe. Conceptsimportantsàmaîtriser Notionsd'algèbrelinéaire,enparticulieropérationsmatricielles(inversion,diagonalisation,vaelurspropres d'unematrice). Notionsd'analyse(fonctionsd'uneouplusieursvariablesréelles,suitesetséries,équationsdifférentielles ordinaireslinéaires). Notionsdethéoriedessystèmeslinéaires(convolution,transforméesdeFourier,Laplaceetenz). Acquisdeformation Alafindececoursl'étudiantdoitêtrecapablede: •Modéliserunsystèmealéatoire. •Analyserunproblèmeavecunecomposantealéatoire. •Evaluerlessolutionsd'unproblèmeavecunecomposantealéatoire. Méthoded'enseignement •Excathedra(autableau),4hparsemaine. •Séancesd'exercices,2hparsemaine. Travailattendu •Exercicesenséanceetàdomicile Méthoded'évaluation •Examenintermédiaire:nepeutêtreorganisécesemestre.Deuxexamensintermédiairesàblancserontofferts. •Examenfinal100% Encadrement Officehours Oui Assistants Oui Forumélectronique Oui Ressources Bibliographie Polycopié;textesderéférencesurlapagemoodleducours. Ressourcesenbibliothèque •IntroductiontoProbabilityModels/Ross(10thed.) •MarkovChains,GibbsFields,MonteCarloSimulation,andQueues/Brémaud •ProbabilityandRandomProcesses/Grimmett&Stirzaker •StochasticProcesses/Ross •Probability,RandomVariables,andStochasticProcesses/Papoulis(4thed.) •MarkovChains/Norris Modèlesstochastiquespourlescommunications Page2/3"}
{"pack_id": "french_pack", "section_title": "Modèles stochastiques pour les communications", "page": 129, "chunk_id": "french_pack_129_0", "content": "129 2020-2021LIVRETDECOURS Polycopiés Polycopiédisponibleaudébutducoursetsurlapagemoodleducours. Sitesweb •http://moodle.epfl.ch/course/view.php?id=14236 LiensMoodle •https://moodle.epfl.ch/course/view.php?id=14236 Préparationpour Touslescoursensystèmesdecommunication,sciencedesdonnéesetinformatiqueutilisantdesmodèles stochastiquesoudesméthodesaléatoires. Modèlesstochastiquespourlescommunications Page3/3"}
{"pack_id": "french_pack", "section_title": "Numerical methods for visual computing and ML", "page": 130, "chunk_id": "french_pack_130_0", "content": "130 2020-2021COURSEBOOKLET CS-328 Numerical methods for visual computing and ML JakobWenzel Cursus Sem. Type Language English Informatique BA3 Opt. Credits 4 Systèmesdecommunication BA3 Opt. Session Winter Semester Fall Exam Written Workload 120h Weeks 14 Hours 3weekly Lecture 2weekly Exercises 1weekly Numberof positions Summary Visualcomputingandmachinelearningarecharacterizedbytheirrelianceonnumericalalgorithmstoprocesslarge amountsofinformationsuchasimages,shapes,and3Dvolumes.Thiscoursewillfamiliarizestudentswitharangeof essentialnumericaltoolstosolvepracticalproblemsinthisarea. Content Thiscourseprovidesafirstintroductiontothefieldofnumericalanalysiswithastrongfocusonvisualcomputingand machinelearningapplications.Usingexamplesfromcomputergraphics,deepneuralnetworks,geometryprocessing, computervision,andcomputationalphotography,studentswillgainhands-onexperiencewitharangeofessential numericalalgorithms. Thecoursewillbeginwithareviewoffloatingpointarithmeticanderrorpropagationinnumericalcomputations. Followingthis,wewillstudyandexperimentwithseveraltechniquesthatsolvesystemsoflinearandnon-linear equationsandperformdimensionalityreduction.Sincemanyinterestingproblemscannotbesolvedexactly,numerical optimizationtechniquesconstitutethesecondmajortopicofthiscourse.Wewilltakeanextensivelookat automaticdifferentiation,themechanismunderlyingpopulardeeplearningframeworkssuchasPyTorchandTensorflow. Thecourseconcludeswithareviewofnumericalmethodsthatintroducerandomnesstosolveproblemsthatwould otherwisebeintractable. Studentswillhavetheopportunitytogainpracticalexperiencewiththediscussedmethodsusingprogramming assignmentsbasedonScientificPython. Keywords Visualcomputing,machinelearning,numericallinearalgebra,numericalanalysis,optimization,scientificcomputing LearningPrerequisites Requiredcourses MATH-101(AnalysisI)andMATH-111(LinearAlgebra). Recommendedcourses Importantconceptstostartthecourse Studentsareexpectedtohavegoodfamiliaritywithatleastoneprogramminglanguage(e.g.C/C++,Java, Scala,Python,R,Ruby...).ThecourseitselfwillrelyonPython,butthisisstraightforwardtolearnwhile takingthecourse. Duringthefirstweeksofthesemester,therewillbetutorialsessionsonusingPythonandScientificPython. NumericalmethodsforvisualcomputingandML Page1/2"}
{"pack_id": "french_pack", "section_title": "Numerical methods for visual computing and ML", "page": 131, "chunk_id": "french_pack_131_0", "content": "131 2020-2021COURSEBOOKLET LearningOutcomes Bytheendofthecourse,thestudentmustbeableto: •Developcomputerprogramsthatusenumericallinearalgebraandanalysistechniquestotransformandvisualize data. •Reasonaboutwaysofstructuringnumericalcomputationsefficiently. •Analyzethenumericalstabilityofprogramsbuiltontopoffloatingpointarithmetic. •Recognizenumericalproblemsinvisualcomputingapplicationsandcastthemintoaformthatcanbesolvedor optimized. Teachingmethods Lectures,interactivedemos,theoryandprogrammingexercises Expectedstudentactivities Studentsareexpectedtostudytheprovidedreadingmaterialandactivelyparticipateinclassandinexercisesessions. Theywillbegivenboththeoreticalexercisesandasetofhands-onprogrammingassignments. Assessmentmethods 1.Continuousassessmentduringthesemesterviaprojectassignments(35%) 2.Finalexam(65%) Resources Bibliography Slidesandotherresourcewillbeprovidedinclass. Thecoursetextbookis NumericalAlgorithms:MethodsforComputerVision,MachineLearning,andGraphicsbyJustinSolomon (freelyavailableatthefollowinglink:http://people.csail.mit.edu/jsolomon/share/book/numerical_book.pdf) Anoptionalreferenceis ScientificComputing:AnIntroductorySurvey(2ndedition)byMichaelHeath Ressourcesenbibliothèque •ScientificComputing:AnIntroductorySurvey/Heath •NumericalAlgorithms:MethodsforComputerVision,MachineLearning,andGraphics/Solomon Prerequisitefor Althoughitisnotastrictprerequisite,thiscourseishighlyrecommendedforstudentswhowishtopursuestudiesinthe areaofVisualComputing,inparticular:CS-341(Introductiontocomputergraphics),CS-440(Advancedcomputer graphics),CS-442(Computervision),CS-413(ComputationalPhotography),CS-444(VirtualReality),andCS-445 (Digital3Dgeometryprocessing) NumericalmethodsforvisualcomputingandML Page2/2"}
{"pack_id": "french_pack", "section_title": "Parallelism and concurrency", "page": 132, "chunk_id": "french_pack_132_0", "content": "132 2020-2021COURSEBOOKLET CS-206 Parallelism and concurrency KuncakViktor,OderskyMartin Cursus Sem. Type Language English HES-IN E Obl. Credits 4 Informatique BA4 Obl. Session Summer Semester Spring Systèmesdecommunication BA4 Opt. Exam Duringthe semester Workload 120h Weeks 14 Hours 4weekly Lecture 1weekly Exercises 1weekly Project 2weekly Numberof positions Summary Thecourseintroducesparallelprogrammingmodels,algorithms,anddatastructures,map-reduceframeworksandtheir usefordataanalysis,aswellasshared-memoryconcurrency. Content Seehttps://lara.epfl.ch/w/parcon17:top Parallelprogramming&executionmodels Functionalparallelism Data-levelparallelism Threadsandfork/joinparallelism Synchronization ThreadsandSharedMemoryinJava Futures Large-ScaleParallelprogrammingusingApacheSpark Keywords Parallelism,threads,synchronization,locks,memorymodels. LearningPrerequisites Requiredcourses •Functionalprogramming(CS-210) •Algorithms(CS-250) •ComputerArchitecture(CS-208) Recommendedcourses Systemorientedprogramming(CS-207) Importantconceptstostartthecourse Functionalprogrammingandfunctionaldatastructures Algorithmsanddatastructures LearningOutcomes Bytheendofthecourse,thestudentmustbeableto: Parallelismandconcurrency Page1/2"}
{"pack_id": "french_pack", "section_title": "Parallelism and concurrency", "page": 133, "chunk_id": "french_pack_133_0", "content": "133 2020-2021COURSEBOOKLET •Constructparallelsoftware. •Performtuningparallelsoftware. Teachingmethods Excathedra,labs,exercices Assessmentmethods Withcontinuouscontrol Resources Notes/Handbook Lecturenotes,copiesoftheslides Parallelismandconcurrency Page2/2"}
{"pack_id": "french_pack", "section_title": "Principles of digital communications", "page": 134, "chunk_id": "french_pack_134_0", "content": "134 2020-2021COURSEBOOKLET COM-302 Principles of digital communications TelatarEmre Cursus Sem. Type Language English HES-SC E Obl. Credits 6 Informatique BA6 Opt. Session Summer Semester Spring MineurenSystèmesdecommunication E Opt. Exam Written Systèmesdecommunication BA6 Obl. Workload 180h Weeks 14 Hours 6weekly Lecture 4weekly Exercises 2weekly Numberof positions Summary Thiscourseisonthefoundationsofdigitalcommunication.Thefocusisonthetransmissionproblem(ratherthanbeing onsourcecoding). Content Optimalreceiverforvectorchannels Optimalreceiverforwaveform(AWGN)channels Varioussignalingschemesandtheirperformance Efficientsignalingviafinite-statemachines EfficientdecodingviaViterbialgorithm CommunicatingoverbandlimitedAWGNchannels NyquistCriterion CommunicatingoverpassbandAWGNchannels Keywords Detection,estimation,hypothesistesting,Nyquist,bandwidth,errorprobability,coding,decoding,baseband,passband, AM,QAM,PSK. LearningPrerequisites Requiredcourses SignalprocessingforcommunicationsandModèlesstochastiquespourlescommunications Importantconceptstostartthecourse Linearalgebra,probability. LearningOutcomes Bytheendofthecourse,thestudentmustbeableto: •Estimatetheerrorprobabilityofacommunicationlink •Designa\"physicallayer\"communicationlink •Implementaprototypeofa\"physicallayer\"transmitter/receiverviaMatlab Teachingmethods Excathedra+exercises+project.Lotsofreadingathomeandexercisesinclass. Assessmentmethods Principlesofdigitalcommunications Page1/2"}
{"pack_id": "french_pack", "section_title": "Principles of digital communications", "page": 135, "chunk_id": "french_pack_135_0", "content": "135 2020-2021COURSEBOOKLET Withcontinuouscontrol Resources Websites •http://moodle.epfl.ch Prerequisitefor AdvancedDigitalCommunications Software-DefinedRadio:AHands-OnCourse Principlesofdigitalcommunications Page2/2"}
{"pack_id": "french_pack", "section_title": "Probabilities and statistics", "page": 136, "chunk_id": "french_pack_136_0", "content": "136 2020-2021COURSEBOOKLET MATH-232 Probabilities and statistics AbbéEmmanuel Cursus Sem. Type Language English HES-IN E Obl. Credits 6 HES-SC E Obl. Session Summer Semester Spring Informatique BA4 Obl. Exam Written Systèmesdecommunication BA4 Obl. Workload 180h Weeks 14 Hours 6weekly Lecture 4weekly Exercises 2weekly Numberof positions Summary Abasiccourseinprobabilityandstatistics Content Revisionofbasicsettheoryandcombinatorics. Elementaryprobability:randomexperiment;probabilityspace;conditionalprobability;independence. Randomvariables:basicnotions;densityandmassfunctions;examplesincludingBernoulli,binomial,geometric, Poisson,uniform,normal;mean,variance, correlationandcovariance;moment-generatingfunction;jointdistributions, conditionalandmarginaldistributions;transformations. Manyrandomvariables:notionsofconvergence;lawsoflargenumbers;centrallimittheorem;deltamethod; applications. Statisticalinference:differenttypesofestimatorandtheirpropertiesandcomparison;confidenceintervals;hypothesis testing;likelihoodinferenceandstatisticalmodelling;Bayesianinferenceandprediction;examples. LearningPrerequisites Requiredcourses AnalyseI,II Algèbrelinéaire Teachingmethods Excathedralectures,exercisesandproblems Assessmentmethods Mid-termandfinalexams Resources Bibliography Ross,S.(2012)Afirstcourseinprobability(9thedition). Pearson. Aussidisponibleentraductionfrançaise(PPUR):`Initiationauxprobabilités'. Apolycopiéofthecoursenotes,withtheproblemsetc.,willalsobeavailable. Prerequisitefor Electrométrie,Théoriedusignal,Télécommunications,Informationetcodage,Fiabilités,... Probabilitiesandstatistics Page1/1"}
{"pack_id": "french_pack", "section_title": "Programmation orientée système", "page": 137, "chunk_id": "french_pack_137_0", "content": "137 2020-2021LIVRETDECOURS CS-207 Programmation orientée système ChappelierJean-Cédric Cursus Sem. Type Langue français HES-SC E Obl. Crédits 3 Informatique BA4 Obl. Session Eté Semestre Printemps MineurenInformatique E Opt. Examen Pendantle Systèmesdecommunication BA4 Obl. semestre Charge 90h Semaines 14 Heures 3hebdo Cours 1hebdo Exercices 2hebdo Nombrede places Résumé CoursdeprogrammationenlangageCsefocalisantsurl'utilisationdesressourcessystème,enparticulierlagestionde lamémoire(pointeurs). Contenu InitiationàlaprogrammationenC:variables,expressions,structuresdecontrôle,fonctions,entrées-sorties, ... Approfondissementdesspécificitésdelaprogrammationsystèmerudimentaire:gestiondelamémoire(pointeurs), des fichiersetautresentrées/sorties. Lesconceptsthéoriquesintroduitslorsdescoursmagistrauxserontmisenpratiquedanslecadred'exercicessur machine. Mots-clés Programmation,langageC,pointeurs,gestionmémoire Compétencesrequises Coursprérequisindicatifs Introductionàlaprogrammation(CS-107)+Pratiquedelaprogrammationorientée-objet(CS-108) Conceptsimportantsàmaîtriser basesdeprogrammation Acquisdeformation Alafindececoursl'étudiantdoitêtrecapablede: •ModéliserenlangageCunesituationsimpledumonderéelledécriteenFrançais •Analyserunproblèmecomplexerelatifsauxsystèemsd'informationpourledécomposerensous-problèmes •Concevoirdesalgorithmesrésolvantdestâchessimpleàavancéesrelativesausystèmesinformatiques •RéaliserdefaçonautonomeuneapplicationdepetitetailleaumoyendulangageC •AnalyserducodeCpourendécrirelerésultatoulecorrigers'ilesterroné •Testerl'adéquationdurésultatd'unprogrammeparrapportàlatâchedemandée Programmationorientéesystème Page1/2"}
{"pack_id": "french_pack", "section_title": "Programmation orientée système", "page": 138, "chunk_id": "french_pack_138_0", "content": "138 2020-2021LIVRETDECOURS •TranscrireunalgorithmeensonprogrammeéquivalentenC Compétencestransversales •Utiliserlesoutilsinformatiquescourantsainsiqueceuxspécifiquesàleurdiscipline. •Persévérerdansladifficultéouaprèsunéchecinitialpourtrouverunemeilleuresolution. •Accéderauxsourcesd'informationsappropriéesetlesévaluer. •Utiliseruneméthodologiedetravailappropriée,organiserun/sontravail. •Recevoirdufeedback(unecritique)etyrépondredemanièreappropriée. •Gérersespriorités. Méthoded'enseignement Excathedra,travauxpratiquessurordinateur Travailattendu participationaucoursetauxexercices;travailpersonnelàlamaison. Méthoded'évaluation 1exerciceàrendre(10%),1sériepratiquenotée(40%)etexamenfinalpapier(50%) Encadrement Officehours Non Assistants Oui Forumélectronique Oui Ressources Servicedecoursvirtuels(VDI) Oui Bibliographie Notesdecours LiensMoodle •http://moodle.epfl.ch/course/view.php?id=6731 Préparationpour Introductionaubasesdedonnées(CS-322);Concurrence(CS-206);Systèmesd'exploitation(CS-323);Genielogiciel (CS-305) Programmationorientéesystème Page2/2"}
{"pack_id": "french_pack", "section_title": "Projet de systems-on-chip", "page": 139, "chunk_id": "french_pack_139_0", "content": "139 2020-2021LIVRETDECOURS CS-309 Projet de systems-on-chip BeuchatRené Cursus Sem. Type Langue français Informatique BA6 Opt. Crédits 3 Systèmesdecommunication BA6 Opt. Session Eté Semestre Printemps Examen Pendantle semestre Charge 90h Semaines 14 Heures 3hebdo Projet 3hebdo Nombrede places Résumé L'objectifdececoursestdes'approprierlesconnaissancesnécessairespourréaliserdudéveloppement\"fullstack\" depuislehardwarejusqu'ausoftwareapplicationets'exécutantsurunsystèmed'exploitationLinux.Labasedes laboratoiresestuneplateformeembarquéebaséesurunSOCFPGA&ARM. Contenu Cecours-labosvasurtoutpermettreauxétudiantsdecomprendrelesliensentreune application,unoperatingsystem (Linux)etlematérielinformatique.Uneplateformayantune FPGAet2processeursARMintégrésestutiliséecomme supportdeslabos. Cecoursestcentrésurdeslaboratoirespratiquesàréaliserparlesétudiants.Généralementuneintroductiond'une heureestsuiviede1à3sessionspourréaliserdesmini-projetspargroupes. Lorsdeslaboratoires,lestravauxseronteffectuéssurdescartesFPGA-SOCavecprocesseursembarquéssousforme softcore(NIOSII)et/ouhardcore(ARM).Desinterfacesprogrammablessimplesetcomplexesserontdéveloppéesen VHDLpours'interfaceravecdesmodulesexternesàcontrôler.Laméthodologiepas-à-passerautiliséepourarriveràla réalisationdesystèmesrelativementcomplexes. Lessujetssuivantsserontétudiésetaufinaluneapplicationcomplèteseraimplémentée: 1. Analysedusystème:MulticoreARMs,FPGA,I/Os,etinterfacesprogrammablesspécialisées; 2. Designetsimulationd'uneinterfaceprogrammableenVHDL,pourunADCpermettantdeliredesjoysticks analogiques,etuncontrôledeservo-moteurs; 3. Designetsimulationd'unaccélérateurspécifiqueenVHDLpourunecamérathermique; 4. TestdusystèmespécifiqueavecdéveloppementdelogicielenCavecdesoutilsdecross-debugging(baremetal coding); 5. Bootettestd'unsystèmeembarqué,baremetaldesign; 6. Installationd'unOS:AdaptationetcompilationdeLinuxpourlacartedelaboratoire; 7. Mini-projetfinaloùlesétudiantsutiliserontleursconnaissancespourcaptureruneimagethermiqueetàl'aidede joystickdéfinirontdiversparamètresetafficherontlesrésultatssurunaffichageLCDouécranVGA. Mots-clés Micro-controllers,Micro-contrôleurs,FPGA,SOC,EmbeddedSystems,LogicAnalyzer,Oscilloscope,projects,workin groups,C,VHDL. Compétencesrequises Coursprérequisobligatoires •CS-173: Digital system design / Conception de systèmes numériques •CS-208: Computer architecture I •CS-209: Computer architecture II Projetdesystems-on-chip Page1/3"}
{"pack_id": "french_pack", "section_title": "Projet de systems-on-chip", "page": 140, "chunk_id": "french_pack_140_0", "content": "140 2020-2021LIVRETDECOURS Coursprérequisindicatifs •CS-307:Introductiontomultiprocessorarchitecture Conceptsimportantsàmaîtriser Lesétudiantsdoiventconnaîtrel'architectured'unprocesseur,d'unsystèmeinformatique,quelquesnotions deprogrammationenC,enlangageassembleuretenVHDL. Acquisdeformation Alafindececoursl'étudiantdoitêtrecapablede: •Analyserleproblèmeàrésoudre; •Planifierletravailàréaliser; •Créerl'architecturedusystèmeàréaliser; •Coordonnerletravail; •Concevoirlesystèmeàréaliser; •Implémenterlasolution; •Intégrerlesmodulesdisponibles; •Expliquerlasolutiondéveloppée. Compétencestransversales •Planifierdesactionsetlesmeneràbiendefaçonàfaireunusageoptimaldutempsetdesressourcesàdisposition. •Fixerdesobjectifsetconcevoirunpland'actionpourlesatteindre. •Communiquerefficacementetêtrecomprisycomprispardespersonnesdelanguagesetculturesdifférentes. •Persévérerdansladifficultéouaprèsunéchecinitialpourtrouverunemeilleuresolution. •Fairepreuved'espritcritique •Utiliserlesoutilsinformatiquescourantsainsiqueceuxspécifiquesàleurdiscipline. Méthoded'enseignement •Travailpargroupesd'étudiants; •Laboratoirespratiques; •Mini-projetsspécifiquespargroupe; •Travauxavecdesoutilsdedéveloppementcroiséetdesystèmesmatérielsréels; •Utilisationdesoutilsdedébogagetelsqueoscilloscopesetanalyseurslogiques; •Lestravauxsontréaliséssurlessystèmesmatérielsréelsavecdesmicro-contrôleursetFPGA. Travailattendu •Brainstormingpargroupe; •Répartitiondelachargedetravailàtraverslegroupe; •Gestiondelaplanification; •Analysedesdonnéesdesdata-sheetdescomposantsutilisés; •Résolutiondeproblèmespratiquessurdessystèmesmatériels; •DéveloppementdemodulesFPGAenVHDL; •DéveloppementdelogicielsenCetobservationenassembleurdudéroulementduprogramme; Projetdesystems-on-chip Page2/3"}
{"pack_id": "french_pack", "section_title": "Projet de systems-on-chip", "page": 141, "chunk_id": "french_pack_141_0", "content": "141 2020-2021LIVRETDECOURS •Configurationetconstructiond'unLinuxsurunsystèmeembarqué. Méthoded'évaluation 1. Rapportsréguliers(60%) 2. Présentationoralefinale(20%) 3. Démonstration(15%) 4. Tenued'unjournaldelaboratoire(5%) Encadrement Officehours Non Assistants Oui Forumélectronique Oui Ressources Servicedecoursvirtuels(VDI) Non Sitesweb •http://wiki.epfl.ch/prsoc LiensMoodle •http://moodle.epfl.ch/course/view.php?id=14480 Préparationpour CS-473:EmbeddedSystems CS-476:RealTimeEmbeddedsystems Projetdesystems-on-chip Page3/3"}
{"pack_id": "french_pack", "section_title": "Projet en informatique I", "page": 142, "chunk_id": "french_pack_142_0", "content": "142 2020-2021LIVRETDECOURS CS-398 Projet en informatique I Profsdivers* Cursus Sem. Type Langue français Informatique BA5,BA6 Obl. Crédits 8 Session Hiver,Eté Semestre Automne Examen Pendantle semestre Charge 240h Semaines 14 Heures 2hebdo Projet 2hebdo Nombrede places Résumé Travauxderechercheindividuelleàeffectuerpendantlesemestre,selonlesdirectivesd'unprofesseuroud'unassistant. Contenu Sujetdetravailàchoisirparmilesdomainesproposéssurlesiteweb: https://www.epfl.ch/schools/ic/fr/education-fr/bachelor-fr/informatique/projets-labo-in/ Acquisdeformation Alafindececoursl'étudiantdoitêtrecapablede: •Organiserunprojet •Evaluersaprogressionaucoursduprojet •Présenterunprojet Compétencestransversales •Ecrireunrapportscientifiqueoutechnique. •Ecrireunerevuedelalittératurequiétablitl'étatdel'art. Méthoded'évaluation Rapportécritetprésentationorale Encadrement Officehours Non Assistants Non Forumélectronique Non Ressources Service de cours virtuels (VDI) Non Sites web https://www.epfl.ch/schools/ic/fr/education-fr/bachelor-fr/projet_de_semestre/ ProjeteninformatiqueI Page1/2"}
{"pack_id": "french_pack", "section_title": "Projet programmation système", "page": 143, "chunk_id": "french_pack_143_0", "content": "143 2020-2021LIVRETDECOURS CS-212 Projet programmation système BugnionEdouard,ChappelierJean-Cédric Cursus Sem. Type Langue français Informatique BA4 Obl. Crédits 2 MineurenInformatique E Opt. Session Eté Semestre Printemps Systèmesdecommunication BA4 Opt. Examen Pendantle semestre Charge 60h Semaines 14 Heures 2hebdo Projet 2hebdo Nombrede places Résumé L'objectifdececoursàprojetestdedonnerauxétudiantsuneexpériencedelapratiquedelaprogrammationsystème: écriture,correction,améliorationetanalysecritiquedeleurcode. Contenu • Cecoursseraenseignéenparallèleducours«ProgrammationOrientéeSystème»(CS-207).Iloffreauxétudiants l'opportunitédedévelopperdansuncadrepratiqueàlargeéchellelesconceptsprésentésdanscetautrecours.Les étudiantsdevronteneffetnonseulementdévelopperleurproprecodeàpartirderiensuruncasconcret,maisaussi lireducodeprofessionneldéveloppépard'autresdesorteàpouvoirs'eninspirer. • Cecoursconsisteraenunprojetconstituédeplusieurspartiesrépartiessurlesemestre.Ilinsisterasurlesconcepts clésprésentésdanslesautrescoursliésaudomainedelaprogrammationsystème(systèmesdefichiers,réseaux, accèsmémoire,concurrence,…),maismettraaussienplacedefaçonpratiqueplusieursélémensquiseront approfondisplustarddanslecursus(aspectsréseauxavancés,planification,etc.)danslebutd'offrirauxétudiantsune premièreapprochepratiqueàcesconcepts. Mots-clés • programmationsystème,gestionmémoire,systèmedefichiers Compétencesrequises Coursprérequisobligatoires • ProgrammationOrientéeSystème(CS-207) • Parallelism&Concurrency(CS-206) Coursprérequisindicatifs • ComputerNetworks Projetprogrammationsystème Page 1 / 2"}
{"pack_id": "french_pack", "section_title": "Projet programmation système", "page": 144, "chunk_id": "french_pack_144_0", "content": "144 2020-2021LIVRETDECOURS Conceptsimportantsàmaîtriser • programmation • parallélismeetconcurrence Acquisdeformation Alafindececoursl'étudiantdoitêtrecapablede: •ModéliserenlangageCdesproblèmessystèmetypiques •Analyserdesproblèmescomplexesrelatifsauxsytèmesinformatiquesetlesdécomposerensous-problèmes •RéaliserdesapplicationsdetaillemoyenneenlangageC •AnalyserdesprojetenlangageCpourêtrecapabledecomprendrecequ'ilsfontetcommentilssontorganisés •Testerlesrésultatd'unprojetenlangageCetlecorrigerlàoùcelaestnécessaire Compétencestransversales •Accéderauxsourcesd'informationsappropriéesetlesévaluer. •Recevoirdufeedback(unecritique)etyrépondredemanièreappropriée. •Utiliserlesoutilsinformatiquescourantsainsiqueceuxspécifiquesàleurdiscipline. •Gérersespriorités. •Persévérerdansladifficultéouaprèsunéchecinitialpourtrouverunemeilleuresolution. Méthoded'enseignement projet Travailattendu • écrirelecodeetladocumentationd'unprojetdegroupe Méthoded'évaluation • renduduprojetenplusieursétapesprogressivesaucoursdusemestre. Encadrement Officehours Non Assistants Oui Forumélectronique Oui Préparationpour • CS-323(OperatingSystems) Projetprogrammationsystème Page 2 / 2"}
{"pack_id": "french_pack", "section_title": "Signal processing for communications", "page": 145, "chunk_id": "french_pack_145_0", "content": "145 2020-2021COURSEBOOKLET COM-303 Signal processing for communications PrandoniPaolo Cursus Sem. Type Language English Auditeursenligne E Obl. Credits 6 HES-SC E Obl. Session Summer Semester Spring Informatique BA6 Opt. Exam Written MineurenSystèmesdecommunication E Opt. Workload 180h Weeks 14 Scienceeting.computationelles MA2,MA4 Opt. Hours 6weekly Systèmesdecommunication BA6 Obl. Lecture 4weekly Exercises 2weekly Numberof positions Summary Studentslearndigitalsignalprocessingtheory,includingdiscretetime,Fourieranalysis,filterdesign,adaptivefiltering, sampling,interpolationandquantization;theyareintroducedtoimageprocessinganddatacommunicationsystem design. Content 1. Basicdiscrete-timesignalsandsystems:signalclassesandoperationsondiscrete-timesignals,signalsasvectors inHilbertspace 2. FourierAnalysis:propertiesofFouriertransforms,DFT,DTFT;FFT. 3. Discrete-TimeSystems:LTIfilters,convolutionandmodulation;differenceequations;FIRvsIIR,stabilityissues. 4. Z-transform:propertiesandregionsofconvergence,applicationstolinearsystems. 5. FilterDesign:FIRdesignmethods,IIRdesignmethods,filterstructures. 6. StochasticandAdaptiveSignalProcessing:randomprocesses,spectralrepresentation,OptimalLeastSquares adaptivefilters. 7. InterpolationandSampling:thecontinuous-timeparadigm,interpolationthesamplingtheorem,aliasing. 8. Quantization:A/DandD/Aconverters. 9. Multi-ratesignalprocessing:upsamplinganddownsampling,oversampling. 10. Multi-dimensionalsignalsandprocessing:introductiontoImageProcessing. 11. Practicalapplications:digitalcommunicationsystemdesign,ADSL. Keywords signalprocessing,discrete-time,continuous-time,filter,filterdesign,sampling,aliasing,DSP,Fouriertransform,FFT, modem,ADSL LearningPrerequisites Requiredcourses calculus,linearalgebra Recommendedcourses Circuitsandsystems,basicprobabilitytheory Importantconceptstostartthecourse vectorsandvectorspaces,functionsandsequences,infiniteseries LearningOutcomes Bytheendofthecourse,thestudentmustbeableto: Signalprocessingforcommunications Page1/3"}
{"pack_id": "french_pack", "section_title": "Signal processing for communications", "page": 146, "chunk_id": "french_pack_146_0", "content": "146 2020-2021COURSEBOOKLET •Identifysignalsandsignaltypes •Recognizesignalprocessingproblems •Applythecorrectanalysistoolstospecificsignals •Checksystemstability •Manipulaterationaltransferfunctions •Implementsignalprocessingalgorithms •Designdigitalfilters •Interpretcomplexsignalprocessingsystems Transversalskills •Useaworkmethodologyappropriatetothetask. •Assessone'sownlevelofskillacquisition,andplantheiron-goinglearninggoals. •UsebothgeneralanddomainspecificITresourcesandtools Teachingmethods CoursewithexercisessessionsandcodingexamplesandexercisesinPython(JupyterNotebooks) Expectedstudentactivities completeweeklyhomework,exploreandmodifyJupyterNotebookexamples Assessmentmethods finalexamfullydeterminesfinalgrade. Supervision Officehours Yes Assistants Yes Forum Yes Resources Bibliography SignalprocessingforCommunications,EPFLPress,2008,byP.PrandoniandM.Vetterli.Thebookis availableforsaleinprintedformonlineandinbookstores;iniBookformatontheApplestoreandisalso availableasafreepdffileathttp://www.sp4comm.org/ Ressourcesenbibliothèque •SignalprocessingforCommunications/Prandoni Notes/Handbook lectureslidesavailablefordownloadatthebeginningofthesemester. AcompleteonlineDSPMOOCisavailableonCoursera. Websites •http://www.sp4comm.org/ •https://www.coursera.org/learn/dsp1/ •https://www.coursera.org/learn/dsp2/ •https://www.coursera.org/learn/dsp3/ •https://www.coursera.org/learn/dsp4/ Signalprocessingforcommunications Page2/3"}
{"pack_id": "french_pack", "section_title": "Signal processing for communications", "page": 147, "chunk_id": "french_pack_147_0", "content": "147 2020-2021COURSEBOOKLET MoodleLink •https://moodle.epfl.ch/course/view.php?id=15139 Prerequisitefor adaptivesignalprocessing,imageprocessing,audioprocessing,advancedsignalprocessing Signalprocessingforcommunications Page3/3"}
{"pack_id": "french_pack", "section_title": "Signal and systems (for EL&IC)", "page": 148, "chunk_id": "french_pack_148_0", "content": "148 2020-2021COURSEBOOKLET EE-205 Signals and systems (for EL&IC) ShkelYanina Cursus Sem. Type Language English Génieélectriqueetélectronique BA4 Obl. Credits 4 HES-EL E Opt. Session Summer Semester Spring HES-SC E Obl. Exam Written Informatique BA4 Opt. Workload 120h Weeks 14 MineurenSystèmesdecommunication E Opt. Hours 4weekly Systèmesdecommunication BA4 Obl. Lecture 2weekly Exercises 2weekly Numberof positions Summary Thisclassteachesthetheoryoflineartime-invariant(LTI)systems.Thesesystemsservebothasmodelsofphysical reality(suchasthewirelesschannel)andasengineeredsystems(suchaselectricalcircuits,filtersandcontrol strategies). Content Thedesignofadvancedsystems(suchasWiFi,cellphones,drones,airplanes)requiresathoroughtheoretical underpinning.Thisclassteachesoneofthemostpowerfulandimportantpillars:Thetheoryoflineartime-invariant(LTI) systems.Thesesystemsservebothasmodelsofphysicalreality(suchasthewirelesschannel)andasengineered systems(suchasfiltersandcontrolstrategies). Theclasswillcoverthefollowingtopics: 1. Systems:Definitions(1week) 2. LTISystems(3weeks) 3. TheFrequencyResponseofstableLTISystems(1week) 4. FourierTechniquesforstableLTISystems(3weeks);withapplicationstoCommunicationSystemsandSignal Processing 5. LaplaceandZ-TransformTechniquesforLTISystems(5weeks);withapplicationstoControlSystems Keywords Systems,Circuits,Signals,FrequencyResponse,TransferFunction,FourierTransform,LaplaceTransform,Z Transform,Stability,Causality,Sampling LearningPrerequisites Requiredcourses AnalysisI,II,III.LinearalgebraI. Recommendedcourses LinearalgebraII LearningOutcomes Bytheendofthecourse,thestudentmustbeableto: •DescribepropertiesofLTIsystems •SolveforpolesandzerosofLTIsystems •RecallpropertiesofCTFouriertransform •AnalyzeLTIsystemsbyspectralanalysis Signalsandsystems(forEL&IC) Page1/2"}
{"pack_id": "french_pack", "section_title": "Signal and systems (for EL&IC)", "page": 149, "chunk_id": "french_pack_149_0", "content": "149 2020-2021COURSEBOOKLET •OperatewithFouriertransformtools •Workout/DetermineimpulseresponseofCTLTI Teachingmethods •Classroomlectures •Writtenexercises •Gradedhomeworkproblems Expectedstudentactivities •Readcoursebookinenglish(thecourseistaughtinenglish) Assessmentmethods Homeworksandwrittenmid-termexamandfinalexams Resources Bibliography Thefollowingisarecommended(butnotrequired)book: A.V.OppenheimandA.S.Willsky,withS.HamidNawab,SignalsandSystems.UpperSaddleRiver,NJ: PrenticeHall,2nded.,1996. Ressourcesenbibliothèque •A.V.OppenheimandA.S.Willsky,withS.HamidNawab,SignalsandSystems Notes/Handbook willbemadeavailable Signalsandsystems(forEL&IC) Page2/2"}
{"pack_id": "french_pack", "section_title": "Software development project", "page": 150, "chunk_id": "french_pack_150_0", "content": "150 2020-2021COURSEBOOKLET CS-306 Software development project CandeaGeorge Cursus Sem. Type Language English HES-IN E Obl. Credits 4 Informatique BA6 Obl. Session Summer Semester Spring MineurenInformatique E Opt. Exam Duringthe Systèmesdecommunication BA6 Opt. semester Workload 120h Weeks 14 Hours 4weekly Project 4weekly Numberof positions Summary Thiscourseteachesthebasicsofdevelopingreal-worldsoftware,i.e.,softwarethatislargeandcomplex,isdeveloped byateam,evolvesandneedstobemaintained,andcancauseseriousharmifitfails.StudentsdevelopanAndroidapp anddoalotofprogramming. Content •Problemsolvingforsoftwareengineers •Developmentprocesses,inparticularagilemethods •Tools(sourcecontrol,projectmanagement,issuetrackers,debuggers,etc.) •Android LearningPrerequisites Requiredcourses •CS-305SoftwareEngineering(strictrequirement,noexceptions) Importantconceptstostartthecourse Firstandforemost,studentstakingSoftwareEngineeringmustbeproficientJavaprogrammers.Withouta goodpriorknowledgeofJava,itisverydifficulttokeepupwiththepaceoftheclass.Familiaritywith Androiddevelopmentisaplusbutnotrequired. LearningOutcomes Bytheendofthecourse,thestudentmustbeableto: •Designmobileapps •Coordinateateamofdevelopers Transversalskills •Planandcarryoutactivitiesinawaywhichmakesoptimaluseofavailabletimeandotherresources. •Assessprogressagainsttheplan,andadapttheplanasappropriate. •Assessone'sownlevelofskillacquisition,andplantheiron-goinglearninggoals. Softwaredevelopmentproject Page1/2"}
{"pack_id": "french_pack", "section_title": "Software development project", "page": 151, "chunk_id": "french_pack_151_0", "content": "151 2020-2021COURSEBOOKLET •Managepriorities. •Takefeedback(critique)andrespondinanappropriatemanner. Teachingmethods Team-basedproject Expectedstudentactivities Workwithteammemberstocompleteasubstantialproject Assessmentmethods Throughoutthesemester(contrôlecontinu). Gradedeterminedbasedonbothteamandindividualperformanceintheproject. Supervision Officehours Yes Assistants Yes Forum Yes Resources Virtualdesktopinfrastructure(VDI) No Websites •http://sweng.epfl.ch/ Softwaredevelopmentproject Page2/2"}
{"pack_id": "french_pack", "section_title": "Software engineering", "page": 152, "chunk_id": "french_pack_152_0", "content": "152 2020-2021COURSEBOOKLET CS-305 Software engineering CandeaGeorge Cursus Sem. Type Language English HES-IN H Obl. Credits 4 Informatique BA5 Obl. Session Winter Semester Fall MineurenInformatique H Opt. Exam Written Scienceeting.computationelles MA1,MA3 Opt. Workload 120h Weeks 14 Systèmesdecommunication BA5 Opt. Hours 4weekly Lecture 2weekly Exercises 1weekly Project 1weekly Numberof positions Summary Thiscourseteachesthebasicsofmodernsoftwaredevelopment:designingsoftware,workinginateam,writinggood code,shippingsoftware,andevolvingsoftware.Itemphasizesbuildingsoftwarethatmeetshighstandardsofquality, reliability,security,andmanageability. Content Writingsoftware •Modularity •Interfaces •Softwarearchitecture Gettingsoftwareright •Requirements •Testing •Verification •Debugging •Security •Performance Shippingsoftware •Developmentprocesses •DevOps •Softwareevolution Continuousandindependentlearningisessentialtobeingagoodsoftwareengineerbecause,unlikemathematicsor physics,thefieldchangesfast.Thiscoursepreparesstudentstobecomelifelongauto-didactswhobuilduponthe foundationofimmutableprinciplesthatgoverngoodsoftwareengineering. Keywords designpatterns,faulttolerance,softwaretesting,codeanalysis,softwareverification,security,performance,usability, refactoring,agiledevelopmentmethods,versioncontrolsystems,continuousintegration LearningPrerequisites Requiredcourses Softwareengineering Page1/3"}
{"pack_id": "french_pack", "section_title": "Software engineering", "page": 153, "chunk_id": "french_pack_153_0", "content": "153 2020-2021COURSEBOOKLET •CS-108PracticeofObject-OrientedProgramming •CS-206ParallelismandConcurrency •CS-207System-orientedProgramming •COM-208ComputerNetworks •CS-208/209ComputerArchitecture •CS-210FunctionalProgramming StudentswhodonotmasterthematerialtaughtintheprerequisitecoursespriortostartingCS-305typically donotmanagetopassthiscourse. Importantconceptstostartthecourse Studentsarerequiredtohavegoodprogrammingskillsinanobject-orientedlanguage(e.g.,Java). LearningOutcomes Bytheendofthecourse,thestudentmustbeableto: •Designsoftwarethatisreliable,secure,user-friendly,andperformswell •Implementsophisticateddesignsandalgorithms •Specifyrequirementsforsoftwaresystems •Developcodethatismaintainable •Organizeateamtoexecuteamedium-sizedsoftwareproject •Assess/Evaluatedesignandimplementationalternatives Teachingmethods •Combinationofonlineandin-classlectures •Onlinetextbook •Homeworkexercises Expectedstudentactivities •Attendandactivelyparticipateinlectures •Readandunderstandassignedmaterials •Completehomeworkexercisesindependently Assessmentmethods •20%basedononlinequizzesandhomeworks(duringthesemester) •80%basedonafinalexam(duringtheexamsession) Supervision Officehours Yes Assistants Yes Forum Yes Resources Virtualdesktopinfrastructure(VDI) Softwareengineering Page2/3"}
{"pack_id": "french_pack", "section_title": "Software engineering", "page": 154, "chunk_id": "french_pack_154_0", "content": "154 2020-2021COURSEBOOKLET No Bibliography Pleaseseethecoursewebsiteforthelatestinformationandup-to-datebibliography Ressourcesenbibliothèque • • Websites •https://sweng.epfl.ch Softwareengineering Page3/3"}
{"pack_id": "french_pack", "section_title": "Technologies of societal self-organization", "page": 155, "chunk_id": "french_pack_155_0", "content": "155 2020-2021COURSEBOOKLET CS-234 Technologies of societal self-organization FordBryanAlexander Cursus Sem. Type Language English Informatique BA3 Opt. Credits 5 Systèmesdecommunication BA3 Opt. Session Winter Semester Fall Exam Written Workload 150h Weeks 14 Hours 5weekly Lecture 2weekly Exercises 1weekly Practical 2weekly work Numberof positions Summary Thiscoursewillofferstudentsabroadbuthands-onintroductiontotechnologiesofhumanself-organization. Content Thecoursewillpresentstudentswithaviewofself-organizationtechnologiessetinalong-termhistoricalperspective, extendingfromtheirrootsinancientsprinciplesofdemocracyandgovernance,uptorecenthigh-techinnovationsuchas socialnetworking,e-voting,blockchains,anddelegativedemocracy.Thecoursewillcoverthemanyfundamental organizationchallengesthesetechnologiesattempttoaddress,suchas: •Coordination:doparticipantscommunicateinperson,electronically,orbypassingsecretnotes? •Membership:whohastherighttoparticipateasamemberorcitizen?Canmembershipbefaked? •Equityorfairness:howmuchpowerorweightdoeseachparticipanthave?Canweightbehacked? •Filtering:howtoseparatesignalfromnoise,realexpertisefromappealingbluster? •Scalability:doestheself-organizingtechnologyworkforonly10members,or100?1000?1M?1B? •Integrity:howdoesself-organizingtechnologypreventhackingortamperingbymaliciousparties? •Self-determination:doesthetechnologyprotectfreedomssuchasexpressionandassociation? •Privacy:whatactsofparticipationdoesthetechnologykeepprivate,andwhatareconsideredpublic? •Representation:isparticipationdirectorrepresentative?Howarerepresentativeschosen? •Accountability:howareparticipantsand/orrepresentativeskeptaccountablefortheiractions? •Transparency:doesthetechnologyallowparticipantstoverifythatitisoperatingcorrectly?How? •Incentives:howdoesthetechnologyencourageorincentivizepeopletouseit,forgoodorill? •Psychology:howdoesthetechnologyinterplaywiththeuniquepropertiesofthehumanmind? LearningPrerequisites Importantconceptstostartthecourse Basiccomputingandprogrammingskills LearningOutcomes Bytheendofthecourse,thestudentmustbeableto: •Exploretechnologiesavailableforsocietalself-organization •Expoundkeychallengesandrisksinusingthesetechnologies Technologiesofsocietalself-organization Page1/2"}
{"pack_id": "french_pack", "section_title": "Technologies of societal self-organization", "page": 156, "chunk_id": "french_pack_156_0", "content": "156 2020-2021COURSEBOOKLET •Discusssocialimplicationsofdigitalcommunicationandorganizationtechnologies Teachingmethods Thecoursewillusereadings,discussions,andexercisestoleadstudentsthroughanexplorationofthevastnumberof differenttechnologicalapproachestothesechallengesandissues,fromextremelylow-tech(e.g.,pickingrepresentatives bydrawingstraws)tothelatestexperimentaltechnologies.Indifferentweeksthestudentswillexplorehands-onthe architecture,design,practicaluse,andstrenghtsandweaknessesofdifferentself-organizationtechnologies,suchas: •PublicdiscussionforumssuchasUseNet,Twitter,andReddit •Communityself-organizationsystemssuchasLoomio •PeerreviewsystemssuchasHotCRP •E-votingsystemsinuseinaroundtheworld(especiallytheUSandSwitzerland) •ExperimentalparticipatorydelegativedemocracysystemssuchasLiquidFeedback •CryptocurrenciesandsmartcontractsystemssuchasBitcoinandEthereum Thecourseworkwillinvolveasubstantialamountofreadingbackgroundmaterials,bothtechnicalandnon-technicaland fromavarietyofdisciplinesincludingcomputerscience,socialscience,politicalscience,andlaw. Thelectureswillbe heavilydiscussion-oriented,coveringboththebackgroundreadingsandhands-onexercisesinadditiontomaterial presentedinthelectures. Expectedstudentactivities Thecoursewillencouragestudentsto\"learnbydoing\"throughexerciseswithpracticalsystems.Studentswillbe requiredtousesomeofthesesystemsingroupsin\"hands-on\"self-organizationexericses,togetfirsthandcomparative experienceofhowtheywork,andinwhatwaystheysucceedandfail. Assessmentmethods Studentswillbeassessedthroughregularexercisesandmini-quizzes,participationin\"peerreview\"activities,asmall projectinthesecondhalfofthesemesteronwhichthestudentsmustreport,andawrittenfinalexam. Gradingwillbe basedsubstantiallyondemonstratedactiveparticipationinthedeliberativecourseexercises,inadditiontolearningand understandingofthecoursecontentitself. Supervision Officehours Yes Assistants Yes Forum Yes Resources Ressourcesenbibliothèque •Whogoverns?:democracyandpowerinanAmericancity •Citizenswithoutshelter:homelessness,democracy,andpoliticalexclusion •TheDeathofMoney •Themasterswitch:theriseandfallofinformationempires MoodleLink •https://moodle.epfl.ch/course/view.php?id=15738 Technologiesofsocietalself-organization Page2/2"}
{"pack_id": "french_pack", "section_title": "Theory of computation", "page": 157, "chunk_id": "french_pack_157_0", "content": "157 2020-2021COURSEBOOKLET CS-251 Theory of computation GöösMikaTapani Cursus Sem. Type Language English HES-IN E Obl. Credits 4 Informatique BA4 Obl. Session Summer Semester Spring Systèmesdecommunication BA4 Obl. Exam Written Workload 120h Weeks 14 Hours 4weekly Lecture 2weekly Exercises 2weekly Numberof positions Summary Thiscourseconstitutesanintroductiontotheoryofcomputation.Itdiscussesthebasictheoreticalmodelsofcomputing (finiteautomata,Turingmachine),aswellas,providesasolidandmathematicallypreciseunderstandingoftheir fundamentalcapabilitiesandlimitations. Content •Basicmodelsofcomputation(finiteautomata,Turingmachine) •Elementsofcomputabilitytheory(undecidability,reducibility) •Introductiontotimecomplexitytheory(P,NPandtheoryofNP-completeness) Keywords theoryofcomputation,Turingmachines,Pvs.NPproblem,complexitytheory,computabilitytheory,finiteautomata, NP-completeness LearningPrerequisites Requiredcourses CS-101Advancedinformation,computation,communicationI CS-250Algorithms LearningOutcomes Bytheendofthecourse,thestudentmustbeableto: •Performarigorousstudyofperformanceofanalgorithmoraprotocol •Classifycomputationaldifficultyofadecisionproblem •DefinethenotionofNP-completeness •Analyzevariouscomputationmodels •Designareductionbetweentwocomputationalproblems •Characterizedifferentcomplexityclasses •ExplainPvs.NPproblem Transversalskills Theoryofcomputation Page1/2"}
{"pack_id": "french_pack", "section_title": "Theory of computation", "page": 158, "chunk_id": "french_pack_158_0", "content": "158 2020-2021COURSEBOOKLET •Useaworkmethodologyappropriatetothetask. •Continuetoworkthroughdifficultiesorinitialfailuretofindoptimalsolutions. Teachingmethods Excathedrawithexercises Assessmentmethods Writtenexamandcontinuouscontrol Theoryofcomputation Page2/2"}
{"pack_id": "french_pack", "section_title": "Traitement quantique de l'information", "page": 159, "chunk_id": "french_pack_159_0", "content": "159 2020-2021LIVRETDECOURS COM-309 Traitement quantique de l'information MacrisNicolas Cursus Sem. Type Langue français Informatique BA5 Opt. Crédits 4 Systèmesdecommunication BA5 Opt. Session Hiver Semestre Automne Examen Ecrit Charge 120h Semaines 14 Heures 4hebdo Cours 3hebdo Exercices 1hebdo Nombrede places Résumé L'informationesttraitéeetstockéedansdescomposantsmatériels.Avecleurminiaturisation,ilfautremplacerleconcept debitclassiqueparceluidebitquantique.Cecoursdéveloppelesujetdescommunications,delacryptographieetdes corrélationsquantiques.LamachineIBMQseraabordée. Contenu Introductionalamecaniquequantiquedessystemesdiscrets. -Polarisationdesphotons,étatsquantiques,règledeBorn. -ExpériencedeStern-Gerlach,spin1/2,étatsquantiquessurlasphèredeBloch. -Dynamiqueduspin,OscillationsdeRabietmanipulationsdel'étatquantique. -Notionabstraitedequbit.Etatsàplusieursqubits. Cryptographie,CommunicationsetCorrélations -Générationd'uneclésecrète:protocolesBB84etB92. -Intrication:pairesdeEinstein-Podolsky-Rosen. -InégalitésdeBell.Expériencesd'Aspect-Grangier.ProtocoledeEkertpouruneclésecrète. -Protocolesdetéléportationetdensecoding. Mots-clés Polarisation,spin,bitquantique,intrication,téléportation,cryptographiequantique. Compétencesrequises Coursprérequisobligatoires Algèbrelinéaire. Coursprérequisindicatifs physiquedebase:mécaniqueetondes. Conceptsimportantsàmaîtriser Matrices,valeursetvecteurspropres,produitscalaire,manipulationsalgébriquesdebaseavecdes nombrescomplexes. Acquisdeformation Alafindececoursl'étudiantdoitêtrecapablede: •Expliquerlesprincipesdelaphysiquequantiquepourlessystèmesdiscrets •Expliquerleconceptdequbitetdonnerquelquesexemples Traitementquantiquedel'information Page1/2"}
{"pack_id": "french_pack", "section_title": "Traitement quantique de l'information", "page": 160, "chunk_id": "french_pack_160_0", "content": "160 2020-2021LIVRETDECOURS •Décrirecommentmanipulerdesqubits •Connaitrelesprotocolesdebasedelacryptographiequantique. •Connaitrelesprotocolesdedensecodingetdetéléportation. •Expliquercequ'estl'intrication. •EtrefamilieraveclesordinateursIBMQ Méthoded'enseignement Ex-Cathedra.Séancesd'exercices.Discussionsdeslecturespédagogiquesproposéesauxétudiants. Travailattendu Participationaucours.Résolutiond'exercices.Lecturesderevues pédagogiques. Méthoded'évaluation miniprojetonIBMQmachine,4gradedhomeworks,examenfinalécrit. Ressources Bibliographie DavidMermin,Quantumcomputerscience,Anintroduction,Cambridgeuniversitypress2000.Livre écritpourdesinformaticiensetquinerequiertpasdeconnaissancesenphysique.. MichelLeBellac, Ashortintroductiontoquantuminformationandquantumcomputation, CambridgeUniversityPress.Pourl'éditionenfrancaisvoirEditionsBelin2005.Unlivrepédagogiquequi introduitquelquesaspectsphysiqueselementairesdusujet. NeilGershenfeld.Thephysicsofinformationtechnology.CambridgeUniversityPress.Unlivreoriginal surlestechnologiesdebaseutileseninformatiqueetcommunicationclassiqueet/ouquantique. Ressourcesenbibliothèque •Thephysicsofinformationtechnology/Gershenfeld •Quantumcomputerscience/Mermin •Ashortintroductiontoquantuminformationandquantumcomputation/LeBellac Polycopiés Notesfourniesenclasse.Revuessurlesujet.exercicesetcorrigésfournisencoursd'année. Sitesweb •https://ipg.epfl.ch/doku.php?id=en:courses Préparationpour Calculquantique Traitementquantiquedel'information Page2/2"}
{"pack_id": "french_pack", "section_title": "Descriptifs Cycle Master", "page": 161, "chunk_id": "french_pack_161_0", "content": "161 INFORMATIQUE Cycle Master 2020 / 2021"}
{"pack_id": "french_pack", "section_title": "Advanced algorithms", "page": 163, "chunk_id": "french_pack_163_0", "content": "163 2020-2021COURSEBOOKLET CS-450 Advanced algorithms KapralovMikhail Cursus Sem. Type Language English Cybersecurityminor E Opt. Credits 7 Cybersecurity MA2,MA4 Obl. Session Summer Semester Spring DataScience MA2,MA4 Obl. Exam Written Informatiqueetcommunications Opt. Workload 210h Weeks 14 Informatique MA2,MA4 Obl. Hours 7weekly MineurenDatascience E Opt. Lecture 4weekly MineurenInformatique E Opt. Exercises 3weekly Numberof Robotique,contrôleetsystèmesintelligents Opt. positions SCmasterEPFL MA2,MA4 Obl. Scienceeting.computationelles MA2,MA4 Opt. Summary Afirstgraduatecourseinalgorithms,thiscourseassumesminimalbackground,butmovesrapidly.Theobjectiveisto learnthemaintechniquesofalgorithmanalysisanddesign,whilebuildingarepertoryofbasicalgorithmicsolutionsto problemsinmanydomains. Content Algorithmanalysistechniques:worst-caseandamortized,average-case,randomized,competitive,approximation.Basic algorithmdesigntechniques:greedy,iterative,incremental,divide-and-conquer,dynamicprogramming,randomization, linearprogramming. Examplesfromgraphtheory,linearalgebra,geometry,operationsresearch,andfinance. Keywords Seecontent. LearningPrerequisites Requiredcourses AnundergraduatecourseinDiscreteStructures/DiscreteMathematics,coveringformalnotation(sets, propositionallogic,quantifiers),proofmethods(derivation,contradiction,induction),enumerationofchoices andotherbasiccombinatorialtechniques,graphsandsimpleresultsongraphs(cycles,paths,spanning trees,cliques,coloring,etc.). Recommendedcourses AnundergraduatecourseinDataStructuresandAlgorithms. AnundergraduatecourseinProbabilityandStatistics. Importantconceptstostartthecourse Basicdatastructures(arrays,lists,stacks,queues,trees)andalgorithms(binarysearch;sorting;graph connectivity);basicdiscretemathematics(proofmethods,induction,enumerationandcounting,graphs); elementaryprobabilityandstatistics(randomvariables,distributions,independence,conditional probabilities);dataabstraction. LearningOutcomes Bytheendofthecourse,thestudentmustbeableto: Advancedalgorithms Page1/2"}
{"pack_id": "french_pack", "section_title": "Advanced algorithms", "page": 164, "chunk_id": "french_pack_164_0", "content": "164 2020-2021COURSEBOOKLET •Useasuitableanalysismethodforanygivenalgorithm •Provecorrectnessandrunning-timebounds •Designnewalgorithmsforvariationsofproblemsstudiedinclass •Selectappropriatelyanalgorithmicparadigmfortheproblemathand •Defineformallyanalgorithmicproblem Teachingmethods Excathedralecture,reading Assessmentmethods Supervision Others Fordetails,seethecoursewebpage. Resources Bibliography Seewebpageforthecourse. Ressourcesenbibliothèque •RandomizedAlgorithms/Motwani •ApproximationAlgorithms/Vazirani •ComputationalComplexity/Papadimitrou • AlgebraicComplexityTheory/Buergisser •QuantumComputationandQuantumInformation/Nielsen Notes/Handbook Classnotesandreferencesfortherunningsemesterwillbeprovidedasneededwithinafewdaysafter eachlecture. Advancedalgorithms Page2/2"}
{"pack_id": "french_pack", "section_title": "Advanced compiler construction", "page": 165, "chunk_id": "french_pack_165_0", "content": "165 2020-2021COURSEBOOKLET CS-420 Advanced compiler construction SchinzMichel Cursus Sem. Type Language English Cybersecurity MA2,MA4 Opt. Credits 4 Informatique MA2,MA4 Opt. Session Summer Semester Spring Exam Duringthe semester Workload 120h Weeks 14 Hours 4weekly Lecture 2weekly Project 2weekly Numberof positions Summary Studentslearnseveralimplementationtechniquesformodernfunctionalandobject-orientedprogramminglanguages. Theyputsomeofthemintopracticebydevelopingkeypartsofacompilerandruntimesystemforasimplefunctional programminglanguage. Content Part1:implementationofhigh-levelconcepts • functionallanguages:closures,continuations,tailcallelimination, •object-orientedlanguages:objectlayout,methoddispatch,membershiptest. Part2:optimizations • compilerintermediaterepresentations(RTL,SSA,CPS), • inliningandsimpleoptimizations, • registerallocation, •instructionscheduling. Part3:runtimesupport • interpretersandvirtualmachines, •memorymanagement(includinggarbagecollection). Keywords compilation,programminglanguages,functionalprogramminglanguages,object-orientedprogramminglanguages,code optimization,registerallocation,garbagecollection,virtualmachines,interpreters,Scala. LearningPrerequisites Recommendedcourses Computerlanguageprocessing Importantconceptstostartthecourse ExcellentknowledgeofScalaandCprogramminglanguages LearningOutcomes Advancedcompilerconstruction Page1/2"}
{"pack_id": "french_pack", "section_title": "Advanced compiler construction", "page": 166, "chunk_id": "french_pack_166_0", "content": "166 2020-2021COURSEBOOKLET Bytheendofthecourse,thestudentmustbeableto: •Assess/Evaluatethequalityofacompilerintermediaterepresentation •Designcompilersandruntimesystemsforobject-orientedandfunctionalprogramminglanguages •Implementrewriting-basedcompileroptimizations •Implementefficientvirtualmachinesandinterpreters •Implementmarkandsweeporcopyinggarbagecollectors Teachingmethods ExCathedra,mini-project Assessmentmethods Continuouscontrol(mini-project80%,finalexam20%) Supervision Officehours No Assistants Yes Forum Yes Resources Virtualdesktopinfrastructure(VDI) No Ressourcesenbibliothèque •EngineeringaCompiler/Cooper •ModernCompilerImplementationinJava/Appel •Thegarbagecollectionhandbook:theartofautomaticmemorymanagement/Jones •Compilingwithcontinuations/Appel Websites •https://cs420.epfl.ch/ Advancedcompilerconstruction Page2/2"}
{"pack_id": "french_pack", "section_title": "Advanced computer architecture", "page": 167, "chunk_id": "french_pack_167_0", "content": "167 2020-2021COURSEBOOKLET CS-470 Advanced computer architecture IennePaolo Cursus Sem. Type Language English Cybersecurityminor E Opt. Credits 6 Cybersecurity MA2,MA4 Obl. Session Summer Semester Spring Génieélectriqueetélectronique MA2,MA4 Opt. Exam Oral Informatique MA2,MA4 Obl. Workload 180h Weeks 14 MineurenInformatique E Opt. Hours 5weekly SCmasterEPFL MA2,MA4 Opt. Lecture 3weekly Project 2weekly Numberof positions Summary ThecoursestudiestechniquestoexploitInstruction-LevelParallelism(ILP)staticallyanddynamically.Italsoaddresses someaspectsofthedesignofdomain-specificaccelerators.Finally,itexploressecuritychallengesbasedon microarchitecturalfeaturesandhardwareisolationtechniques. Content Pushingprocessorperformancetoitslimits: •PrinciplesofInstructionLevelParallelism(ILP) •Registerrenamingtechniques •Predictionandspeculation •Simultaneousmultithreading •Optimizedmemoryhierarchiesandefficientvirtualization •VLIWandcompilertechniquesforILP •Dynamicbinarytranslation Domainspecificarchitecturesandaccelerators: •Specificitiesofembeddedvs.generalcomputingprocessors •OverviewofDSPsandrelatedcompilationchallenges •BasicnotionsofHigh-LevelSynthesis •Staticallyanddynamicallyscheduledaccelerators Securityconcerns: •Informationleakagethroughthememoryhierarchy •Informationleakagethroughthefront-end(branchprediction) •Hardware-basedarchitecturesforisolation(e.g.,ARMTrustZoneandIntelSGX) •Power-analysisside-channelattacks Keywords Processors,InstructionLevelParallelism,Systems-on-Chip,EmbeddedSystems,High-LevelSynthesis,Hardware Security. LearningPrerequisites Requiredcourses Advancedcomputerarchitecture Page 1 / 2"}
{"pack_id": "french_pack", "section_title": "Advanced computer architecture", "page": 168, "chunk_id": "french_pack_168_0", "content": "168 2020-2021COURSEBOOKLET •CS-208ArchitecturedesordinateursorComputerArchitectureI Recommendedcourses •CS-209Architecturedessystèmes-on-chiporComputerArchitectureII Importantconceptstostartthecourse Undergraduateknowledgeofdigitalcircuitdesignandofcomputerarchitecture LearningOutcomes Bytheendofthecourse,thestudentmustbeableto: •Designstrategiestoexploitinstructionlevelparallelisminprocessors. •Contraststaticanddynamictechniquesforinstructionlevelparallelism. •Designeffectiveprocessor(micro-)architecturesforwhichefficientcompilerscanbewritten. •Develophardwareacceleratorscompetitivetobestcommercialprocessors •Defendagainstsecuritythreatsbasedonmicroarchitecturalprocessorfeatures Teachingmethods Courses,labs,andcompulsoryhomeworks. Assessmentmethods Labs,homeworks,andfinalexam. Supervision Officehours No Assistants Yes Forum Yes Resources Virtualdesktopinfrastructure(VDI) No Bibliography •JohnL.HennessyandDavidA.Patterson,ComputerArchitecture:AQuantitativeApproach,Morgan Kaufman,6thedition,2017. Ressourcesenbibliothèque •ComputerArchitecture/Hennessy MoodleLink •https://moodle.epfl.ch/course/view.php?id=15017 Prerequisitefor CS-471 Advanced Multiprocessor Architecture Advancedcomputerarchitecture Page 2 / 2"}
{"pack_id": "french_pack", "section_title": "Advanced computer graphics", "page": 169, "chunk_id": "french_pack_169_0", "content": "169 2020-2021COURSEBOOKLET CS-440 Advanced computer graphics JakobWenzel Cursus Sem. Type Language English Cybersecurity MA2,MA4 Opt. Credits 6 Humanitésdigitales MA2,MA4 Opt. Session Summer Semester Spring Informatique MA2,MA4 Opt. Exam Duringthe MineurenInformatique E Opt. semester Workload 180h MineurenSystèmesdecommunication E Opt. Weeks 14 SCmasterEPFL MA2,MA4 Opt. Hours 3weekly Lecture 2weekly Exercises 1weekly Numberof positions Summary Thiscoursecoversadvanced3Dgraphicstechniquesforrealisticimagesynthesis.Studentswilllearnhowlightinteracts withobjectsinourworld,andhowtorecreatethesephenomenainacomputersimulationtocreatesyntheticimagesthat areindistinguishablefromphotographs. Content Thisisaproject-basedcourse:studentswillinitiallyreceiveabasicsoftwarepackagethatlacksmostrendering-related functionality. Overthecourseofthesemester,wewilldiscussavarietyofconceptsandtoolsincludingthebasicphysicalquantities, howlightinteractswithsurfaces,andhowtosolvetheresultingmathematicalproblemnumericallytocreaterealistic images.Advancedtopicsincludeparticipatingmedia,materialmodelsforsub-surfacelighttransport,andMarkovChain MonteCarloMethods. Eachmajortopicisaccompaniedbyanassignmentsothatstudentscanimplementsolutionalgorithmsandobtain practicalexperiencewiththesetechniqueswithintheirownsoftwareframework. Towardstheendofthecourse,studentswillrealizeaself-directedfinalprojectthatextendstheirrenderingsoftwarewith additionalfeaturesoftheirownchoosing.Theobjectiveofthefinalprojectistocreateasingleimageofbothtechnical andartisticmeritthatisenteredintoarenderingcompetitionandjudgedbyanindependentpanelofcomputergraphics experts. LearningPrerequisites Requiredcourses Nothing Recommendedcourses IntroductiontoComputerGraphics Importantconceptstostartthecourse Wewillrelyoncalculus,linearalgebraandusebasicconceptsofalgorithmsanddatastructures.Students areexpectedtobefamiliarwiththeC++programminglanguagethatisusedintheprogramming assignments. LearningOutcomes Bytheendofthecourse,thestudentmustbeableto: •Recognizeandunderstandthephysicalquantitiesoflighttransportandbeabletoperformbasiccomputationsusing pencil+paper Advancedcomputergraphics Page1/2"}
{"pack_id": "french_pack", "section_title": "Advanced computer graphics", "page": 170, "chunk_id": "french_pack_170_0", "content": "170 2020-2021COURSEBOOKLET •Explainarangeofsurfaceandsubsurfacematerialmodels •ExplaintherenderingandradiativetransferequationandshowhowtoconstructMonteCarlomethodstosolvethem •DesignandimplementanadvancedrenderingsystembasedonMonteCarlointegration •Assess/Evaluatetheperformanceandconceptuallimitsoftheimplementedsimulationcode Teachingmethods Lectures,interactivedemos,theoryandprogrammingexercises,programmingproject,projecttutoring Expectedstudentactivities Thestudentareexpectedtostudytheprovidedreadingmaterialandactivelyparticipateinclass.Theyshouldprepare andresolvetheexercises,prepareandcarryouttheprogrammingproject. Assessmentmethods Intermediateassignments(60%),finalproject(40%) Supervision Officehours Yes Assistants Yes Forum Yes Resources Bibliography Alistofbookswillbeprovidedatthebeginningoftheclass Ressourcesenbibliothèque •PhysicallyBasedRendering:FromTheorytoImplementation/Pharr Notes/Handbook Slidesandonlineresourceswillbeprovidedinclass Websites •https://rgl.epfl.ch/courses/ACG18 Advancedcomputergraphics Page2/2"}
{"pack_id": "french_pack", "section_title": "Advanced multiprocessor architecture", "page": 171, "chunk_id": "french_pack_171_0", "content": "171 2020-2021COURSEBOOKLET CS-471 Advanced multiprocessor architecture Cursus Sem. Type Language English Cybersecurity MA1,MA3 Opt. Credits 6 Génieélectriqueetélectronique MA1,MA3 Opt. Session Winter Semester Fall Informatique MA1,MA3 Opt. Exam Duringthe SCmasterEPFL MA1,MA3 Opt. semester Workload 180h Scienceeting.computationelles MA1,MA3 Opt. Weeks 14 Hours 4weekly Lecture 4weekly Numberof positions Remark Coursbiennaldonnéuneannéesurdeuxlesannéesimpaires(pasdonnéen2020-21 Summary Multiprocessorsarenowthedefactobuildingblocksforallcomputersystems.Thiscoursewillbuilduponthebasic conceptsofferedinComputerArchitectureItocoverthearchitectureandorganizationofmodernmultiprocessorsfrom mobileandembeddedplatformstoservers,datacentersandcloudcomputingplatforms. Content Introductiontomultiprocessorsystems,parallelprogrammingmodelsincludingPthreads,MPI,hardwareandsoftware transactionalmemory,synchronizationprimitives,memoryconsistencymdels,cachecoherence,on-chipsharedcache architectures,on-chipinterconnects,multi-chipinterconnects,multi-chipbus-basedandgeneral-purpose interconnect-basedshared-memorysystems,clusters. Thecoursewillincludeweeklyreadings,discussions,andstudentreviewsandreportsonpublications(besidesthetext book)ofseminalandrecentcontributionstothefieldofcomputerarchitecture.Studentreviews,classdiscussions,and anindependentresearchprojectwillaccountforasignificantfractionofthegrade.Feedbackonperformancewillbe givenonlyuponrequestbyastudent.Therewillbenorecitationclasses. Thecoursewillalsoincludeanindependentandoriginalresearchproject,inwhichstudentsstudy,improve,and evaluatemultiprocessorinnovationsusingasoftwaresimulationinfrastructure.Therewillbealistofprojectideasgiven out,butstudentscansuggestandworkontheirownideaswithpotentialsforadvancingthestateoftheart. LearningPrerequisites Recommendedcourses ComputerArchitectureI,basicC/C++systemsprogramming. LearningOutcomes Bytheendofthecourse,thestudentmustbeableto: •Designandevaluateparallelcomputerorganizations •Developparallelprogramsandbenchmarksforparallelsystems •Designthebasiccomponentsofmodernparallelsystemsincludingmultipleprocessors,cachehierarchiesand networks •Quantifyperformancemetricsforparallelsystems •Interpretandcritiqueresearchpapers •Plan,proposeandconductaresearchprojectempirically •Presentresearchcontributions Advancedmultiprocessorarchitecture Page1/2"}
{"pack_id": "french_pack", "section_title": "Advanced multiprocessor architecture", "page": 172, "chunk_id": "french_pack_172_0", "content": "172 2020-2021COURSEBOOKLET Teachingmethods Lectures,homeworks,andaresearchproject Assessmentmethods Continuouscontrol: Homework:30%,Project15%,Midtermtest:20%, Endtermtest:35% Resources Websites •https://parsa.epfl.ch/course-info/cs471/ Advancedmultiprocessorarchitecture Page2/2"}
{"pack_id": "french_pack", "section_title": "Advanced probability and applications", "page": 173, "chunk_id": "french_pack_173_0", "content": "173 2020-2021COURSEBOOKLET COM-417 Advanced probability and applications LévêqueOlivier Cursus Sem. Type Language English Cybersecurity MA2,MA4 Opt. Credits 6 DataScience MA2,MA4 Opt. Session Summer Semester Spring Génieélectrique Opt. Exam Written Informatiqueetcommunications Obl. Workload 180h Weeks 14 Informatique MA2,MA4 Opt. Hours 5weekly MineurenDatascience E Opt. Lecture 3weekly Robotique,contrôleetsystèmesintelligents Opt. Exercises 2weekly Numberof SCmasterEPFL MA2,MA4 Obl. positions Summary Inthiscourse,variousaspectsofprobabilitytheoryareconsidered.Thefirstpartisdevotedtothemaintheoremsinthe field(lawoflargenumbers,centrallimittheorem,concentrationinequalities),whilethesecondpartfocusesonthetheory ofmartingalesindiscretetime. Content -sigma-fields,randomvariables -probabilitymeasures,distributions -independence,convolution -expectation,characteristicfunction -randomvectorsandGaussianrandomvectors -inequalities,convergencesofsequencesofrandomvariables -lawsoflargenumbers,applicationsandextensions -convergenceindistribution,centrallimittheoremandapplications -momentsandCarleman'stheorem -concentrationinequalities -conditionalexpectation -martingales,stoppingtimes -martingaleconvergencetheorems Keywords probabilitytheory,measuretheory,martingales,convergencetheorems LearningPrerequisites Requiredcourses Basicprobabilitycourse Calculuscourses Recommendedcourses complexanalysis Importantconceptstostartthecourse ThiscourseisNOTanintroductorycourseonprobability:thestudentsshouldhaveagoodunderstanding andpracticeofbasicprobabilityconceptssuchas:distribution,expectation,variance,independence, conditionalprobability. Thestudentsshouldalsobeateasewithcalculus.Complexanalyisisisaplus,butisnotrequired. Ontheotherhand,nopriorbackgroundonmeasuretheoryisneededforthiscourse:wewillgothroughthe Advancedprobabilityandapplications Page1/2"}
{"pack_id": "french_pack", "section_title": "Advanced probability and applications", "page": 174, "chunk_id": "french_pack_174_0", "content": "174 2020-2021COURSEBOOKLET basicconceptsonebyoneatthebeginning. LearningOutcomes Bytheendofthecourse,thestudentmustbeableto: •understandthemainideasattheheartofprobabilitytheory Teachingmethods Excathedralectures+exercisesessions Expectedstudentactivities activeparticipationtoexercisesessions Assessmentmethods 5gradedhomeworks,worth5%each;total25% finalexam75% Resources Bibliography SheldonM.Ross,ErolA.Pekoz, ASecondCourseinProbability,1stedition, www.ProbabilityBookstore.com,2007. JeffreyS.Rosenthal,AFirstLookatRigorousProbabilityTheory,2ndedition,WorldScientific,2006. GeoffreyR.Grimmett,DavidR.Stirzaker,ProbabilityandRandomProcesses,3rdedition,OxfordUniversity Press,2001. RichardDurrett,Probability:TheoryandExamples,4thedition,CambridgeUniversityPress,2010. PatrickBillingsley,ProbabilityandMeasure,3rdedition,Wiley,1995. Ressourcesenbibliothèque •SheldonM.Ross,ErolA.Pekoz,ASecondCourseinProbability,1sted •JeffreyS.Rosenthal,AFirstLookatRigorousProbabilityTheory,2nded •RichardDurrett,Probability:TheoryandExamples,4thed •PatrickBillingsley,ProbabilityandMeasure,3rded Notes/Handbook availableonthecoursewebsite Websites •https://moodle.epfl.ch/course/view.php?id=14557 Prerequisitefor Advancedclassesrequiringagoodknowledgeofprobability Advancedprobabilityandapplications Page2/2"}
{"pack_id": "french_pack", "section_title": "Advanced topics on privacy enhancing technologies", "page": 175, "chunk_id": "french_pack_175_0", "content": "175 2020-2021COURSEBOOKLET CS-523 Advanced topics on privacy enhancing technologies TroncosoCarmela Cursus Sem. Type Language English Cybersecurity MA2,MA4 Opt. Credits 7 DataScience MA2,MA4 Opt. Session Summer Semester Spring Informatique MA2,MA4 Opt. Exam Written SCmasterEPFL MA2,MA4 Opt. Workload 210h Weeks 14 Hours 6weekly Lecture 3weekly Exercises 1weekly Project 2weekly Numberof positions Summary Thisadvancedcoursewillprovidestudentswiththeknowledgetotacklethedesignofprivacy-preservingICTsystems. Studentswilllearnaboutexistingtechnologiestoprotectprivacy,andhowtoevaluatetheprotectiontheyprovide. Content Thecoursewillcoverthefollowingtopics: • Privacydefinitionsandconcepts. • Privacy-preservingcryptographicsolutions:anonymouscredentials,zero-knowledgeproofs,securemulti-party computation,homomorphicencryption,Privateinformationretrieval(PIR),ObliviousRAM(ORAM) • Anonymizationanddatahiding:generalization,differentialprivacy,etc • Machinelearningandprivacy • Protectionofmetadata:anonymouscommunicationssystems,locationprivacy,censorpshipresistance. • Onlinetrackingandcountermeasures • Privacyengineering:designandevaluation(evaluationmetricsandnotions) • Legalaspectsofprivacy Keywords Privacy,anonymity,homomorphicencryption,securemulti-patycomputation,anonymouscredentials,ethics LearningPrerequisites Requiredcourses COM-402InformationSecurityandPrivacy COM-301ComputerSecurity Advancedtopicsonprivacyenhancingtechnologies Page1/2"}
{"pack_id": "french_pack", "section_title": "Advanced topics on privacy enhancing technologies", "page": 176, "chunk_id": "french_pack_176_0", "content": "176 2020-2021COURSEBOOKLET Recommendedcourses COM-401Cryptography Importantconceptstostartthecourse Basicprogrammingskills;basicsofprobabilitiesandstatistics;basicsofcryptography LearningOutcomes Bytheendofthecourse,thestudentmustbeableto: •Selectappropriatelyprivacymechanisms •Developprivacytechnologies •Assess/Evaluateprivacyprotection •Reasonaboutprivacyconcerns Teachingmethods Lecturesandwrittenexercisestodeepenunderstandingofconcepts Programming-orientedassignmentstopracticeuseofprivacytechnologies Expectedstudentactivities Participationinthelectures.Activeparticipationisencouraged. Participationinexercisesessionandcompletetheexercisesregularly Completionofprogrammingassignments Assessmentmethods Finalexam Supervision Officehours Yes Assistants Yes Forum Yes Advancedtopicsonprivacyenhancingtechnologies Page2/2"}
{"pack_id": "french_pack", "section_title": "Applied biostatisticss", "page": 177, "chunk_id": "french_pack_177_0", "content": "177 2020-2021COURSEBOOKLET MATH-493 Applied biostatistics GoldsteinDarlene Cursus Sem. Type Language English Bioingénierie MA4 Opt. Credits 5 Cybersecurity MA2,MA4 Opt. Session Summer Semester Spring DataScience MA2,MA4 Opt. Exam Duringthe Géniecivil&environnement Opt. semester Workload 150h Informatique MA2,MA4 Opt. Weeks 14 Ing.-math MA2,MA4 Opt. Hours 4weekly Ingénieriedessciencesduvivant MA2,MA4 Opt. Lecture 2weekly Exercises 2weekly Mathématicien MA2 Opt. Numberof MineurenDatascience E Opt. positions SCmasterEPFL MA2,MA4 Opt. Sciencesduvivant MA4 Opt. Summary Thiscoursecoverstopicsinappliedbiostatistics,withanemphasisonpracticalaspectsofdataanalysisusingR statisticalsoftware.Topicsincludetypesofstudiesandtheirdesignandanalysis,highdimensionaldataanalysis (genetic/genomic)andothertopicsastimeandinterestpermit. Content •Typesofstudies •Designandanalysisofstudies •Rstatisticalsoftware •Reproducibleresearchtechniquesandtools •Reportwriting •Exploratorydataanalysis •Liniearmodeling(regression,anova) •Generalizedlinearmodeling(logistic,Poission) •Survivalanalysis •Discretedataanalysis •Meta-analysis •Highdimensionaldataanalysis(genetics/genomicsapplications) •Additionaltopicsastimeandinterestpermit Keywords Dataanalysis,reproducibleresearch,statisticalmethods,R,biostatisticaldataanalysis,statisticaldataanalysis LearningPrerequisites Requiredcourses Thiscoursewillbeverydifficultforstudentswithnopreviouscourseorexperiencewithstatistics.Previous experiencewithRisneitherassumednorrequired. Recommendedcourses Appliedbiostatistics Page1/2"}
{"pack_id": "french_pack", "section_title": "Applied biostatisticss", "page": 178, "chunk_id": "french_pack_178_0", "content": "178 2020-2021COURSEBOOKLET Undergraduatestatisticscourse Importantconceptstostartthecourse Itisusefultoreviewstatisticalhypothesistesting. LearningOutcomes Bytheendofthecourse,thestudentmustbeableto: •Interpretanalysisresults •Justifyanalysisplan •Plananalysisforagivendataset •Analyzevarioustypesofbiostatisticaldata •Synthesizeanalysisintoawrittenreport •Reportplanofanalysisandresultsobtained Transversalskills •Writeascientificortechnicalreport. •Assessone'sownlevelofskillacquisition,andplantheiron-goinglearninggoals. •Takefeedback(critique)andrespondinanappropriatemanner. •Useaworkmethodologyappropriatetothetask. Teachingmethods LecturesandpracticalexercisesusingR.Typically,eachweekcoversananalysismethodinthelectureandthenthe correspondingexercisesessionconsistsofanRproacticalshowinghowtoimplementthemethodsusingR.Ineach practical,studentsuseRtocarryoutanalysesoftherelevantdatatypeforthatweek. Expectedstudentactivities Studentsareexpectedtoparticipateintheirlearningbyattendinglecturesandpracticalexercisesessions,posing questions,proposingtopicsofinterest,peerreviewingofpreliminaryreports,andinteractingwithteachingstaffregarding theirunderstandingofcoursematerial.Inaddition,therewillbeanumberofshortactivitiesinclassaimedatimproving Englishforreportwriting. Assessmentmethods Evaluationisbasedonwrittenreportsofprojectsanalyzingbiostatisticaldata. Danslecasdel’art.3al.5duRèglementdesection,l’enseignantdécidedelaformedel’examenqu’ilcommuniqueaux étudiantsconcernés. Appliedbiostatistics Page2/2"}
{"pack_id": "french_pack", "section_title": "Applied data analysis", "page": 179, "chunk_id": "french_pack_179_0", "content": "179 2020-2021COURSEBOOKLET CS-401 Applied data analysis WestRobert Cursus Sem. Type Language English Bioengineering MA3 Opt. Credits 6 Civil&EnvironmentalEngineering Opt. Session Winter Semester Fall ComputationalNeurosciencesminor H Opt. Exam Written ComputationalscienceandEngineering MA1,MA3 Opt. Workload 180h Weeks 14 Computerscience MA1,MA3 Opt. Hours 4weekly Cybersecurity MA1,MA3 Opt. Lecture 2weekly DataScience MA1,MA3 Obl. Project 2weekly Numberof Datascienceminor H Opt. positions DigitalHumanities MA1,MA3 Obl. ElectricalEngineering Opt. ElectricalandElectronicalEngineering MA1,MA3 Opt. EnergyScienceandTechnology MA1,MA3 Opt. Financialengineering MA1,MA3 Opt. InternetofThingsminor H Opt. LifeSciencesEngineering MA1,MA3 Opt. Managmt,techetentr. MA1,MA3 Opt. MineurSTASChine H Opt. SCmasterEPFL MA1,MA3 Opt. UNIL-Sciencesforensiques H Obl. Summary Thiscourseteachesthebasictechniques,methodologies,andpracticalskillsrequiredtodrawmeaningfulinsightsfroma varietyofdata,withthehelpofthemostacclaimedsoftwaretoolsinthedatascienceworld:pandas,scikit-learn,Spark, etc. Content Thankstoanewbreedofsoftwaretoolsthatallowstoeasilyprocessandanalyzedataatscale,wearenowableto extractinvaluableinsightsfromthevastamountofdatagenerateddaily.Asaresult,boththebusinessandscientific worldareundergoingarevolutionwhichisfueledbyoneofthemostsoughtafterjobprofiles:thedatascientist. Thiscoursecoversthefundamentalstepsofthedatasciencepipeline: DataWrangling •Dataacqusition(scraping,crawling,parsing,etc.) •Datamanipulation,arrayprogramming,dataframes •Themanysourcesofdataproblems(andhowtofixthem):missingdata,incorrectdata,inconsistentrepresentations •Schemaalignment,datareconciliation •Dataqualitytestingwithcrowdsourcing DataInterpretation •Statsinpractice(distributionfitting,statisticalsignificance,etc.) •Workingwith\"founddata\"(designofobservationalstudies,regressionanalysis) •Machinelearninginpractice(supervisedandunsupervised,featureengineering,moredatavs.advancedalgorithms, curseofdimensionality,etc.) Applieddataanalysis Page1/3"}
{"pack_id": "french_pack", "section_title": "Applied data analysis", "page": 180, "chunk_id": "french_pack_180_0", "content": "180 2020-2021COURSEBOOKLET •Textmining:vectorspacemodel,topicmodels,wordembedding •Socialnetworkanalysis(influencers,communitydetection,etc.) DataVisualization •Introductiontodifferentplottypes(1,2,and3variables),layoutbestpractices,networkandgeographicaldata •Visualizationtodiagnosedataproblems,scalingvisualizationtolargedatasets,visualizinguncertaindata Reporting •Resultsreporting,infographics •Howtopublishreproducibleresults •Anonymiziation,ethicalconcerns Thestudentswilllearnthetechniquesduringtheex-cathedralecturesandwillbeintroduced,inthelabsessions,tothe softwaretoolsrequiredtocompletethehomeworkassignmentsandthein-classquizzes. Inparallel,thestudentswillembarkonasemester-longproject,splitinagileteamsof3-4students.Theprojectconsists oftwoparts:(1)replicationofadataanalysispipelinefromapublishedscientificpaper,(2)a\"free-style\"component wherestudentsproposeandexecutetheirownextensionofpart1.Theoutcomeofthisteameffortwillbeaproject portfoliothatwillbemadepublic(andavailableasopensource). Attheendofthesemester,studentswillalsotakea3-hourfinalexaminaclassroomwiththeirowncomputer,where theywillbeaskedtocompleteadataanalysispipeline(bothwithcodeandextensivecomments)onadatasettheyhave neverworkedwithbefore. Keywords datascience,dataanalysis,datamining,machinelearning LearningPrerequisites Requiredcourses Thestudentmusthavepassedanintroductiontodatabasescourse,ORacourseinprobability&statistics, ORtwoseparatecoursesthatincludeprogrammingprojects. Recommendedcourses •CS-423DistributedInformationSystems •CS-433MachineLearning Importantconceptstostartthecourse Algorithms,(object-oriented)programming,basicprobabilityandstatistics LearningOutcomes Bytheendofthecourse,thestudentmustbeableto: •Constructacoherentunderstandingofthetechniquesandsoftwaretoolsrequiredtoperformthefundamentalsteps oftheDataSciencepipeline •Performdataacquisition(dataformats,datasetfusion,Webscrapers,RESTAPIs,opendata,bigdataplatforms,etc.) •Performdatawrangling(fixingmissingandincorrectdata,datareconciliation,dataqualityassessments,etc.) Applieddataanalysis Page2/3"}
{"pack_id": "french_pack", "section_title": "Applied data analysis", "page": 181, "chunk_id": "french_pack_181_0", "content": "181 2020-2021COURSEBOOKLET •Performdatainterpretation(statistics,knowledgeextraction,criticalthinking,teamdiscussions,ad-hocvisualizations, etc.) •Performresultdissemination(reporting,visualizations,publishingreproducibleresults,ethicalconcerns,etc.) Transversalskills •Evaluateone'sownperformanceintheteam,receiveandrespondappropriatelytofeedback. •Givefeedback(critique)inanappropriatefashion. •Demonstratethecapacityforcriticalthinking •Writeascientificortechnicalreport. Teachingmethods •Physicalin-classrecitationsandlabsessions •Homeworkassignments •In-classquizzes •Courseproject Expectedstudentactivities Studentsareexpectedto: •Attendthelecturesandlabsessions •Complete2-3homeworkassignments •Complete3in-classquizzes(heldduringlabsessions) •Conducttheclassproject •Read/watchthepertinentmaterialbeforealecture •Engageduringtheclass,andpresenttheirresultsinfrontoftheothercolleagues Assessmentmethods •33%continuousassessmentduringthesemester(homeworkandin-classquizzes) •33%finalexam,dataanalysistaskonacomputer(3hours) •33%finalproject,doneingroupsof3 Supervision Others http://ada.epfl.ch Applieddataanalysis Page3/3"}
{"pack_id": "french_pack", "section_title": "Artificial neural networks", "page": 182, "chunk_id": "french_pack_182_0", "content": "182 2020-2021COURSEBOOKLET CS-456 Artificial neural networks GerstnerWulfram Cursus Sem. Type Language English Biocomputingminor E Opt. Credits 5 Bioengineering MA4 Opt. Session Summer Semester Spring ComputationalNeurosciencesminor E Opt. Exam Written ComputationalscienceandEngineering MA2,MA4 Opt. Workload 150h Weeks 14 Computerscience MA2,MA4 Opt. Hours 4weekly Cybersecurity MA2,MA4 Opt. Lecture 2weekly DataScience MA2,MA4 Opt. Exercises 2weekly Numberof DigitalHumanities MA2,MA4 Opt. positions ElectricalEngineering Opt. Financialengineering MA2,MA4 Opt. LifeSciencesEngineering MA2,MA4 Opt. Robotics,ControlandIntelligentSystems Opt. SCmasterEPFL MA2,MA4 Opt. Sciencesduvivant MA4 Opt. Summary Since2010approachesindeeplearninghaverevolutionizedfieldsasdiverseascomputervision,machinelearning,or artificialintelligence.Thiscoursegivesasystematicintroductionintothemainmodelsofdeepartificialneuralnetworks: SupervisedLearningandReinforcementLearning. Content •Simpleperceptronsforclassification •ReinforcementLearning1:BellmanequationandSARSA •ReinforcementLearning2:variantsofSARSA,Q-learning,n-step-TDlearning •ReinforcementLearning3:Policygradient •DeepNetworks1:BackPropandMultilayerPerceptrons •DeepNetworks2:RegularizationandTricksoftheTradeindeeplearning •DeepNetworks3.Errorlandscapeandoptimizationmethodsfordeepnetworks •DeepNetworks4.StatisticalClassificationbydeepnetworks •Application1:Convolutionalnetworks •Application2:Sequencepredictionandrecurrentnetworks •Deepreinforcementlearning:Actor-Criticnetworks •Deepreinforcementlearning:applications Keywords Deeplearning,artificialneuralnetworks,reinforcementlearning,TDlearning,SARSA, LearningPrerequisites Artificialneuralnetworks Page1/3"}
{"pack_id": "french_pack", "section_title": "Artificial neural networks", "page": 183, "chunk_id": "french_pack_183_0", "content": "183 2020-2021COURSEBOOKLET Requiredcourses CS433MachineLearning(orequivalent) Calculus,LinearAlgebra(atthelevelequivalenttofirst2yearsofEPFLinSTIorIC,suchasComputer Science,PhysicsorElectricalEngineering) Recommendedcourses stochasticprocesses optimization Importantconceptstostartthecourse •Regularizationinmachinelearning, •TrainingbaseversusTestbase,crossvalidation. •Gradientdescent.Stochasticgradientdescent. •Expectation,PoissonProcess,BernoulliProcess. LearningOutcomes •Applylearningindeepnetworkstorealdata •Assess/Evaluateperformanceoflearningalgorithms •Elaboraterelationsbetweendifferentmathematicalconceptsoflearning •Judgelimitationsofalgorithms •Proposealgorithmsandmodelsforlearningindeepnetworks •ApplyReinforcementLearning Transversalskills •Continuetoworkthroughdifficultiesorinitialfailuretofindoptimalsolutions. •Accessandevaluateappropriatesourcesofinformation. •Writeascientificortechnicalreport. •Managepriorities. Teachingmethods excathedralecturesand2miniprojects.Everyweektheexcathedralecturesareinterruptedforashortin-classexercise whichisthendiscussedinclassroombeforethelecturecontinues. Additionalexercisesaregivenashomework.Forthe exercisesessionstwotimeslotsof45minuteswillbeoffered,andstudentswillsignupforoneofthetwo. Expectedstudentactivities workonminiproject solveallexercises attendalllecturesandtakenotesduringlecture,participateinquizzes. Ifyoucannotattendalecture,thenyoumustreadtherecommendedbookchapters Assessmentmethods writtenexam(70percent)andminiproject(30percent) Supervision Officehours Yes Artificialneuralnetworks Page2/3"}
{"pack_id": "french_pack", "section_title": "Artificial neural networks", "page": 184, "chunk_id": "french_pack_184_0", "content": "184 2020-2021COURSEBOOKLET Assistants Yes Forum Yes Others TAsareavailableduringexercisesessions. Everyweekoneoftheexercisesisrunas'integratedexercise'duringthelecture. Choicebetweentwodifferentexercisesessions Resources Bibliography • Textbook:DeepLearningbyGoodfellow,Bengio,Courville(MITPress) • Textbook:ReinforcementLearningbySuttonandBarto(MITPress) Pdfsofthepreprintversionforbothbooksareavailbleonline Ressourcesenbibliothèque •DeepLearningbyGoodfellow,Bengio,Courville •ReinforcementLearningbySuttonandBarto Artificialneuralnetworks Page3/3"}
{"pack_id": "french_pack", "section_title": "Automatic speech processing", "page": 185, "chunk_id": "french_pack_185_0", "content": "185 2020-2021COURSEBOOKLET EE-554 Automatic speech processing BourlardHervé Cursus Sem. Type Language English Computerscience MA1,MA3 Opt. Credits 3 Cybersecurity MA1,MA3 Opt. Session Winter Semester Fall DataScience MA1,MA3 Opt. Exam Written DigitalHumanities MA1,MA3 Opt. Workload 90h Weeks 14 ElectricalandElectronicalEngineering MA1,MA3 Opt. Hours 3weekly SCmasterEPFL MA1,MA3 Opt. Lecture 2weekly Exercises 1weekly Numberof positions Summary Thegoalofthiscourseistoprovidethestudentswiththemainformalisms,modelsandalgorithmsrequiredforthe implementationofadvancedspeechprocessingapplications(involving,amongothers,speechcoding,speech analysis/synthesis,andspeechrecognition). Content 1.Introduction:Speechprocessingtasks,languageengineeringapplications. 2.BasicTools:Analysisandspectralpropertiesofthespeechsignal,linearpredictionalgorithms,statisticalpattern recognition,dynamicprogramming. 3.SpeechCoding:Humanhearingproperties,quantizationtheory,speechcodinginthetemporalandfrequency domains. 4.SpeechSynthesis:Morpho-syntacticanalysis,phonetictranscription,prosody,speechsynthesismodels. 5.AutomaticSpeechRecognition:TemporalpatternmatchingandDynamicTimeWarping(DTW)algorithms,speech recognitionsystemsbasedonHiddenMarkovModels(HMMs). 6.Speakerrecognitionandspeakerverification:Formalism,hypothesistesting,HMMbasedspeakerverification. 7.LinguisticEngineering:state-of-the-artandtypicalapplications Keywords speechprocessing,speechcoding,speechanalysis/synthesis,automaticspeechrecognition,speakeridentification, text-to-speech LearningPrerequisites Requiredcourses Basisinlinearalgebra,signalprocessing(FFT),andstatistics Importantconceptstostartthecourse Basicknowledgeinsignalprocessing,linearalgebra,statisticsandstochasticprocesses. LearningOutcomes Bytheendofthecourse,thestudentmustbeableto: Automaticspeechprocessing Page1/2"}
{"pack_id": "french_pack", "section_title": "Automatic speech processing", "page": 186, "chunk_id": "french_pack_186_0", "content": "186 2020-2021COURSEBOOKLET •speechsignalproperties •Exploitthosepropertiestospeechcodign,speechsynthesis,andspeechrecognition Transversalskills •Useaworkmethodologyappropriatetothetask. •Accessandevaluateappropriatesourcesofinformation. •UsebothgeneralanddomainspecificITresourcesandtools Teachingmethods Lecture+labexercises Expectedstudentactivities Attendingcoursesandlabexercises.Readadditionalpapersandcontinuelabexercisesathomeifnecessary.Regulary answerlistofquestionsforfeedback. Assessmentmethods Writtenexamwithoutnotes Resources Ressourcesenbibliothèque •Traitementdelaparole/Boite Automaticspeechprocessing Page2/2"}
{"pack_id": "french_pack", "section_title": "Biological modeling of neural networks", "page": 187, "chunk_id": "french_pack_187_0", "content": "187 2020-2021COURSEBOOKLET BIO-465 Biological modeling of neural networks GerstnerWulfram Cursus Sem. Type Language English Auditeursenligne E Obl. Credits 4 Biocomputingminor E Opt. Session Summer Semester Spring Biomedicaltechnologiesminor E Opt. Exam Written ComputationalNeurosciencesminor E Opt. Workload 120h Weeks 14 ComputationalscienceandEngineering MA2,MA4 Opt. Hours 4weekly Computerscience MA2,MA4 Opt. Lecture 2weekly Cybersecurity MA2,MA4 Opt. Exercises 2weekly Numberof DataScience MA2,MA4 Opt. positions ElectricalEngineering Opt. ElectricalandElectronicalEngineering MA2,MA4 Opt. LifeSciencesEngineering MA2,MA4 Opt. Neuroprostheticsminor E Opt. Neuroscience Opt. SCmasterEPFL MA2,MA4 Opt. Sciencesduvivant MA4 Opt. Summary Inthiscoursewestudymathematicalmodelsofneuronsandneuronalnetworksinthecontextofbiologyandestablish linkstomodelsofcognition. Content I.Modelsofsingleneurons1.Introduction:brainvscomputerandafirstsimpleneuronmodel2.Modelsonthelevelof ioncurrent(Hodgkin-Huxleymodel)3./4. Two-dimensionalmodelsandphasespaceanalysisII.NeuronalDynamicsof Cognition 5./6.AssociativeMemoryandAttractorDynamics(HopfieldModel) 7.NeuronalPopulationsandnetworks8. Continuummodelsandperception9.CompetitionandmodelsofDecisionmakingIII.Noiseandtheneuralcode10. Noiseandvariabilityofspiketrains(pointprocesses,renewalprocess,intervaldistribution)11:Varianceofmembrane potentialsand SpikeResponseModelsIV.PlasticityandLearning12. SynapticPlasticityandLong-termpotentiation andLearning(Hebbrule,mathematicalformulation)13.Summary:FittingNeuralModelstoData Keywords neuralnetworks,neuronaldynamics,computationalneuroscience,mathematicalmodelinginbiology,applied mathematics,brain,cognition,neurons,memory,learning,plasticity LearningPrerequisites Requiredcourses undergraduatemathatthelevelofelectricalengineeringorphysicsmajors undergraduatephysics. Recommendedcourses AnalysisI-III,linearalgebra,probabilityandstatistics ForSSVstudents:DynamicalSystemsTheoryforEngineersor\"MathematicalandComputationalModels inBiology\" Importantconceptstostartthecourse Biologicalmodelingofneuralnetworks Page1/3"}
{"pack_id": "french_pack", "section_title": "Biological modeling of neural networks", "page": 188, "chunk_id": "french_pack_188_0", "content": "188 2020-2021COURSEBOOKLET Differentialequations,stochasticprocesses, LearningOutcomes Bytheendofthecourse,thestudentmustbeableto: •Analyzetwo-dimensionalmodelsinthephaseplane •Solvelinearone-dimensionaldifferentialequations •Developasimplifiedmodelbyseparationoftimescales •Analyzeconnectednetworksinthemean-fieldlimit •Formulatestochasticmodelsofbiologicalphenomena •Formalizebiologicalfactsintomathematicalmodels •Provestabilityandconvergence •Applymodelconceptsinsimulations •Predictoutcomeofdynamics •Describeneuronalphenomena Transversalskills •Planandcarryoutactivitiesinawaywhichmakesoptimaluseofavailabletimeandotherresources. •Collectdata. •Writeascientificortechnicalreport. Teachingmethods Classroomteaching,exercisesandminiproject.Oneofthetwoexercisehoursisintegratedintothelectures. Expectedstudentactivities -participateinALLin-classexercises. -doallhomeworkexercises(paper-and-pencil) -studyvideolecturesifyoumissaclass -studysuggestedtextbooksectionsforin-depthunderstandingofmaterial -submitminiprojects Assessmentmethods Writtenexam(70%)&miniproject(30%) Supervision Officehours No Assistants Yes Forum Yes Others Theteacherisavailableduringthebreaksoftheclass. Someexercisesareintegratedinclassinthepresenceoftheteacherandtheteaching assistants. Resources Bibliography Gerstner,Kistler,Naud,Pansinski:NeuronalDynamics,CambridgeUniv.Press2014 Ressourcesenbibliothèque Biologicalmodelingofneuralnetworks Page2/3"}
{"pack_id": "french_pack", "section_title": "Biological modeling of neural networks", "page": 189, "chunk_id": "french_pack_189_0", "content": "189 2020-2021COURSEBOOKLET •NeuronalDynamics/Gerstner Notes/Handbook Thetextbookisonlineat:http://neuronaldynamics.epfl.ch/ Videos •http://lcn.epfl.ch/~gerstner/NeuronalDynamics-MOOC2.html Biologicalmodelingofneuralnetworks Page3/3"}
{"pack_id": "french_pack", "section_title": "Biomedical signal processing", "page": 190, "chunk_id": "french_pack_190_0", "content": "190 2020-2021COURSEBOOKLET EE-512 Biomedical signal processing VesinJean-Marc Cursus Sem. Type Language English Bioengineering MA3 Opt. Credits 6 Biomedicaltechnologiesminor H Opt. Session Winter Semester Fall Computerscience MA1,MA3 Opt. Exam Written Cybersecurity MA1,MA3 Opt. Workload 180h Weeks 14 ElectricalandElectronicalEngineering MA1,MA3 Opt. Hours 6weekly LifeSciencesEngineering MA1,MA3 Opt. Lecture 4weekly SCmasterEPFL MA1,MA3 Opt. Project 2weekly Numberof positions Summary Thegoalofthiscourseistointroducethetechniquesmostcommonlyusedfortheanalysisofbiomedicalsignals,andto presentconcreteexamplesoftheirapplicationfordiagnosispurposes. Content 1.Generalitiesonbiomedicalsignalprocessing 2.Digitalsignalprocessing-basics •sampling •Fouriertransform •filtering •stochasticsignalscorrelation,andpwoerspectraldensity 3.Time-frequencyanalysis •short-termFouriertransform •time-frequencydistributions,Cohen'sclass •wavelettransform 4.Linearmodeling • autoregressivemodels •linearprediction • parametricspectralestimation •criteriaformodelselection 5.Adaptivefiltering • adaptiveprediction •adaptiveestimationoftransfertfunctions • adaptiveinterferencecancellation 6.Miscellaneous • polynomialmodels •singularvaluedecomposition •principalcomponentanalysis Keywords Biomedicalsignalprocessing Page1/2"}
{"pack_id": "french_pack", "section_title": "Biomedical signal processing", "page": 191, "chunk_id": "french_pack_191_0", "content": "191 2020-2021COURSEBOOKLET signalprocessing,biomedicalengineering,signalmodeling,spectralanalysis,adaptivefiltering LearningPrerequisites Recommendedcourses SignalprocessingfortelecommunicationsCOM-303 SignalprocessingEE-350 Importantconceptstostartthecourse basicsofdiscrete-timesignalanalysis Teachingmethods lectures,labsessionsusingMatlab Assessmentmethods 1pointforlab/exercisesessionsreports 2exams:endofNovember2points-finalexam3points Supervision Officehours Yes Assistants Yes Biomedicalsignalprocessing Page2/2"}
{"pack_id": "french_pack", "section_title": "Business design for IT services", "page": 192, "chunk_id": "french_pack_192_0", "content": "192 2020-2021COURSEBOOKLET CS-490 Business design for IT services WegmannAlain Cursus Sem. Type Language English Computerscience MA2,MA4 Opt. Credits 3 Cybersecurity MA2,MA4 Opt. Session Summer Semester Spring MineurSTASChine E Opt. Exam Oral SCmasterEPFL MA2,MA4 Opt. Workload 90h Weeks 14 Hours 3weekly Lecture 3weekly Numberof positions Summary Weteachhowto\"design\"abusinessinitiative.Studentsworkingroupsonaprojectoftheirchoice.Wedevelopinsights withbusinessandsystemthinkingliterature.Concretefieldworkoutsideclassandsubstantialreadingsarenecessary. Content Thestudentswork,ingroups,onaproject.They: (1)imagineanewbusinessserviceofferingtodevelop, (2)validatetheirmodelwithrealcustomersandpotentialpartners, (3)analyzetherelevantsegments(competitors,regulators,etc) (4)definetheserviceimplementation,andespeciallythesupporingITservices. (5)validatethefinancialmodel Individually,thestudentshavetoreadthedocumentslistedbelow.Theymakeasynthesisoftheircontents.Theyneed toapplytheconceptspresentedinthesedocumentsoncasestudiesandontheirownproject. Torepresentandanalyzetheirbusinessidea,thestudentsuseTheSeamCanvasaweb-basedandpaper-based businessmodellingtool.ThecourseisbasedontheSEAMmethod. Thiscourserequiresasignificantworkload. Keywords Businessservices,ITservices,businessdesign,innovationinstartups,revolutionaryventuresandcorporateinitiatives, entrepreneurprofiles. Businessdesign,servicedesign,SEAMmodeling(servicemodels,supplier-adopterrelationship,motivationmodels) Segmentation,valuenetworks,PESTLEanalysis,5forces,corecompetency,coopetition,blueocean,transactioncost. Integratedmarketingconcept,SWOTanalysis,strategycanvas. Newtechnologyadoption,crossing-thechasm,decisionmakingunits. Pricingstrategy,cashflowmanagement,break-eventtime Systemsthinking,homeostasis,appreciativesystem. Psychologicaltypes,epistemology,ontology,axiology(ethicsandaesthetics). LearningOutcomes Bytheendofthecourse,thestudentmustbeableto: •Createapreciseanddetaileddescriptionforanewbusinessdesign •Analyzeenvironmentalaswellasorganizationalfactorsinabusinessdesign •Designabusinessmodelindetails(service,value,finance) BusinessdesignforITservices Page1/2"}
{"pack_id": "french_pack", "section_title": "Business design for IT services", "page": 193, "chunk_id": "french_pack_193_0", "content": "193 2020-2021COURSEBOOKLET •Assess/Evaluatealternativebusinessstrategies •Synthesizemultiplemarketingtheories(fromseminalpublications) •Representthekeyconceptsofabusinessdesign(ecosystem,value,finance) •Interpretevidencescollectedthroughextensiveinterviews •Investigateinnovativeviewsofabusinessdesign Transversalskills •Collectdata. •Accessandevaluateappropriatesourcesofinformation. •Writeascientificortechnicalreport. •Makeanoralpresentation. •Summarizeanarticleoratechnicalreport. Teachingmethods Experientiallearning+groupwork Resources Ressourcesenbibliothèque •StrategySafari/Mintzberg •GenericStrategies/Porter •TheOriginandEvolutionofNewBusinesses/Bhide(beingprocessed) • BusinessdesignforITservices Page2/2"}
{"pack_id": "french_pack", "section_title": "Cellular biology and biochemistry for engineers", "page": 194, "chunk_id": "french_pack_194_0", "content": "194 2020-2021COURSEBOOKLET BIO-105 Cellular biology and biochemistry for engineers ZuffereyRomain Cursus Sem. Type Language English Biomedicaltechnologiesminor H Opt. Credits 4 Computerscience MA1,MA3 Opt. Session Winter Semester Fall Cybersecurity MA1,MA3 Opt. Exam Written Neuroprostheticsminor H Opt. Workload 120h Weeks 14 SCmasterEPFL MA1,MA3 Opt. Hours 4weekly Lecture 2weekly Exercises 2weekly Numberof positions Summary Basiccourseinbiochemistryaswellascellularandmolecularbiologyfornon-lifesciencestudentsenrollingatthe MasterorPhDthesislevelfromvariousengineeringdisciplines.Itreviewsessentialnotionsnecessaryforatrainingin biology-relatedengineeringfields. Content Thecoursegivesbasicknowledgeonvariousphenomatakingplacewithinacell,andamongcellswithintissuesand organs.Thecoursegivesanintegratedviewofvariousmolecularmechanisms(ratherinthesecondhalfoftheclass).It shouldthereforeallowengineeringstudentsinvolvedinfutureprojectstouchingonbiomedicalproblemstobetter integratetheconstraintsofabiologicalsystemandtoenablethemtocommunicatewithspecialistsinbothfields. Thiscourseisnotavailabletostudentswhohadalreadytakenbasiccellbiologyorbiochemistryclassesduringtheir BachelorstudiesatEPFLorelsewhere.ThisappliesforexampletothecourseBIO-109\"IntroductiontoLifeSciencesfor InformationSciences\"andMSE212\"Biologyforengineers\" Keywords Thecoursecontainschaptersonthefollowingsubjects: 1.CellsandOrgans 2.Chemicalcomponentsofcells 3.Proteins,Enzymes 4.Energy,Metabolism 5.DNA,Chromosomes,Replication 6.Geneexpression 7.Recombinanttechniques 8.MembraneandTransport 9.Intracellulartrafficking 10.Cytoskeleton 11.Celldivision,Mitosis 12.Genetics,Meiosis 13.Cellcommunication,Signaling 14.Tissue,Tissueregeneration LearningPrerequisites Requiredcourses Bachelordegreeinengineeringorothernon-lifesciencediscipline Recommendedcourses Somebasicknowledgeinchemistrycanhelp,butnotrequired Importantconceptstostartthecourse Cellularbiologyandbiochemistryforengineers Page1/2"}
{"pack_id": "french_pack", "section_title": "Cellular biology and biochemistry for engineers", "page": 195, "chunk_id": "french_pack_195_0", "content": "195 2020-2021COURSEBOOKLET Curiosityabouthowbiologicalsystemswork,willingnesstoacquireacertainamountoffactsanddetails necessarytounderstandanddiscussthevariousmolecularmechanismspresentincellsorrelatedto modernbiology LearningOutcomes Bytheendofthecourse,thestudentmustbeableto: •Describethebasiccomponentsandfunctionsfoundincells •Drawschemesexplainingessentialcellularphenomena •Explainwhicharetheimportantmetabolicpathways •Translateinformationfromgeneticcode •Verifystatementsaboutspecificcellularmechanisms •Integrateknowledgefromdifferentcellularmechanisms Transversalskills •Accessandevaluateappropriatesourcesofinformation. Teachingmethods 2hoursofexcathedra-typeoflecture 2hoursofexercises:theinstructorgivesoutappr.10questionsout(throughMoodleandinthebeginningofthe session).Thequestionshavedifferentformats,andcaninsomecasesjustretrievetheacquiredfacts,inothershavea moreintegrativeproblem-basedlearningapproach. Expectedstudentactivities -reviewregularlythepresentedlectures. -participateactivelyintheexercisesessionswhenthequestionsandproblemsarediscussedaltogether Assessmentmethods -awrittenexamatthewinterexamsession Supervision Officehours Yes Assistants Yes Forum No Others -theteachercanalwaysbereachedthroughEmailorphonetofixaone-to-onediscussion aboutspecificsubjects Resources Bibliography Thelectureisalignedtoselectedchaptersinthefollowingbook(recommendedalthoughnotrequired): \"EssentialCellBioogy\"byBAlbertsetal.,3rdedition,GarlandScienceTaylor&FrancisGroup Ressourcesenbibliothèque •EssentialCellBiology/Alberts Cellularbiologyandbiochemistryforengineers Page2/2"}
{"pack_id": "french_pack", "section_title": "Computational complexity", "page": 196, "chunk_id": "french_pack_196_0", "content": "196 2020-2021COURSEBOOKLET CS-524 Computational complexity Cursus Sem. Type Language English Computerscience MA1,MA3 Opt. Credits 4 Cybersecurity MA1,MA3 Opt. Session Winter Semester Fall DataScience MA1,MA3 Opt. Exam Duringthe SCmasterEPFL MA1,MA3 Opt. semester Workload 120h Weeks 14 Hours 4weekly Lecture 3weekly Exercises 1weekly Numberof positions Remark (pasdonnéen2020-21) Summary Incomputationalcomplexitywestudythecomputationalresourcesneededtosolveproblemsandunderstandthe relationbetweendifferenttypesofcomputation.Thiscourseadvancesthestudentsknowledgeofcomputational complexity,anddevelopanunderstandingoffundamentalopenquestions. Content •Complexityclasses(time,space,nondeterminism) •Booleancircuitsandnonuniformcomputation •Roleofrandomnessincomputation(extractors,pseudo-randomgenerators) •Interactiveproofsandzeroknowledgeproofs •ProbabilisticallycheckableproofsandtheircharacterizationofthecomplexityclassNP(PCPTheorem) •Communicationcomplexity Keywords theoreticalcomputerscience computationalcomplexity LearningPrerequisites Recommendedcourses Theoryofcomputation(CS-251) Algorithms(CS-250) LearningOutcomes Bytheendofthecourse,thestudentmustbeableto: •DemonstrateanunderstandingofcomputationalcomplexityandthePvsNPproblem •Formalizeandanalyzeabstractionsofcomplexscenarios/problems •Expressagoodunderstandingofdifferentconceptsofproofs Computationalcomplexity Page1/2"}
{"pack_id": "french_pack", "section_title": "Computational complexity", "page": 197, "chunk_id": "french_pack_197_0", "content": "197 2020-2021COURSEBOOKLET •Provestatementsthataresimilartothosetaughtinthecourse •Useandunderstandtheroleofrandomnessincomputation •IllustrateabasicunderstandingofprobabilisticallycheckableproofsandtheircharacterizationoftheclassNP(the PCP-Theorem) •Explainrecentexcitingdevelopmentsintheoreticalcomputerscience •Comparedifferentmodelsofcomputation Transversalskills •Demonstratethecapacityforcriticalthinking •Summarizeanarticleoratechnicalreport. Teachingmethods Lecturingandexercises Expectedstudentactivities Activelyattendinglecturesandexercisesessions. Alsohomeworksandexam. Supervision Officehours Yes Assistants Yes Forum Yes Resources Virtualdesktopinfrastructure(VDI) No Bibliography SanjeevAroraandBoazBarak:ComputationalComplexity:AModernApproach,CambridgeUniversity Press. Ressourcesenbibliothèque •ComputationalComplexity:AModernApproach/Arora Websites •http://theory.epfl.ch/courses/complexity/ Computationalcomplexity Page2/2"}
{"pack_id": "french_pack", "section_title": "Computational photography", "page": 198, "chunk_id": "french_pack_198_0", "content": "198 2020-2021COURSEBOOKLET CS-413 Computational photography SüsstrunkSabine Cursus Sem. Type Language English Computerscience MA2,MA4 Opt. Credits 5 Cybersecurity MA2,MA4 Opt. Session Summer Semester Spring DataScience MA2,MA4 Opt. Exam Duringthe DigitalHumanities MA2,MA4 Opt. semester Workload 150h ElectricalandElectronicalEngineering MA2,MA4 Opt. Weeks 14 SCmasterEPFL MA2,MA4 Opt. Hours 4weekly Lecture 2weekly Project 2weekly Numberof positions Summary Thestudentswillgainthetheoreticalknowledgeincomputationalphotography,whichallowsrecordingandprocessinga richervisualexperiencethantraditionaldigitalimaging.Theywillalsoexecutepracticalgroupprojectstodeveloptheir owncomputationalphotographyapplication. Content Computationalphotographyistheart,science,andengineeringofcreatingagreat(stillormoving)image.Informationis recordedinspace,time,acrossvisibleandinvisibleradiationandfromothersources,andthenpost-processedto producethefinal-visuallypleasing-result. Basics:Humanvisionsystem,Lightandillumination,Geometricoptics,Colorscience,Sensors,Digitalcamerasystems. Generalizedillumination:Structuredlight,Highdynamicrange(HDR)imaging,Time-of-flight. Generalizedoptics:CodedImageSensing,Codedaperture,Focalstacks. Generalizedsensing:Lowlightimaging,Depthimaging,Plenopticimaging,Lightfieldcameras. Generalizedprocessing:Super-resolution,In-painting,Compositing,Photomontages,Panoramas,HDRimaging, Multi-wavelengthimaging,Dynamicimaging. Generalizeddisplay:Stereoscopicdisplays,HDRdisplays,3Ddisplays,Mobiledisplays. Keywords ComputationalPhotography,CodedImageSensing,Non-classicalimagecapture,Multi-Image&SensorFusion,Mobile Imaging. LearningPrerequisites Requiredcourses •AbasicSignalProcessing,ImageProcessing,and/orComputerVisioncourse. •LinearAlgebra. Recommendedcourses •IntroductiontoComputerVision. •SignalProcessingforCommunications. Importantconceptstostartthecourse Computationalphotography Page1/2"}
{"pack_id": "french_pack", "section_title": "Computational photography", "page": 199, "chunk_id": "french_pack_199_0", "content": "199 2020-2021COURSEBOOKLET •Basicsignalprocessing. •Basiccomputervision. •Basicprogramming(iOS,Android,Matlab). LearningOutcomes Bytheendofthecourse,thestudentmustbeableto: •Identifythemaincomponentsofacomputationalphotographysystem. •Contextualisethemaintrendsincomputationaloptics,sensing,processing,anddisplays. •Createacomputationalphotographyapplicationonamobileplatform. •Designacomputationalphotographysolutiontosolveaparticularimagingtask. •Assess/Evaluatehardwareandsoftwarecombinationsfortheirimagingperformance. •Formulatecomputationalphotographychallengesthatstillneedtoberesolved. Transversalskills •Evaluateone'sownperformanceintheteam,receiveandrespondappropriatelytofeedback. •Continuetoworkthroughdifficultiesorinitialfailuretofindoptimalsolutions. Teachingmethods Thecourseconsistsof2hoursoflecturesperweekthatwillcoverthetheoreticalbasics.Anadditional2hoursperweek arededicatedtoagroupprojectdesigning,developing,andprogrammingacompuationalphotographyapplicationona mobileplateform(iOS,Android). Expectedstudentactivities Thestudensisexpectedtoattendtheclassandactivelyparticipateinthepracticalgroupproject,whichrequirescoding oneitherAndroidoriOSplateform.Thestudentisalsorequiredtoreadtheassignedreadingmaterial(bookchapters, scientificarticles). Assessmentmethods Thetheoreticalpartwillbeevaluatedwithanoralexamattheendofthesemester,andthepracticalpartbasedonthe students’groupprojects. Resources Bibliography •Selectedbookchapters •Coursenotes(onmoodle) •Linkstorelevantscientificarticlesandon-lineresourceswillbegivenonmoodle. Computationalphotography Page2/2"}
{"pack_id": "french_pack", "section_title": "Computer vision", "page": 200, "chunk_id": "french_pack_200_0", "content": "200 2020-2021COURSEBOOKLET CS-442 Computer vision FuaPascal Cursus Sem. Type Language English Communicationsystemsminor E Opt. Credits 4 Computerscienceminor E Opt. Session Winter, Summer Computerscience MA2,MA4 Opt. Semester Spring Cybersecurity MA2,MA4 Opt. Exam Written Workload 120h DataScience MA2,MA4 Opt. Weeks 14 Datascienceminor E Opt. Hours 3weekly DigitalHumanities MA2,MA4 Opt. Lecture 2weekly Exercises 1weekly Horsplans H Opt. Numberof Robotics,ControlandIntelligentSystems Opt. positions Robotics MA2,MA4 Opt. SCmasterEPFL MA2,MA4 Opt. Summary ComputerVisionaimsatmodelingtheworldfromdigitalimagesacquiredusingvideoorinfraredcameras,andother imagingsensors.Wewillfocusonimagesacquiredusingdigitalcameras.Wewillintroducebasicprocessingtechniques anddiscusstheirfieldofapplicability. Content Introduction •HistoryofComputerVision •HumanvsMachineVision •Imageformation Extracting2DFeatures •Contours •Texture •Regions 3DShapeRecovery •Fromonesingleimage •Frommultipleimages LearningOutcomes Bytheendofthecourse,thestudentmustbeableto: •Chooserelevantalgorithmsinspecificsituations •Performsimpleimage-understandingtasks Teachingmethods Excathedralecturesandprogrammingexercisesusingmatlab. Assessmentmethods Computervision Page1/2"}
{"pack_id": "french_pack", "section_title": "Computer vision", "page": 201, "chunk_id": "french_pack_201_0", "content": "201 2020-2021COURSEBOOKLET Withcontinuouscontrol Resources Bibliography •R.Szeliski,ComputerVision:ComputerVision:AlgorithmsandApplications,2010. •A.ZissermanandR.Hartley,MultipleViewGeometryinComputerVision,CambridgeUniversityPress, 2003. Ressourcesenbibliothèque •MultipleViewGeometryinComputerVision/Zisserman •ComputerVision:AlgorithmsandApplications/Szeliski Computervision Page2/2"}
{"pack_id": "french_pack", "section_title": "Concurrent algorithms", "page": 202, "chunk_id": "french_pack_202_0", "content": "202 2020-2021COURSEBOOKLET CS-453 Concurrent algorithms GuerraouiRachid Cursus Sem. Type Language English Computerscience MA1,MA3 Opt. Credits 5 Cybersecurity MA1,MA3 Opt. Session Winter Semester Fall DataScience MA1,MA3 Opt. Exam Written SCmasterEPFL MA1,MA3 Opt. Workload 150h Weeks 14 Hours 5weekly Lecture 3weekly Exercises 1weekly Practical 1weekly work Numberof positions Summary Withtheadventofmultiprocessors,itbecomescrucialtomastertheunderlyingalgorithmicsofconcurrency.The objectiveofthiscourseistostudythefoundationsofconcurrentalgorithmsandinparticularthetechniquesthatenable theconstructionofrobustsuchalgorithms. Content Modelofaparallelsystem Amulticorearchitect Processesandobjects Safetyandliveliness Parallelprogramming Automaticparallelism Mutualexclusionandlocks Non-blockingdatastructures RegisterImplementations Safe,regularandatomicregisters Generalandlimitedtransactions Atomicsnapshots Hierarchyofobjects TheFLPimpossibility Theconsensusnumber Universalconstructions Transactionalmemories Transactionalalgorithms Opacityandobstruction-freedom Keywords Concurrency,parallelism,algorithms,datastructures LearningPrerequisites Requiredcourses ICC,Operatingssystems Recommendedcourses Concurrentalgorithms Page1/2"}
{"pack_id": "french_pack", "section_title": "Concurrent algorithms", "page": 203, "chunk_id": "french_pack_203_0", "content": "203 2020-2021COURSEBOOKLET ThiscourseiscomplementarytotheDistributedAlgorithmscourse. Importantconceptstostartthecourse Processes,threads,datasstructures LearningOutcomes Bytheendofthecourse,thestudentmustbeableto: •Reasoninaprecisemanneraboutconcurrency •Designaconcurrentalgorithm •Proveaconcurrentalgorithm •Implementaconcurrentsystem Teachingmethods Lectures,exercisesandpracticalwork Expectedstudentactivities Midtermandfinalexam Project Assessmentmethods Withcontinuouscontrol,midtermfinalexamsandproject Supervision Officehours Yes Assistants Yes Forum No Resources Notes/Handbook ConcurrentAlgorithms,R.GuerraouiandP.Kouznetsov Websites •http://lpd.epfl.ch/site/education Concurrentalgorithms Page2/2"}
{"pack_id": "french_pack", "section_title": "Cryptography and security", "page": 204, "chunk_id": "french_pack_204_0", "content": "204 2020-2021COURSEBOOKLET COM-401 Cryptography and security VaudenaySerge Cursus Sem. Type Language English Communicationsystemsminor H Opt. Credits 7 ComputerandCommunicationSciences Opt. Session Winter Semester Fall Computerscienceminor H Opt. Exam Written Computerscience MA1,MA3 Obl. Workload 210h Weeks 14 Cybersecurityminor H Opt. Hours 6weekly Cybersecurity MA1,MA3 Obl. Lecture 4weekly DataScience MA1,MA3 Opt. Exercises 2weekly Numberof Financialengineering MA1,MA3 Opt. positions SCmasterEPFL MA1,MA3 Obl. Summary Thiscourseintroducesthebasicsofcryptography.Wereviewseveraltypesofcryptographicprimitives,whenitissafeto usethemandhowtoselecttheappropriatesecurityparameters.Wedetailhowtheyworkandsketchhowtheycanbe implemented. Content 1. Ancientcryptography:Vigenère,Enigma,Vernamcipher,Shannontheory 2. Diffie-Hellmancryptography:algebra,Diffie-Hellman,ElGamal 3. RSAcryptography:numbertheory,RSA,factoring 4. Ellipticcurvecryptography:ellipticcurvesoverafinitefield,ECDH,ECIES 5. Symmetricencryption:blockciphers,streamciphers,exhaustivesearch 6. Integrityandauthentication:hashing,MAC,birthdayparadox 7. Applicationstosymmetriccryptography:mobiletelephony,Bluetooth,WiFi 8. Public-keycryptography:cryptosystem,digitalsignature 9. Trustestablishment:securecommunication,trustsetups 10. Casestudies:Bluetooth,TLS,SSH,PGP,biometricpassport Keywords cryptography,encryption,securecommunication LearningPrerequisites Requiredcourses •Algebra(MATH-310) •Probabilitiesandstatistics(MATH-310) •Algorithms(CS-250) Recommendedcourses •Computersecurity(COM-301) Importantconceptstostartthecourse •Mathematicalreasoning Cryptographyandsecurity Page1/3"}
{"pack_id": "french_pack", "section_title": "Cryptography and security", "page": 205, "chunk_id": "french_pack_205_0", "content": "205 2020-2021COURSEBOOKLET •Probabilities •Algebra,arithmetics •Algorithmics LearningOutcomes Bytheendofthecourse,thestudentmustbeableto: •Choosetheappropriatecryptographicprimitiveinasecurityinfrastructure •Judgethestrengthofexistingstandards •Assess/Evaluatethesecuritybasedonkeylength •Implementalgorithmsmanipulatingbignumbersandusenumbertheory •Usealgebraandprobabilitytheorytoanalyzecryptographicalgorithms •Identifythetechniquestosecurethecommunicationandestablishtrust Teachingmethods ex-cathedra Expectedstudentactivities •activeparticipationduringthecourse •takenotesduringthecourse •dotheexercisesduringtheexercisesessions •completetheregulartestsandhomework •readthematerialfromthecourse •self-trainusingtheprovidedmaterial •dothemidtermexamandfinalexam Assessmentmethods Mandatorycontinuousevaluation: •homework(30%) •regulargradedtests(30%) •midtermexam(40%) Finalexamaveraged(sameweight)withthecontiuousevaluation,butwithfinalgradebetweenfinal_exam-1and final_exam+1. Supervision Others Lecturersandassistantsareavailableuponappointment. Resources Bibliography •Communicationsecurity:anintroductiontocryptography.SergeVaudenay.Springer2004. •Acomputationalintroductiontonumbertheoryandalgebra.VictorShoup.CambridgeUniversityPress 2005. Ressourcesenbibliothèque Cryptographyandsecurity Page2/3"}
{"pack_id": "french_pack", "section_title": "Cryptography and security", "page": 206, "chunk_id": "french_pack_206_0", "content": "206 2020-2021COURSEBOOKLET •Communicationsecurity/Vaudenay •Acomputationalintroductiontonumbertheoryandalgebra/Shoup Prerequisitefor •Advancedcryptography(COM-401) •Algorithmsinpublic-keycryptography(COM-408) Cryptographyandsecurity Page3/3"}
{"pack_id": "french_pack", "section_title": "Database systems", "page": 207, "chunk_id": "french_pack_207_0", "content": "207 2020-2021COURSEBOOKLET CS-422 Database systems AilamakiAnastasia Cursus Sem. Type Language English ComputerandCommunicationSciences Obl. Credits 7 Computerscienceminor E Opt. Session Summer Semester Spring Computerscience MA2,MA4 Obl. Exam Duringthe Cybersecurity MA2,MA4 Obl. semester Workload 210h DigitalHumanities MA2,MA4 Opt. Weeks 14 SCmasterEPFL MA2,MA4 Opt. Hours 7weekly Lecture 3weekly Exercises 2weekly Project 2weekly Numberof positions Summary Thiscourseisintendedforstudentswhowanttounderstandmodernlarge-scaledataanalysissystemsanddatabase systems.Itcoversawiderangeoftopicsandtechnologies,andwillpreparestudentstobeabletobuildsuchsystemsas wellasreadandunderstandrecentresearchpublications. Content •Databasesystems •Onlineanalytics;datastreamprocessing •Columnstores •Decisionsupportsystemsanddatawarehouses •Large-scaledataanalyticsinfrastructureandsystems •Transactionprocessing.OLTPsystemsandconcurrencycontrolalgorithms •Distributeddatamanagementsystems •Queryoptimization;databasetuning •Loggingandrecovery •Modernstoragehierarchies LearningPrerequisites Requiredcourses •CS-322: Introduction to database systems •CS-107: Introduction to programming Recommendedcourses •CS-323:Introductiontooperatingsystems •CS-452:Foundationsofsoftware LearningOutcomes Bytheendofthecourse,thestudentmustbeableto: Databasesystems Page1/2"}
{"pack_id": "french_pack", "section_title": "Database systems", "page": 208, "chunk_id": "french_pack_208_0", "content": "208 2020-2021COURSEBOOKLET •Designbigdataanalyticssystemsusingstate-of-the-artinfrastructuresforhorizontalscaling,e.g.,Spark •Implementalgorithmsanddatastructuresforstreamingdataanalytics •Decidebetweendifferentstoragemodelsbasedontheofferedoptimizationsenabledbyeachmodelandonthe expectedqueryworkload •Compareconcurrencycontrolalgorithms,andalgorithmsfordistributeddatamanagement •Identifyperformanceculprits,e.g.,duetoconcurrencycontrol Teachingmethods Lectures,project,homework,exercises Expectedstudentactivities Duringthesemester,thestudentsareexpectedto: •attendthelecturesinordertoaskquestionsandinteractwiththeprofessor, •attendtheexercisesessionstosolveanddiscussexercisesabouttherecentlytaughtmaterial, •workonprojects,whichcoverthepracticalsideofthetaughtmaterial, •takeamidterm, •takeafinalexam, •readscientificpapersrelatedtothecoursematerial Assessmentmethods •60%exams •40%project Supervision Officehours Yes Others Officehoursonrequest.Q&Asessionsinlecturesandexercises. Resources Bibliography J.Hellerstein&M.Stonebraker,ReadingsinDatabaseSystems,4thEdition,2005 R.Ramakrishnan&J.Gehrke:\"DatabaseManagementSystems\",McGraw-Hill,3rdEdition,2002. A.Rajaraman&J.Ullman:\"MiningofMassiveDatasets\",CambridgeUniv.Press,2011. Ressourcesenbibliothèque •DatabaseManagementSystems/Ramakrishnan •ReadingsinDatabaseSystems/Hellerstein •MiningofMassiveDatasets/Rajaraman Databasesystems Page2/2"}
{"pack_id": "french_pack", "section_title": "Data visualization", "page": 209, "chunk_id": "french_pack_209_0", "content": "209 2020-2021COURSEBOOKLET COM-480 Data visualization VuillonLaurentGillesMarie Cursus Sem. Type Language English Computerscience MA2,MA4 Opt. Credits 4 Cybersecurity MA2,MA4 Opt. Session Summer Semester Spring DataScience MA2,MA4 Opt. Exam Duringthe Datascienceminor E Opt. semester Workload 120h DigitalHumanities MA2,MA4 Opt. Weeks 14 ElectricalEngineering Opt. Hours 4weekly ElectricalandElectronicalEngineering MA2,MA4 Opt. Lecture 2weekly Project 2weekly SCmasterEPFL MA2,MA4 Opt. Numberof positions Summary Understandingwhyandhowtopresentcomplexdatainteractivelyinaneffectivemannerhasbecomeacrucialskillfor anydatascientist.Inthiscourse,youwilllearnhowtodesign,judge,buildandpresentyourowninteractivedata visualizations. Content Tentativecourseschedule Week1:IntroductiontoDatavisualizationWebdevelopment Week2:Javascript Week3:MoreJavascript Week4:DataDatadrivendocuments(D3.js) Week5:Interaction,filtering,aggregation(UI/UX).AdvancedD3/javascriptlibs Week6:Perception,cognition,colorMarksandchannels Week7:Designingvisualizations(UI/UX)ProjectintroductionDosanddon’tsfordata-viz Week8:Maps(theory)Maps(practice) Week9:Textvisualization Week10:Graphs Week11:TabulardatavizMusicviz Week12:Introductiontoscientificvisualisation Week13:Storytellingwithdata/datajournalismCreativecoding Week14:Wrap-Up Keywords Dataviz,visualization,datascience LearningPrerequisites Requiredcourses CS-305Softwareengineering(BA) CS-250Algorithms(BA) CS-401Applieddataanalysis(MA) Recommendedcourses EE-558ANetworkTourofDataScience(MA) CS-486Humancomputerinteraction(MA) CS-210Functionalprogramming(BA) Importantconceptstostartthecourse Datavisualization Page1/3"}
{"pack_id": "french_pack", "section_title": "Data visualization", "page": 210, "chunk_id": "french_pack_210_0", "content": "210 2020-2021COURSEBOOKLET Beingautonomousisaprerequisite,wedon'tofferofficehoursandwewon'thaveenoughteaching assistants(you'vebeenwarned!). KnowledgeofoneofthefollowingprogrmaminglanguagesuchasC++,Python,Scala. Familiaritywithweb-development(youalreadyhaveablog,hostawebiste).ExperiencewithHTML5, Javascriptisastrongplusforthecourse. LearningOutcomes Bytheendofthecourse,thestudentmustbeableto: •Judgevisualizationinacriticalmannerandsuggestimprovements. •Designandimplementvisualizationsfromtheideatothefinalproductaccordingtohumanperceptionandcognition •Knowthecommondata-viztechniquesforeachdatadomain(multivariatedata,networks,texts,cartography,etc)with theirtechnicallimitations •CreateinteractivevisualizationsinthebrowserusingHTM5andJavascript Transversalskills •Communicateeffectively,beingunderstood,includingacrossdifferentlanguagesandcultures. •Negotiateeffectivelywithinthegroup. •Resolveconflictsinwaysthatareproductiveforthetaskandthepeopleconcerned. Teachingmethods Excathedralectures,exercises,andgroupprojects Expectedstudentactivities •Followlectures •Readlecturesnotesandtextbooks •Createanadvanceddata-vizingroupsof3. •Answerquestionsassessingtheevolutionoftheproject. •Createa2minscreencastpresentationoftheviz. •Createaprocessbookforthefinaldataviz. Assessmentmethods •Data-viz(35%) •Technicalimplementation(15%) •Website,presentation,screencast(25%) •Processbook(25%) Supervision Officehours No Assistants No Forum No Resources Bibliography Datavisualization Page2/3"}
{"pack_id": "french_pack", "section_title": "Data visualization", "page": 211, "chunk_id": "french_pack_211_0", "content": "211 2020-2021COURSEBOOKLET VisualizationAnalysisandDesignbyTamaraMunzner,CRCPress(2014).FeeonlineversionatEPFL. InteractiveDataVisualizationfortheWebbyScottMurrayO'Reilly(2013)-D3-Freeonlineversion. Ressourcesenbibliothèque •VisualizationAnalysisandDesign/Munzner •InteractiveDataVisualizationfortheWeb/Murray Notes/Handbook Lecturenotes Websites •https://www.kirellbenzi.com MoodleLink •https://moodle.epfl.ch/course/view.php?id=15487 Datavisualization Page3/3"}
{"pack_id": "french_pack", "section_title": "Decentralized systems engineering", "page": 212, "chunk_id": "french_pack_212_0", "content": "212 2020-2021COURSEBOOKLET CS-438 Decentralized systems engineering FordBryanAlexander Cursus Sem. Type Language English Computerscienceminor H Opt. Credits 6 Computerscience MA1,MA3 Obl. Session Winter Semester Fall Cybersecurity MA1,MA3 Obl. Exam Written SCmasterEPFL MA1,MA3 Opt. Workload 180h Weeks 14 Hours 6weekly Lecture 2weekly Exercises 2weekly Project 2weekly Numberof positions Summary Adecentralizedsystemisonethatworkswhennosinglepartyisinchargeorfullytrusted.Thiscourseteaches decentralizedsystemsprincipleswhileguidingstudentsthroughthedevelopmentandtestingoftheirowndecentralized systemincorporatingmessaging,encryption,andblockchainconcepts. Content Topicsthiscoursecoversinclude: •Addressing,Forwarding,Routing.Peer-to-peercommunication. •Informationgossip.UseNet:technical,security,andsociallessons.Randomizedrumor-mongeringand anti-entropyalgorithms. •CommunicatingSecurely:BasicCryptographicTools.Symmetric-keyencryption.Hashfunctions,message authentication.Diffie-Hellmankeyexchange.Public-keyencryption,digitalsignatures. •TrustandReputation.Authorities,trustnetworks.Sybilattacksanddefenses. •Namingandsearch.Requestflooding.Hierarchicaldirectories,landmarkstructures.Self-certifyingidentities. Distributedhashtables. •Distributedconsensus,distributedledgers(blockchains),andcryptocurrencies. •AnonymousCommunication.Onionrouting,mixnetworks.Diningcryptographers.Voting,verifiableshuffles, homomorphicencryption.Anonymousdisruption. •FireproofingAlexandria:DecentralizedStorage.Replication.Parity,erasurecoding.Renewal.Digitalpreservation. •ContentDistribution.Opportunisticcaching(FreeNet).Contentintegrity:hashtrees,hashfilesystems. Convergentencryption.Swarmingdownloads:BitTorrent.Free-riding,incentives. •Gainingperspective.Spam,maliciouscontent.Review/moderationandreputationsystems.Leveragingsocial networks(Peerspective).Balancinglocalandglobalviewpoints. •DecentralizedCollaboration.Networkfilesystems,versionmanagement.Consistency. •ConsistencyModels.Disconnectedoperation,eventualconsistency,conflictresolution. •DistributedConsensus.Paxos.Accountability(PeerReview).Byzantinefaulttolerance. •MobileCode.Smartcontractsystems. Privacy:trustedcomputing,fullyhomomorphicencryption.Decentralized virtualorganizations. Keywords distributedsystems,decentralizedsystems,security,privacy,anonymity,cryptography,gossip,consensus,swarming, blockchain,cryptocurrency LearningPrerequisites Decentralizedsystemsengineering Page1/3"}
{"pack_id": "french_pack", "section_title": "Decentralized systems engineering", "page": 213, "chunk_id": "french_pack_213_0", "content": "213 2020-2021COURSEBOOKLET Requiredcourses •COM-208Computernetworks Recommendedcourses •CS-206Parallelismandconcurrency •COM-301Computersecurity •CS-323Introductiontooperatingsystems Importantconceptstostartthecourse Studentsmustalreadybehighlycompetentatprogramminganddebugginginahigh-levelsystems programminglanguagesuchasJava,C#,orGo. ProgrammingexerciseswillbeinGo,butstudents alreadywell-versedandexperiencedinprogrammingwithcomparablesystemslanguagesshouldbe abletopickupGoduringthecourse. Studentsshouldhavebothsolidfoundationalknowledgeofhownetworksfunction,andsomeexperience actuallywritingnetworkprograms,e.g.,TCP/IPprogrammingusingtheSocketsAPI. LearningOutcomes Bytheendofthecourse,thestudentmustbeableto: •Designpracticaldistributedanddecentralizedsystems •Implementsystemsviahands-oncoding,debugging,andinteroperabilitytesting Teachingmethods Lectures:Thecourse'slectureswillpresentanddiscusschallenges,knowntechniques,andopenquestionsin decentralizedsystemdesignandimplementation.Lectureswilloftenbedrivenbyexaminationofrealdecentralized systemswithvariouspurposesinwidespreadusethepastorpresent,suchasUseNet,IRC,FreeNet,Tor,BitTorrent, andBitcoin.Throughoutthecoursewewillexplorefundamentalsecurityandusabilitychallengessuchasdecentralized identificationandauthentication,denial-of-serviceandSybilattacks,andmaintenanceofdecentralizedstructures undergoingrapidchanges(churn). Labs:Duringthesemester,studentswilldevelopasmallbutusablepeer-to-peercommunicationapplicationthatreflects afewoftheimportantdesignprinciplesandtechniquestobeexploredinthecourse,suchasgossip,socialtrust networks,distributedhashtables,consensusalgorithms,andcryptocurrencies.Thelabswilldesignedsothatsolutions caninitiallybetestedindividuallyonprivate,virtualnetworksrunningononemachine,thentestedcollectivelyby attemptingtomakedifferentstudents'solutionsinteroperateonarealnetwork. Warning:Thiscourseisextremelyprogramming-intensive.Studentsshouldbestrongandconfidentintheir programmingskillsingeneral,andbewillingtospendsubstantialtimeoutsideofclassdebuggingdifficultdistributed concurrencybugsandotherchallenges. TAswillbeavailabletohelpattheexercisesessions,buttheywillnotsolve yourproblemsordebugyourcodeforyou. Expectedstudentactivities Studentswillbeexpectedtoattendlecturestounderstandtheconceptsneededforthecourse,butthemainworkload willbeactualhands-onprogrammingassignments,whichthestudentswillperformontheirownduringthefirstpartof thecourseandoptionallyinsmallteamsduringthefinalproject-orientedpartofthecourse. Assessmentmethods Decentralizedsystemsengineering Page2/3"}
{"pack_id": "french_pack", "section_title": "Decentralized systems engineering", "page": 214, "chunk_id": "french_pack_214_0", "content": "214 2020-2021COURSEBOOKLET •Lectureattendance:10% •Programmingassignmentgrading(evaluatingbothfunctionandstudentdocumentation):50% •Finalprojectgrading(accountingforbothscope,appropriateness,andfollow-throughinimplementationquality anddocumentation):40% Supervision Officehours Yes Assistants Yes Forum Yes Resources MoodleLink •https://moodle.epfl.ch/course/view.php?id=15483 Decentralizedsystemsengineering Page3/3"}
{"pack_id": "french_pack", "section_title": "Deep learning", "page": 215, "chunk_id": "french_pack_215_0", "content": "215 2020-2021COURSEBOOKLET EE-559 Deep learning FleuretFrançois Cursus Sem. Type Language English Civil&EnvironmentalEngineering Opt. Credits 4 ComputationalscienceandEngineering MA2,MA4 Opt. Session Summer Semester Spring Computerscience MA2,MA4 Opt. Exam Written Cybersecurity MA2,MA4 Opt. Workload 120h Weeks 14 DataScience MA2,MA4 Opt. Hours 4weekly Datascienceminor E Opt. Lecture 2weekly DigitalHumanities MA2,MA4 Opt. Exercises 2weekly Numberof 500 ElectricalEngineering Opt. positions ElectricalandElectronicalEngineering MA2,MA4 Opt. Financialengineering MA2,MA4 Opt. LifeSciencesEngineering MA2,MA4 Opt. Robotics,ControlandIntelligentSystems Opt. Robotics MA2,MA4 Opt. SCmasterEPFL MA2,MA4 Opt. Summary Theobjectiveofthiscourseistoprovideacompleteintroductiontodeepmachinelearning.Howtodesignaneural network,howtotrainit,andwhatarethemoderntechniquesthatspecificallyhandleverylargenetworks. Content Thecourseaimsatprovidinganoverviewofexistingprocessingsandmethods,atteachinghowtodesignandtraina deepneuralnetworkforagiventask,andatprovidingthetheoreticalbasistogobeyondthetopicsdirectlyseeninthe course. Itwilltouchonthefollowingtopics: •Whatisdeeplearning,introductiontotensors. •Basicmachine-learning,empiricalriskminimization,simpleembeddings. •Linearseparability,multi-layerperceptrons,back-propagation. •Generalizednetworks,autograd,batchprocessing,convolutionalnetworks. •Initialization,optimization,andregularization.Drop-out,batchnorm,resnets. •DeepmodelsforComputerVision. •Analysisofdeepmodels. •Auto-encoders,embeddings,andgenerativemodels. •Recurrentandattentionmodels,NaturalLanguageProcessing. ConceptswillbeillustratedwithexamplesinthePyTorchframework(http://pytorch.org). Keywords machinelearning,neuralnetworks,deeplearning,computervision,python,pytorch LearningPrerequisites Requiredcourses Deeplearning Page1/2"}
{"pack_id": "french_pack", "section_title": "Deep learning", "page": 216, "chunk_id": "french_pack_216_0", "content": "216 2020-2021COURSEBOOKLET •Linearalgebra(vector,matrixoperations,Euclideanspaces). •Differentialcalculus(Jacobian,Hessian,chainrule). •Pythonprogramming. •Basicsinprobabilitiesandstatistics(discreteandcontinuousdistributions,normaldensity,lawoflarge numbers,conditionalprobabilities,Bayes,PCA) Recommendedcourses •Basicsinoptimization(notionofminima,gradientdescent). •Basicsinalgorithmic(computationalcosts). •Basicsinsignalprocessing(Fouriertransform,wavelets). Teachingmethods Ex-cathedrawithexercisesessionsandmini-projects.Possiblyinvitedspeakers. Assessmentmethods Mini-projectsbygroupsofstudents,andonefinalwrittenexam. Resources Notes/Handbook Notmandatory:http://www.deeplearningbook.org/ Websites •https://fleuret.org/ee559/ Deeplearning Page2/2"}
{"pack_id": "french_pack", "section_title": "Design technologies for integrated systems", "page": 217, "chunk_id": "french_pack_217_0", "content": "217 2020-2021COURSEBOOKLET CS-472 Design technologies for integrated systems DeMicheliGiovanni Cursus Sem. Type Language English ComputerandCommunicationSciences Opt. Credits 6 Computerscience MA1,MA3 Opt. Session Winter Semester Fall Cybersecurity MA1,MA3 Opt. Exam Duringthe ElectricalandElectronicalEngineering MA1,MA3 Opt. semester Workload 180h MNIS MA3 Obl. Weeks 14 MineurSTASChine H Opt. Hours 5weekly SCmasterEPFL MA1,MA3 Opt. Lecture 3weekly Project 2weekly Numberof positions Summary Hardwarecompilationistheprocessoftransformingspecializedhardwaredescriptionlanguagesintocircuitdescriptions, whichareiterativelyrefined,detailedandoptimized.Thecoursepresentsalgorithms,toolsandmethodsforhardware compilationandlogicsynthesis. Content Thecoursewillpresentthemostoutstandingfeaturesofhardwarecompilation,aswellasthetechniquesforoptimizing logicrepresentationsandnetworks.Thecoursegivesanovel,uptodateviewofdigitalcircuitdesign.Practicalsessions willteachstudentstheuseofcurrentdesigntools.Syllabus1)Modelinglanguagesandspecificationformalisms;2) High-levelsynthesisandoptimizationmethods(scheduling,binding,data-pathandcontrolsynthesis);3)Representation andoptimizationofcombinationallogicfunctions(encodingproblems,binarydecisiondiagrams);4)Representationand optimizationofmultiple-levelnetworks(algebraicandBooleanmethods,\"don'tcare\"setcomputation,timingverification andoptimization);5)Modelingandoptimizationofsequentialfunctionsandnetworks(retiming);6)Semicustomlibraries andlibrarybinding. Keywords Hardware,VLSI,Synthesis,Optimization,Algorithms LearningPrerequisites Requiredcourses Nospecificcourse Recommendedcourses Knowledgeofdigitaldesign,algorithmdesignandprogramming. Importantconceptstostartthecourse Knowledgeofdigitaldesign,algorithmdesignandprogramming. LearningOutcomes Bytheendofthecourse,thestudentmustbeableto: •Recognizeimportantproblemsindigitaldesign •Examineandevaluateavailabledesigntoolsandmethods •Decideuponadesigntoolflowtoperformadigitaldesign Designtechnologiesforintegratedsystems Page1/2"}
{"pack_id": "french_pack", "section_title": "Design technologies for integrated systems", "page": 218, "chunk_id": "french_pack_218_0", "content": "218 2020-2021COURSEBOOKLET Transversalskills •Planandcarryoutactivitiesinawaywhichmakesoptimaluseofavailabletimeandotherresources. Assessmentmethods Continuouscontrol: Homework:30%,Project15%,Midtermtest:20%, Endtermtest:35% Resources Virtualdesktopinfrastructure(VDI) No Bibliography G.DeMicheli,SynthesisandOptimizationofDigitalCircuits,McGraw'Hill. Ressourcesenbibliothèque •SynthesisandOptimizationofDigitalCircuits/DeMicheli Notes/Handbook Copiesoftheslidesusedforlectureswillbegiveninclassandposted. Websites •http://lsi-www.epfl.ch/dtis/ Designtechnologiesforintegratedsystems Page2/2"}
{"pack_id": "french_pack", "section_title": "Digital 3D geometry processing", "page": 219, "chunk_id": "french_pack_219_0", "content": "219 2020-2021COURSEBOOKLET CS-446 Digital 3D geometry processing Cursus Sem. Type Language English ComputationalscienceandEngineering MA1,MA3 Opt. Credits 5 Computerscience MA1,MA3 Opt. Session Winter Semester Fall Cybersecurity MA1,MA3 Opt. Exam Duringthe DigitalHumanities MA1,MA3 Opt. semester Workload 150h SCmasterEPFL MA1,MA3 Opt. Weeks 14 Hours 4weekly Lecture 2weekly Exercises 1weekly Project 1weekly Numberof positions Remark pasdonnéen2020-21 Summary Studentsstudy&applycoreconceptsandalgorithmsfordigitalgeometryprocessing.Theycreatetheirowndigitaland physicalgeometrythatfollowsthedigital3Dcontentcreationpipelinefromdataacquisition,geometryprocessing,to physicalfabrication. Content Thecoursewillfollowthedigital3Dcontentcreationpipeline.Wewillfirstdiscussthefundamentalsofgeometry representationsandcovercontinuousanddiscretedifferentialgeometryconcepts.Polygonmeshrepresentationswillbe atthecenterofourinvestigations.Wederivethecoreprocessingmethodsfortrianglemeshes,suchassurface smoothing,parameterization,remeshingordeformation.Besidesthemathematicalconceptsandalgorithmic foundations,thecourseputsstrongemphasisonimplementationandfeaturesanextensiveproject.Studentswillscan theirown3Dmodels,editandenhancethemwithgeometryprocessingalgorithms,andmaptheirgeometricmodelsto digitalfabricationprocesses(3Dprinting,lasercutting)tocreatephysicalrealizationsoftheirmodels.Agroupprojectwill exploredynamicsimulationmethodsforphysics-basedanimationofthescannedgeometricmodels. Keywords geometry,3Dmodeling,polygonmeshes,numericalsimulation,digitalfabrication LearningPrerequisites Requiredcourses LinearAlgebra,Calculus,Programming Recommendedcourses IntroductiontoComputerGraphics LearningOutcomes Bytheendofthecourse,thestudentmustbeableto: •Explainandcontrastfundamentalgeometryrepresentations •Explainandapplybasicconceptsfromdiscretedifferentialgeometry •Analyzethe3Dcontentcreationpipelineandunderstanditslimitations Digital3Dgeometryprocessing Page1/2"}
{"pack_id": "french_pack", "section_title": "Digital 3D geometry processing", "page": 220, "chunk_id": "french_pack_220_0", "content": "220 2020-2021COURSEBOOKLET •Implementandevaluatebasicgeometryprocessingalgorithms,suchassmoothing,remeshing,deformation,and constructivesolidgeometry •Createdigital3Dmodelsfromphotographsandprocesstheacquiredrawgeometrytobuildphysicalprototypes •Coordinateateamduringasoftwareproject Teachingmethods Lectures,interactivedemos,theoryandprogrammingexercises,programmingproject,projecttutoring Expectedstudentactivities Thestudentareexpectedtostudytheprovidedreadingmaterialandactivelyparticipateinclass.Theyshouldprepare andresolvetheexercises,prepareandcarryouttheprogrammingproject.Exercisesinthefirsthalfofthecourseare doneingroupsofthreestudents.Forthesecondhalfofthecourse,theprojectisdoneinlargerteams. Assessmentmethods Exercises,project,writtenexamination Supervision Officehours Yes Assistants Yes Forum Yes Resources Bibliography Alistofbookswillbeprovidedatthebeginningoftheclass Ressourcesenbibliothèque •PolygonMeshProcessing/Botsch Notes/Handbook Slidesandonlineresourceswillbeprovidedinclass Websites •http://lgg.epfl.ch/DGP Digital3Dgeometryprocessing Page2/2"}
{"pack_id": "french_pack", "section_title": "Digital education & learning analytics", "page": 221, "chunk_id": "french_pack_221_0", "content": "221 2020-2021COURSEBOOKLET CS-411 Digital education & learning analytics DillenbourgPierre,JermannPatrick Cursus Sem. Type Language English Computerscience MA1,MA3 Opt. Credits 4 Cybersecurity MA1,MA3 Opt. Session Winter Semester Fall DataScience MA1,MA3 Opt. Exam Oral DigitalHumanities MA1,MA3 Opt. Workload 120h Weeks 14 SCmasterEPFL MA1,MA3 Opt. Hours 4weekly Lecture 2weekly Project 2weekly Numberof positions Summary Thiscourseaddressestherelationshipbetweenspecifictechnologicalfeaturesandthelearners'cognitiveprocesses.It alsocoversthemethodsandresultsofempiricalstudiesonthistopic:dostudentactuallylearnduetotechnologies? Content Learningtheoriesandlearningprocesses.Instructionaldesign:methods,patternsandprinciples.Orchestrationgraphs. On-lineeducation.Effectivenessoflearningtechnologies.Methodsforempiricalresearch.Learninganalytics.Historyof learningtechnologies. Keywords learning,pedagogy,teaching,onlineeducation,MOOCs LearningPrerequisites Recommendedcourses Oneofthesecoursesisrecommended: -MachineLearning(Jaggi/Urbanke) -AppliedDataAnalysis(West) LearningOutcomes Bytheendofthecourse,thestudentmustbeableto: •Describethelearningprocessestriggeredbyatechnology-basedactivity •Explainhowatechnologyfeatureinfluenceslearningprocesses •Elaborateastudythatmeasuresthelearningeffectsofadigitalenvironment •Selectappropriatelyalearningtechnologygiventhetargetaudienceandtheexpectedlearningoutcomes •Applymachinelearningmethodstoeducationaltraces Transversalskills •Setobjectivesanddesignanactionplantoreachthoseobjectives. Teachingmethods Thecoursewillcombineparticipatorylectureswithaprojectaroundlearninganalytics Digitaleducation&learninganalytics Page1/2"}
{"pack_id": "french_pack", "section_title": "Digital education & learning analytics", "page": 222, "chunk_id": "french_pack_222_0", "content": "222 2020-2021COURSEBOOKLET Expectedstudentactivities Theprojectwillincludeseveralmilestonestobedeliveredalongthesemester. Assessmentmethods •Project+exam •50/50 Supervision Officehours No Assistants Yes Forum Yes Resources MoodleLink •http://moodle.epfl.ch/course/view.php?id=14248 Digitaleducation&learninganalytics Page2/2"}
{"pack_id": "french_pack", "section_title": "Distributed algorithms", "page": 223, "chunk_id": "french_pack_223_0", "content": "223 2020-2021COURSEBOOKLET CS-451 Distributed algorithms GuerraouiRachid Cursus Sem. Type Language English ComputerandCommunicationSciences Opt. Credits 6 Computerscienceminor H Opt. Session Winter Semester Fall Computerscience MA1,MA3 Obl. Exam Written Cybersecurity MA1,MA3 Obl. Workload 180h Weeks 14 DataScience MA1,MA3 Opt. Hours 6weekly SCmasterEPFL MA1,MA3 Obl. Lecture 3weekly Exercises 2weekly Practical 1weekly work Numberof positions Summary Computingisoftendistributedoverseveralmachines,inalocalIP-likenetwork,acloudorinaP2Pnetwork.Failuresare commonandcomputationsneedtoproceeddespitepartialfailuresofmachinesorcommunicationlinks.Thefoundations ofreliabledistributedcomputingwillbestudied. Content Reliablebroadcast CausalBroadcast TotalOrderBroadcast Consensus Non-BlockingAtomicCommit GroupMembership,ViewSynchrony TerminatingReliableBroadcast SharedMemoryinMessagePassingSystems ByzantineFaultTolerance SelfStabilization Populationprotocols (modelsofmobilenetworks) Bitcoin,Blockchain DistributedMachineLearning Gossip Keywords Distributedalgorithms,checkpointing,replication,consensus,atomicbroadcast,ditributedtransactions,atomic commitment,2PC,MachineLearning LearningPrerequisites Requiredcourses BasicsofAlgorithms,networkingandoperatingsystems Recommendedcourses Thelectureisorthogonaltotheoneonconcurrentalgorithms:itmakesalotofsensetotakethemin parallel. LearningOutcomes Bytheendofthecourse,thestudentmustbeableto: Distributedalgorithms Page1/2"}
{"pack_id": "french_pack", "section_title": "Distributed algorithms", "page": 224, "chunk_id": "french_pack_224_0", "content": "224 2020-2021COURSEBOOKLET •Chooseanappropriateabstractiontomodeladistributedcomputingproblem •Specifytheabstraction •Presentandimplementit •Analyzeitscomplexity •Proveadistributedalgorithm •Implementadistributedsystem Teachingmethods Excathedera Lectures,exercisesandpracticalwork Assessmentmethods Midtermandfinalexams Project Supervision Officehours Yes Assistants Yes Forum Yes Resources Ressourcesenbibliothèque • Introductiontoreliableandsecuredistributedprogramming/Cachin Notes/Handbook ReliableandSecureDistributedProgramming SpringerVerlag C.Cachin,R.Guerraoui,L.Rodrigues Websites •http://lpdwww.epfl.ch/education Distributedalgorithms Page2/2"}
{"pack_id": "french_pack", "section_title": "Distributed information systems", "page": 225, "chunk_id": "french_pack_225_0", "content": "225 2020-2021COURSEBOOKLET CS-423 Distributed information systems AbererKarl Cursus Sem. Type Language English Biocomputingminor H Opt. Credits 4 Civil&EnvironmentalEngineering Opt. Session Winter Semester Fall Communicationsystemsminor H Opt. Exam Written Computerscience MA1,MA3 Opt. Workload 120h Weeks 14 Cybersecurity MA1,MA3 Opt. Hours 3weekly DataScience MA1,MA3 Opt. Lecture 2weekly DigitalHumanities MA1,MA3 Opt. Exercises 1weekly Numberof ElectricalandElectronicalEngineering MA1,MA3 Opt. positions EnergyManagementandSustainability MA1,MA3 Opt. EnvironmentalSciencesandEngineering MA1,MA3 Opt. SCmasterEPFL MA1,MA3 Obl. Summary Thiscourseintroducesthekeyconceptsandalgorithmsfromtheareasofinformationretrieval,dataminingand knowledgebases,whichconstitutethefoundationsoftoday'sWeb-baseddistributedinformationsystems. Content InformationRetrieval 1. InformationRetrieval-Introduction 2. Text-BasedInformationRetrieval 3. VectorSpaceRetrieval 4. InvertedFiles 5. DistributedRetrieval 6. ProbabilisticInformationRetrieval 7. QueryExpansion 8. LatentSemanticIndexing 9. WordEmbeddings 10. Link-BasedRanking DataMining 1. DataMining–Introduction 2. AssociationRuleMining 3. Clustering 4. Classification 5. ClassificationMethodology 6. DocumentClassification 7. RecommenderSystems 8. MiningSocialGraphs KnowledgeBases 1. Semi-structureddata 2. SemanticWeb 3. RDFResourceDescriptionFramework 4. SemanticWebResources 5. Keyphraseextraction 6. Namedentityrecognition 7. Informationextraction 8. TaxonomyInduction 9. EntityDisambiguation 10. LabelPropagation Distributedinformationsystems Page1/2"}
{"pack_id": "french_pack", "section_title": "Distributed information systems", "page": 226, "chunk_id": "french_pack_226_0", "content": "226 2020-2021COURSEBOOKLET 11. LinkPrediction 12. DataIntegration LearningPrerequisites Recommendedcourses IntroductiontoDatabaseSystems LearningOutcomes Bytheendofthecourse,thestudentmustbeableto: •Characterizethemaintasksperformedbyinformationsystems,namelydata,informationandknowledge management •Applycollaborativeinformationmanagementmodels,likecrowd-sourcing,recommendersystems,socialnetworks •Applyknowledgemodels,theirrepresentationthroughWebstandardsandalgorithmsforstoringandprocessing semi-structureddata •ApplyfundamentalmodelsandtechniquesoftextretrievalandtheiruseinWebsearchengines •Applymaincategoriesofdataminingtechniques,localrules,predictiveanddescriptivemodels,andmaster representativealgorithmsforeachofthecategories Teachingmethods Excathedra+programmingexercises(Python) Assessmentmethods 25%Continuousevaluationswithbonussystemduringthesemester 75%Finalwrittenexam(180min)duringexamsession Distributedinformationsystems Page2/2"}
{"pack_id": "french_pack", "section_title": "Distributed intelligent systems", "page": 227, "chunk_id": "french_pack_227_0", "content": "227 2020-2021COURSEBOOKLET ENG-466 Distributed intelligent systems MartinoliAlcherio Cursus Sem. Type Language English Biocomputingminor E Opt. Credits 5 CivilEngineering MA2,MA4 Opt. Session Summer Semester Spring ComputationalscienceandEngineering MA2,MA4 Opt. Exam Written Computerscience MA2,MA4 Opt. Workload 150h Weeks 14 Cybersecurity MA2,MA4 Opt. Hours 5weekly DataScience MA2,MA4 Opt. Lecture 2weekly ElectricalandElectronicalEngineering MA2,MA4 Opt. Exercises 3weekly Numberof EnergyManagementandSustainability MA2,MA4 Opt. positions EnergyScienceandTechnology MA2,MA4 Opt. EnvironmentalSciencesandEngineering MA2,MA4 Opt. Microtechnics MA2,MA4 Opt. Robotics,ControlandIntelligentSystems Opt. Robotics MA2,MA4 Opt. SCmasterEPFL MA2,MA4 Opt. Summary Thegoalofthiscourseistoprovidemethodsandtoolsformodelingdistributedintelligentsystemsaswellasdesigning andoptimizingcoordinationstrategies.Thecourseisawell-balancedmixtureoftheoryandpracticalactivitiesusing simulationandrealhardwareplatforms. Content •Introductiontokeyconceptssuchasself-organizationandsoftwareandhardwaretoolsusedinthecourse •Examplesofnatural,artificialandhybriddistributedintelligentsystems •Modelingmethods:sub-microscopic,microscopic,macroscopic,multi-level;spatialandnon-spatial;meanfield, approximatedandexactapproaches •Machine-learningmethods:single-andmulti-agenttechniques;expensiveoptimizationproblemsandnoiseresistance •Coordinationstrategiesanddistributedcontrol:directandindirectschemes;algorithmsandmethods;performance evaluation •Applicationexamplesindistributedsensingandaction Keywords Artificialintelligence,swarmintelligence,distributedrobotics,sensornetworks,modeling,machine-learning,control LearningPrerequisites Requiredcourses Fundamentalsinanalysis,probability,andprogrammingforbothcompiledandinterpretedlanguages Recommendedcourses Basicknowledgeinstatistics,programminglanguageusedinthecourse(C,Matlab,Python),andsignals Distributedintelligentsystems Page1/3"}
{"pack_id": "french_pack", "section_title": "Distributed intelligent systems", "page": 228, "chunk_id": "french_pack_228_0", "content": "228 2020-2021COURSEBOOKLET andsystems LearningOutcomes Bytheendofthecourse,thestudentmustbeableto: •Designcontrolalgorithms •Formulateamodelatdifferentlevelofabstractionforadistributedintelligentsystem •Analyzeamodelofadistributedintelligentsystem •Analyzeadistributedcoordinationstrategy/algorithm •Designadistributedcoordinationstrategy/algorithm •Implementcodeforsinglerobotandmulti-robotsystems •Carryoutsystematicperformanceevaluationofadistributedintelligentsystem •Applymodelinganddesignmethodstospecificproblemsrequiringdistributedsensingandaction •Optimizeacontrollerorasetofpossiblycoordinatedcontrollersusingmodel-basedordata-drivenmethods Transversalskills •Demonstrateacapacityforcreativity. •Accessandevaluateappropriatesourcesofinformation. •Collectdata. •Planandcarryoutactivitiesinawaywhichmakesoptimaluseofavailabletimeandotherresources. •Makeanoralpresentation. •Writeascientificortechnicalreport. •Evaluateone'sownperformanceintheteam,receiveandrespondappropriatelytofeedback. Teachingmethods Ex-cathedralectures,assistedexercises,andacourseprojectinvolvingteamwork Expectedstudentactivities Attendinglectures,carryingoutexercisesandthecourseproject,andreadinghandouts. Assessmentmethods Continuouscontrol(40%)withfinalwrittenexam(60%). Supervision Officehours Yes Assistants Yes Forum Yes Resources Bibliography Lecturenotes,selectedpapersandbookchaptersdistributedateachlecture. Websites •https://disal.epfl.ch/teaching/distributed_intelligent_systems/ Distributedintelligentsystems Page2/3"}
{"pack_id": "french_pack", "section_title": "Distributed intelligent systems", "page": 229, "chunk_id": "french_pack_229_0", "content": "229 2020-2021COURSEBOOKLET MoodleLink •https://moodle.epfl.ch/course/view.php?id=15472 Prerequisitefor R&Dactivitiesinengineering Distributedintelligentsystems Page3/3"}
{"pack_id": "french_pack", "section_title": "Dynamical system theory for engineers", "page": 230, "chunk_id": "french_pack_230_0", "content": "230 2020-2021COURSEBOOKLET COM-502 Dynamical system theory for engineers ThiranPatrick Cursus Sem. Type Language English Biocomputingminor H Opt. Credits 4 Bioengineering MA3 Opt. Session Winter Semester Fall ComputationalNeurosciencesminor H Opt. Exam Written ComputationalscienceandEngineering MA1,MA3 Opt. Workload 120h Weeks 14 Computerscience MA1,MA3 Opt. Hours 3weekly Cybersecurity MA1,MA3 Opt. Lecture 2weekly LifeSciencesEngineering MA1,MA3 Opt. Exercises 1weekly Numberof Robotics,ControlandIntelligentSystems Opt. positions SCmasterEPFL MA1,MA3 Opt. Sciencesduvivant MA3 Opt. SystemsEngineeringminor H Opt. Summary Linearandnonlineardynamicalsystemsarefoundinallfieldsofscienceandengineering.Afterashortreviewoflinear systemtheory,theclasswillexplainanddevelopthemaintoolsforthequalitativeanalysisofnonlinearsystems,bothin discrete-timeandcontinuous-time. Content •Introduction:Dynamicsoflinearandnonlinearsystems.Definitions;Unicityofasolution;LimitSets,Attractors. •LinearSystems:Solutions;Stabilityofautonomoussystems,Geometricalanalysis,connectionwithfrequency domainanalysis. •NonlinearSystems:Solutions;Examples.Large-scalenotionsofstability(Lyapunovfunctions).Hamiltonian systems,gradientsystems.Small-scalenotionsofstability(Linearization;stabilityandbasinofattractionofan equilibriumpoint,stabilityofperiodicsolutions,FloquetMultipliers).Graphicalmethodsfortheanalysisof low-dimensionalsystems.Introductiontostructuralstability,Bifurcationtheory.Introductiontochaoticsystems (Lyapunovexponents). •Theclassismethodology-driven.Itmaypresentsomelimitedexamplesofapplications,butitisnotapplication-driven. Keywords DynamicalSystems,Attractors,Equilibriumpoint,LimitCycles,Stability,LyapunovFunctions,Bifurcations,Lyapunov exponents. LearningPrerequisites Requiredcourses •Linearalgebra(MATH111orequivalent). •AnalysisI,II,III(MATH101,106,203orequivalent). •Circuits&SystemsII(EE205orequivalent)oraSystems&Signalsclass(MICRO310/311or equivalent). Recommendedcourses Dynamicalsystemtheoryforengineers Page 1 / 2"}
{"pack_id": "french_pack", "section_title": "Dynamical system theory for engineers", "page": 231, "chunk_id": "french_pack_231_0", "content": "231 2020-2021COURSEBOOKLET •Afirst-yearProbabiltyclass,suchasMATH-232,MATH-231,MATH-234(b),MATH-234(c),orequivalent. •AnalysisIV(MATH207orequivalent) Importantconceptstostartthecourse •LinearAlgebra(vectorspaces,matrixoperations,includinginversionandeigendecomposition). •Calculus(linearordinarydifferentialequations;Fourier,Laplaceandz-Transforms). •Basicnotionsoftopology. •Basicnotionsofprobability. LearningOutcomes Bytheendofthecourse,thestudentmustbeableto: •Analyzealinearornonlineardynamicalsystem. •Anticipatetheasymptoticbehaviorofadynamicalsystem. •Assess/Evaluatethestabilityofadynamicalsystem. •Identifythetypeofsolutionsofadynamicalsytem. Teachingmethods •Lectures(blackboard),2hperweek •Exercisesession,1hperweek. Expectedstudentactivities Exercisesinclassandathome(paperandpencil,andMatlab) Assessmentmethods 1. Mid-term:cannotbegiventhisyear. 2. Finalexam100% Supervision Officehours Yes Assistants Yes Forum Yes Resources Bibliography Coursenotes;textbooksgivenasreferenceonthemoodlepageofthecourse. Notes/Handbook Coursenotes,exercisesandsolutionsprovidedonthemoodlepageofthecourse. MoodleLink •http://moodle.epfl.ch/course/view.php?id=303 Prerequisitefor Classes using methods from dynamical systems. Dynamicalsystemtheoryforengineers Page 2 / 2"}
{"pack_id": "french_pack", "section_title": "Embedded systems", "page": 232, "chunk_id": "french_pack_232_0", "content": "232 2020-2021COURSEBOOKLET CS-473 Embedded systems BeuchatRené Cursus Sem. Type Language English Computerscience MA1,MA3 Opt. Credits 4 Cybersecurity MA1,MA3 Opt. Session Winter Semester Fall ElectricalandElectronicalEngineering MA1,MA3 Opt. Exam Oral Microtechnics MA1,MA3 Opt. Workload 120h Weeks 14 MineurSTASChine H Opt. Hours 4weekly Robotics,ControlandIntelligentSystems Opt. Lecture 2weekly Robotics MA1,MA3 Opt. Project 2weekly Numberof SCmasterEPFL MA1,MA3 Opt. positions Summary Themaintopicsofthiscourseareunderstandinganddesigningembeddedsystemonaprogrammablecircuit(FPGA). StudentswillbeabletodesignacameraoraLCDcontrolleronanFPGAinVHDLandwillusetheircontrollerthrougha softcoreprocessor. Content • Microcontrollersandtheirassociatedprogrammableinterfaces(GPIO,Timer,SPI,A/D,PWM,interrupts) • Hardcore/softcoreprocessors(ie.NIOSII,ARM) • Memoryorganizations,little/bigendian • Synchronousbusses,dynamicbussizing(ie.AvalonBusinMemoryMappedmode) • Processorbusses,bussesrealizedinaFPGA • Serialbusses(ie.UART,SPI,i2c,...) • HowanLCDgraphicalscreenandaCMOScamerawork • FPGA-basedconceptionofEmbeddedSystems • EmbeddedsystemswithprocessorsonFPGAs Laboratoriesprovideknowledge&practicetodevelopanembeddedsystembasedonanFPGAdevice. Keywords microprocessors,microcontroller,FPGA,embeddedsystems,SoC,programmableinterface LearningPrerequisites Requiredcourses Introductiontocomputingsystems,Logicsystems,Computerarchitecture Recommendedcourses Electronic,Programming(C/C++),ProjectSystemOnChip Importantconceptstostartthecourse •Computerarchitecture(processor,memory,programmableinterfaces) •ProcessorArchitecture(PC,registers,ALU,instructiondecoding,instructionexecution) •KnowledgeofCprogramminglanguage Embeddedsystems Page1/3"}
{"pack_id": "french_pack", "section_title": "Embedded systems", "page": 233, "chunk_id": "french_pack_233_0", "content": "233 2020-2021COURSEBOOKLET •KnowledgeofVHDL LearningOutcomes Bytheendofthecourse,thestudentmustbeableto: •DesignanembeddedsystemonanFPGA •AnalyzeaspecificproblemtobesolvedandproposeanFPGA-basedsystemtosolveit •Implementasolutiontothegivenproblem •Realizeandsimulatethedesign •TestthedevelopedsolutiononanFPGA •Usecomplexdevelopmenttoolsandhardwaredebuggingtoolssuchasalogicanalyzerandanoscilloscope Transversalskills •Useaworkmethodologyappropriatetothetask. •Negotiateeffectivelywithinthegroup. •Setobjectivesanddesignanactionplantoreachthoseobjectives. •Continuetoworkthroughdifficultiesorinitialfailuretofindoptimalsolutions. •UsebothgeneralanddomainspecificITresourcesandtools •Makeanoralpresentation. Teachingmethods Excathedraandexercises,laboratoriesbyspecificsub-topics,finalmini-project Expectedstudentactivities •Readinganddeepeningofcourseconcepts •Preparationofexercisesperformedinthelaboratory •Writingreportsondifferentlabs •Realizationofafinalmini-projectbygroupwithoralpresentation,reportanddemonstration Assessmentmethods Withcontinuouscontrol. alllabs30%,mini-projet20%,oralexam50% Supervision Officehours No Assistants Yes Forum Yes Others CourseonMoodlewithforum Resources Virtualdesktopinfrastructure(VDI) No Bibliography Embeddedsystems Page2/3"}
{"pack_id": "french_pack", "section_title": "Embedded systems", "page": 234, "chunk_id": "french_pack_234_0", "content": "234 2020-2021COURSEBOOKLET Teachingnotesandsuggestedreadingmaterialonmoodle Specializeddatasheets(micro-controllers,FPGA)andstandards(ie,SPI,i2c,Amba,Avalon,etc) Notes/Handbook Documentsandslidesprovidedonmoodle MoodleLink •http://moodle.epfl.ch/course/view.php?id=1231 Prerequisitefor CS-476Real-timeembeddedsystems Embeddedsystems Page3/3"}
{"pack_id": "french_pack", "section_title": "Enterprise and service-oriented architecture", "page": 235, "chunk_id": "french_pack_235_0", "content": "235 2020-2021COURSEBOOKLET CS-491 Enterprise and service-oriented architecture WegmannAlain Cursus Sem. Type Language English Computerscience MA2,MA4 Opt. Credits 6 Cybersecurity MA2,MA4 Opt. Session Summer Semester Spring SCmasterEPFL MA2,MA4 Opt. Exam Oral Workload 180h Weeks 14 Hours 6weekly Lecture 6weekly Numberof positions Summary Inthiscourse,weteachhowtodefinetherequirementsforanITservicethatwouldbestservetheneedsofan organization.Thecourseistaughtusinganon-conventionalstyleinwhichthestudentslearnmostlythroughthestressof aseriesofconcreteexperiencesthatmimicreal-lifesituation. Content ThegoalofthiscourseiscloselyrelatedtoIT,butasubstantialpartthematerialisrelatedtobusiness,aswellasto systemsthinking.Evenifsomevisualprogrammingistaught,thecoursecanbetakenbynonIT-students.Thecourse canbeespeciallyusefulforstudentsinterestedinbusinessanalysis,ITconsultingandinthespecificationpartofIT development. Detailedcontents: 1)BusinessPart(4weeks):practicalexperimentationandtheoreticalunderstandingofthekeybusinessprocessesofa manufacturingcompany:tendering,productdevelopment,manufacturing,qualitymanagementandaccounting. 2)Business/ITPart(7weeks):specificationofanITapplicationthatprovidesafter-salesservice.Wedoacritical analysisofBPMN.Wethenteachthefollowingtechniques:interviews&contextualinquiry,analysis/designofthe businessservicesandoftheITservices.Thespecifiedsolutionisimplementedinacommercialtool(Softwareasa Service).TheunderlyingtheorytobusinessandITservicedesignissystemthinking. 3)ITConsultingandStrategyPart(3weeks):ITstrategyanditsimpactontechnologyselection,enterprise architecturetocoordinateITtechnology,tenderprocessappliedtoITdevelopment. Inthiscourse,thestudentshavetodoacriticalanalysisofsome\"classics\"oftheITlitterature. Keywords Tenderprocess,quotation,purchaseorder,leadtime,billofmaterial,developmentprocess,Vprocess,spiraleprocess, qualitysystem,traceability,ISO9000,financialstatements,year-endbookclosing,ERP, BPMN,businessprocessreengineering,interview,contextualinquiry,businessservice,ITservice,requirements engineeing,SEAMservicemodeling,SEAMmotivationmodeling. Interpretivism,model/reality,homeostasis,appreciativesystems LearningOutcomes Bytheendofthecourse,thestudentmustbeableto: •Describebusinessdomains(sales,engineering,manufacturing,quality,accounting) •Coordinatereplytoatender •DesignqualitysystembasedonISO9000 Enterpriseandservice-orientedarchitecture Page1/2"}
{"pack_id": "french_pack", "section_title": "Enterprise and service-oriented architecture", "page": 236, "chunk_id": "french_pack_236_0", "content": "236 2020-2021COURSEBOOKLET •Analyzebusinessstakeholderperceptionsandmotivations •Assess/Evaluateexistingbusinessprocesses •Conductoverallbusiness/ITalignmentproject •DesignspecificationsofbusinessservicesandITservices •ImplementprototypeonaSaaS Transversalskills •Continuetoworkthroughdifficultiesorinitialfailuretofindoptimalsolutions. •UsebothgeneralanddomainspecificITresourcesandtools •Writeascientificortechnicalreport. •Collectdata. •Makeanoralpresentation. •Summarizeanarticleoratechnicalreport. Teachingmethods Experientiallearningandgroupwork Resources Virtualdesktopinfrastructure(VDI) No Bibliography ISO9001:2015-availablethroughSAGAviaEPFLlibrary OMG(2004),IntroductiontoBPMN HammerM.(1990).reengineeringWork:Don'tAutomate,Obliterate,HarvardBusinessReview,July- August Regev,g.etal.(2016)WhatWeHaveUnlearnedSincetheEarlyDaysoftheProcessMovement?, Enterprise,Business-ProcessandInformationSystemsModeling,113-121 Beyer,H.R.andK.Holtzblatt(1995).\"Apprenticingwiththecustomer.\"Commun.ACM38(5):45-52. Beyer,H.andK.Holtzblatt(1999).\"Contextualdesign.\"interactions6(1):32-42. MarkusM.L.,KeilM.(1994).IfWeBuildIt,TheyWillCome:DesigningInformationSystemsthatPeople Wanttouse,SloanManagementReview;Summer1994;35,4;ABI/INFORMGlobalpg.11 Regev,G.etal.(2013)WhatWeCanLearnaboutBusinessModelingfromHomeostasis,LectureNotesin BusinessInformationProcessing,142,1-15,2003 Regev,G.etal.(2011)ServiceSystemsandValueModelingfromanAppreciativeSystemPerspective, ExploringServicesScience,82,146-157,2011 Carr,N.G.(2003).\"ITDoesn'tmatter\",HarvardBusinessReview Zachman,J.A.(1987).\"Aframeworkforinformationsystemsarchitecture.\"IBMSyst.J.26(3):276-292. Ressourcesenbibliothèque •Contextualdesign/Beyer Enterpriseandservice-orientedarchitecture Page2/2"}
{"pack_id": "french_pack", "section_title": "Experience design", "page": 237, "chunk_id": "french_pack_237_0", "content": "237 2020-2021COURSEBOOKLET CS-489 Experience design HuangJeffrey Cursus Sem. Type Language English Computerscience MA1,MA3 Opt. Credits 6 Cybersecurity MA1,MA3 Opt. Session Winter Semester Fall SCmasterEPFL MA1,MA3 Opt. Exam Duringthe semester Workload 180h Weeks 14 Hours 6weekly Lecture 2weekly Project 4weekly Numberof positions Summary Aswemovetowardsadesigneconomy,thesuccessofnewproducts,systemsandservicesdependincreasinglyonthe excellenceofpersonalexperience.Thiscourseintroducesstudentstothenotionandpracticeofexperiencedesign followingahands-on,studio-basedapproach. Content Experiencedesigninpracticeencompassesthecollection,analysisanddesignofusersexperiencesbasedonadeep understandingofthecontextconcerned.Wewillexaminetheseprocessesusingaseriesofmini-workshops,torapidly iterateonmultipledesignexperienceoptions.Thegoalistocreateameaningful,interactive,data-driven(andpossibly AI-assisted)digitalinterfaceandphysicalprototypesfornewexperiences. Weexplorequestionsattheintersectionofphysicalanddigitalarchitecturethroughanexperiencedesignapproach, involving:(1)amappingofthesocialdynamicssurroundinganexperience;(2)acriticalanalysisofthegeographicaland temporalflows(experiencejourneys);and(3)adetailedevaluationoftheexperiencetouchpoints.Basedonthis experiencediagnosis,weproposealternativedesignsofexperienceblueprintsthatcombinephysicalanddigitaltouch pointswhichinturnwillconstitutetheelementsoffuturetypologies. Ourparticularfocuswillbeoninformationintensivetypologiesinthecontemporarycity,suchasmuseums,libraries, airports,banks,boutiques,governments,hospitalsandhomes.Eachyear,wewillinvestigateadifferenttypology.Digital interfacesandaugmentedartifactswillbeconsideredaspossiblealternativestoreconfigurethesensesofperception, redistributetime,andreorchestratetheconfigurationofsocial,emotionalandspatialexperiences. TheseminarwillcombinestudentsfrombothICandENACtoworktogetherinarealinterdisciplinaryprocess. Keywords UserExperience(UX)Design,DesignThinking,JourneyMapping,Optioneering,CriticalPrototyping,ValueProposition LearningPrerequisites Requiredcourses BachelorinComputerScienceorequivalent LearningOutcomes Bytheendofthecourse,thestudentmustbeableto: •Identifyissuesofexperiencedesigninrelationtoanactualdesignproject •Performrigorousanalysisoftheproblemspaceandmapthedesignopportunities •Developalternativedesignconceptsforfutureartifacts Experiencedesign Page1/2"}
{"pack_id": "french_pack", "section_title": "Experience design", "page": 238, "chunk_id": "french_pack_238_0", "content": "238 2020-2021COURSEBOOKLET •Translatedesignconceptsintomeaningfulexperiencesthroughiterativeprototypingatappropriatescalesandlevels ofgranularity •Createconvincingargumentsforthedesignpropositionsandpersuasivevisualandtangibleevidence Teachingmethods Workshops,Designreviews,Presentations,Groupprojects Expectedstudentactivities Groupdiscussion,Casestudies,DesignReviews,Pin-Up,DeskCrits Assessmentmethods Gradingwillbebaseduponthequalityoftheprojectsinthepreliminaryworkshops(30%),intermediaryreviews(20%) andinthefinalreview(50%).Projectswillbereviewedandassessedbasedontheirconceptualstrength,thecoherence oftheirtranslationintoprototypes,theirnarrativeclarityandexperientialpower,andthepersuasivenessoftheir communication,bothorallyandthroughthepresentedartifacts. Supervision Officehours Yes Assistants Yes Resources Bibliography Tobemadeavailableduringthecourse Experiencedesign Page2/2"}
{"pack_id": "french_pack", "section_title": "Formal verification", "page": 239, "chunk_id": "french_pack_239_0", "content": "239 2020-2021COURSEBOOKLET CS-550 Formal verification KuncakViktor Cursus Sem. Type Language English ComputerandCommunicationSciences Opt. Credits 6 Computerscience MA1,MA3 Opt. Session Winter Semester Fall Cybersecurity MA1,MA3 Opt. Exam Duringthe DataScience MA1,MA3 Opt. semester Workload 180h SCmasterEPFL MA1,MA3 Opt. Weeks 14 Hours 6weekly Lecture 2weekly Exercises 2weekly Practical 2weekly work Numberof positions Summary Weintroduceformalverificationasanapproachfordevelopinghighlyreliablesystems.Formalverificationfindsproofs thatcomputersystemsworkunderallrelevantscenarios.Wewilllearnhowtouseformalverificationtoolsandexplain thetheoryandthepracticebehindthem. Content Topicsmayincludeamongtheotherssomeofthefollowing: • ImportanceofReliableSystems.MethodologyofFormalVerification.SoundnessandCompletenessinModelingand Tools.SuccessfulToolsandFlagshipCaseStudies • ReviewofSets,Relations,Computability,PropositionalandFirst-OrderLogicSyntax,Semantics,SequentCalculus. • CompletenessandSemi-DecidabilityforFirst-OrderLogic.InductiveDefinitionsandProofTrees.Higher-OrderLogic andLCFApproach. • StateMachines.TransitionFormulas.Traces.StrongestPostconditionsandWeakestPreconditions. • HoareLogic.InductiveInvariants.Well-FoundedRelationsandTerminationMeasures • ModelingHardware:VerilogtoSequentialCircuits • LinearTemporalLogic.SystemVerilogAssertions.Monitors • SATSolversandBoundedModelChecking • ModelCheckingusingBinaryDecisionDiagrams • LoopInvariants.HoareLogic.StaticallyCheckedFunctionContracts.RelationalSemanticsandFixed-Point Semantics • SymbolicExecution.SatisfiabilityModuloTheories • AbstractInterpretationandPredicateAbstraction • InformationFlowandTaintAnalysis • VerificationofSecurityProtocols • DependentandRefinementTypes LearningPrerequisites Recommendedcourses ComputerLanguageProcessing/Compilers Importantconceptstostartthecourse Formalverification Page1/3"}
{"pack_id": "french_pack", "section_title": "Formal verification", "page": 240, "chunk_id": "french_pack_240_0", "content": "240 2020-2021COURSEBOOKLET DiscreteMathematics LearningOutcomes Bytheendofthecourse,thestudentmustbeableto: •Formalizespecifications •Synthesizeloopinvariants •Specifysoftwarefunctionality •Generalizeinductivehypothesis •Critiquecurrentsoftwaredevelopmentpractices Teachingmethods Instructorswillpresentlecturesandexercisesandsuperviselabsonstudentlaptops. Expectedstudentactivities Followthecoursematerialandcompleteandexplainprojectsduringthesemester. Assessmentmethods Thegradeisbasedonthecode,documentation,andexplanationofprojectsduringthesemester. Therearenowrittenexams. Supervision Officehours Yes Assistants Yes Forum Yes Resources Bibliography • MichaelHuthandMarkRayan:LogicinComputerScience-ModellingandReasoningaboutSystems. CambridgeUniversityPress2004. • HandbookofModelChecking,https://www.springer.com/de/book/9783319105741Springer2018. IncludingChapterModelCheckingSecurityProtocolsbyDavidBasin. • TobiasNipkow,GerwinKlein:ConcreteSemanticswithIsabelle/HOL. http://concrete-semantics.org/concrete-semantics.pdf • AaronBradleyandZoharManna:TheCalculusofComputation-DecisionProcedureswithApplications toVerification,Springer2007. • Nielson,Flemming,Nielson,HanneR.,Hankin,Chris:PrinciplesofProgramAnalysis.ISBN 978-3-662-03811-6.Springer1999. • PeterB.Andrews:AnIntroductiontoMathematicalLogicandTypeTheory(ToTruthThroughProof), Springer2002. • http://logitext.mit.edu/tutorial Ressourcesenbibliothèque •Handbookofmodelchecking •Introductiontomathematicallogicandtypetheory •HandbookofModelChecking Formalverification Page2/3"}
{"pack_id": "french_pack", "section_title": "Formal verification", "page": 241, "chunk_id": "french_pack_241_0", "content": "241 2020-2021COURSEBOOKLET •TobiasNipkow,GerwinKlein:ConcreteSemanticswithIsabelle/HOL •MichaelHuthandMarkRayan:LogicinComputerScience-ModellingandReasoningaboutSystems •PeterB.Andrews:AnIntroductiontoMathematicalLogicandTypeTheory •Nielson,Flemming,Nielson,HanneR.,Hankin,Chris:PrinciplesofProgramAnalysis •AaronBradleyandZoharManna:TheCalculusofComputation-DecisionProcedureswithApplicationstoVerification Websites •https://lara.epfl.ch/w/fv MoodleLink •https://moodle.epfl.ch/course/view.php?id=13051 Videos •https://youtu.be/mm6CCGSDmOw?t=39 •https://www.youtube.com/watch?v=oLS_y842fMc •https://www.youtube.com/channel/UCP2eLEql4tROYmIYm5mA27A Formalverification Page3/3"}
{"pack_id": "french_pack", "section_title": "Foundations of software", "page": 242, "chunk_id": "french_pack_242_0", "content": "242 2020-2021COURSEBOOKLET CS-452 Foundations of software OderskyMartin Cursus Sem. Type Language English Computerscienceminor H Opt. Credits 4 Computerscience MA1,MA3 Obl. Session Winter Semester Fall Cybersecurity MA1,MA3 Obl. Exam Written Workload 120h Weeks 14 Hours 4weekly Lecture 2weekly Exercises 2weekly Numberof positions Summary Thecourseintroducesthefoundationsonwhichprogramsandprogramminglanguagesarebuilt.Itintroducessyntax, typesandsemanticsasbuildingblocksthattogetherdefinethepropertiesofaprogrampartoralanguage.Studentswill learnhowtoapplytheseconceptsintheirreasoning. Content -simpletypes,lambda-calculus -normalization,references,exceptions -subtyping -recursivetypes -polymorphism -advancesfeaturesoftheScalatypesystem LearningPrerequisites Recommendedcourses Advancedtopicsinprogramming,Compilerconstruction Importantconceptstostartthecourse Functionalprogramming Basicknowledgeofformallanguages LearningOutcomes Bytheendofthecourse,thestudentmustbeableto: •Arguedesigndecisionsofprogramminglanguages •Assess/Evaluatesoundnessoftypesystems •Composehigher-orderfunctions •Verifyprogressandpreservationintypesystems •Workout/Determineoperationalequivalences •Carryoutprojectsof2-3weeksduration •Distinguishvalidfrominvalidproofs •Implementtypesystemsandoperationalsemantics Transversalskills Foundationsofsoftware Page1/2"}
{"pack_id": "french_pack", "section_title": "Foundations of software", "page": 243, "chunk_id": "french_pack_243_0", "content": "243 2020-2021COURSEBOOKLET •Assessprogressagainsttheplan,andadapttheplanasappropriate. •Evaluateone'sownperformanceintheteam,receiveandrespondappropriatelytofeedback. •Identifythedifferentrolesthatareinvolvedinwell-functioningteamsandassumedifferentroles,includingleadership roles. •Managepriorities. Teachingmethods Excathedra,practicalexercises Assessmentmethods Withcontinuouscontrol Resources Ressourcesenbibliothèque •TypesandProgrammingLanguages/Pierce Websites •http://lampwww.epfl.ch/teaching/index.html.en Foundationsofsoftware Page2/2"}
{"pack_id": "french_pack", "section_title": "Gödel and recursivity", "page": 244, "chunk_id": "french_pack_244_0", "content": "244 2020-2021COURSEBOOKLET MATH-483 Gödel and recursivity DuparcJacques Cursus Sem. Type Language English Computerscience MA1,MA3 Opt. Credits 5 Cybersecurity MA1,MA3 Opt. Session Winter Semester Fall Ing.-math MA1,MA3 Opt. Exam Written Mathématicien MA1,MA3 Opt. Workload 150h Weeks 14 SCmasterEPFL MA1,MA3 Opt. Hours 4weekly Lecture 2weekly Exercises 2weekly Numberof positions Summary Gödelincompletenesstheoremsandmathematicalfoundationsofcomputerscience Content Gödel'stheorems: PeanoandRobinsonArithmetics.Representablefunctions.Arithmeticofsyntax.Incompleteness,andundecidability theorems. Recursivity: TuringMachinesandvariants.TheChurch-TuringThesis.UniversalTuringMachine.Undecidableproblems(thehalting andthePost-Correspondanceproblems).Reducibility.Thearithmeticalhierarchy.RelationstoTuringmachines.Turing degrees. Keywords Gödel,incompletenesstheorems,Peanoarithmetic,Robinsonarithmetic,decidability,recursivelyenumarable, arithmeticalhierarchy,Turingmachine,Turingdegrees,jumpoperator,primitiverecursivefunctions,recursivefunctions, automata,pushdownautomata,regularlanguages,context-freelanguages,recursivelanguages,haltingproblem, universalTuringmachine,Churchthesis. LearningPrerequisites Recommendedcourses Mathematicallogic(orequivalent).Agoodunderstandingof1storderlogicisrequired-inparticularthe relationbetweensyntaxandsemantics. Importantconceptstostartthecourse 1storderlogic:syntax,semantics,prooftheory,completenesstheorem,compactnesstheorem, Löwenheim-Skolemtheorem. LearningOutcomes Bytheendofthecourse,thestudentmustbeableto: •Estimatewhetheragiventheory,function,languageisrecursiveorno •Decidetheclassthatalanguagebelongsto(regular,context-free,recursive,...) •Elaborateanautomaton •DesignaTuringmachine Gödelandrecursivity Page1/3"}
{"pack_id": "french_pack", "section_title": "Gödel and recursivity", "page": 245, "chunk_id": "french_pack_245_0", "content": "245 2020-2021COURSEBOOKLET •FormalizeaproofinPeanoarithmetic •Sketchtheincompletenesstheorems •Proposeanon-standardmodel •ArguewhyHilbertprogramfailed Teachingmethods Excathedralectureandexercises Assessmentmethods Written:3hours Danslecasdel’art.3al.5duRèglementdesection,l’enseignantdécidedelaformedel’examenqu’ilcommuniqueaux étudiantsconcernés. Supervision Officehours Yes Assistants Yes Forum Yes Resources Virtualdesktopinfrastructure(VDI) No Bibliography SetTheory: •ThomasJech:Settheory,Springer2006 •KennethKunen:Settheory,Springer,1983 •Jean-LouisKrivine:Theorydesensembles,2007 •PatrickDehornoy:Logiqueetthéoriedesensembles;Notesdecours,FIMFAENS: http://www.math.unicaen.fr/~dehornoy/surveys.html •YiannisMoschovakis:Notesonsettheory,Springer2006 •KarelHrbacekandThomasJech:IntroductiontoSettheory,(3dedition),1999 RecursionTheory: •MichealSipser:IntroductiontotheTheoryofComputation,ThomsonCourseTechnologyBoston,2006 •PiergiorgioOdifreddi:Classicalrecursiontheory,vol.1and2,Springer,1999 •RobertI.Soare:RecursivelyEnumerableSetsandDegres,AStudyofComputableFunctionsand ComputablyGeneratedSets,Springer-Verlag1987 •NigelCutland:Computability,anintroductiontorecursivefunctiontheory,1980 •RaymondM.Smullyan:recursiontheoryformethamathematics,Oxford,1993 Prooftheory: • WolframPohlers:ProofTheory,thefirststepintoimpredicativity,Springer,2008 •A.S.Troelstra,H.Schwichtenberg,andAnneS.Troelstra:Basicprooftheory,Cambridge,2000 •S.R.Buss:Handbookofprooftheory,Springer,1998 Gödel'sresults: •RaymondM.Smullyan:Gödel'sincompletenesstheorems,Oxford,1992 •PeterSmith:AnintroductiontoGödel'stheorems,Cambridge,2008 Gödelandrecursivity Page2/3"}
{"pack_id": "french_pack", "section_title": "Gödel and recursivity", "page": 246, "chunk_id": "french_pack_246_0", "content": "246 2020-2021COURSEBOOKLET •TorkelFranzen:Inexhaustibility,anonexhaustivetreatment,AKPeteres,2002 •MelvinFitting:Incompletenessinthelandofsets,King'sCollege,2007 •TorkelFranzen:Gödel'stheorem:anincompleteguidetoitsuseandabuse,AKPeters,2005 Ressourcesenbibliothèque •Théoriedesensembles/Krivine •Inexhaustibility,anonexhaustivetreatment/Franzen •ProofTheory/Pohlers •Notesontheory/Moschovakis •Basicprooftheory/Troelstra •IntroductiontotheTheoryofComputation/Sipser •Handbookofprooftheory/Buss •Settheory/Jech •Classicalrecursiontheory/Odifreddi •Recursiontheoryformethamathematics/Smullyan •Settheory/Kunen • Incompletenessinthelandofsets/Fitting •RecursivelyEnumerableSetsandDegres/Soare •Gödel'stheorem/Franzen •Computability,anintroductiontorecursivefunctiontheory/Cutland •Logiqueetthéoriedesensembles/Dehornoy • Gödel'sincompletenesstheorems/Smullyan •AnintroductiontoGödel'stheorems/Smith •IntroductiontoSettheory/Hrbacek Websites •http://www.hec.unil.ch/logique/enseignement/recursivity MoodleLink •http://moodle.epfl.ch/course/view.php?id=14569 Gödelandrecursivity Page3/3"}
{"pack_id": "french_pack", "section_title": "Image processing I", "page": 247, "chunk_id": "french_pack_247_0", "content": "247 2020-2021COURSEBOOKLET MICRO-511 Image processing I UnserMichaël,VanDeVilleDimitri Cursus Sem. Type Language English Biocomputingminor H Opt. Credits 3 Bioengineering MA3 Opt. Session Winter Semester Fall ComputationalNeurosciencesminor H Opt. Exam Written ComputationalscienceandEngineering MA1,MA3 Opt. Workload 90h Weeks 14 Computerscience MA1,MA3 Opt. Hours 3weekly Cybersecurity MA1,MA3 Opt. Lecture 3weekly DigitalHumanities MA1,MA3 Opt. Numberof positions EnvironmentalSciencesandEngineering MA1,MA3 Opt. LifeSciencesEngineering MA1,MA3 Opt. Microtechnics MA1,MA3 Opt. Neuroprostheticsminor H Opt. Photonicsminor H Opt. Robotics,ControlandIntelligentSystems Opt. Robotics MA1,MA3 Opt. SCmasterEPFL MA1,MA3 Opt. Sciencesduvivant MA3 Opt. Summary Introductiontothebasictechniquesofimageprocessing.Introductiontothedevelopmentofimage-processingsoftware andtoprototypinginJAVA.Applicationtoreal-worldexamplesinindustrialvisionandbiomedicalimaging. Content •Introduction.Imageprocessingversusimageanalysis.Applications.Systemcomponents. •Characterizationofcontinuousimages.Imageclasses.2DFouriertransform.Shift-invariantsystems. •Imageacquisition.Samplingtheory.Acquisitionsystems.Histogramandsimplestatistics.LinearandMax-Lloyd Quantization. •Characterizationofdiscreteimagesandlinearfiltering.z-transform.Convolution.Separability.FIRandIIRfilters. •Image-processingoperations.Pointoperators(thresholding,histogrammodification).Spatialoperators(smoothing, enhancement,nonlinearfiltering).Morphologicaloperators. •Introductiontoimageanalysisandcomputervision.Segmentation,edgedetection,objetdetection,image comparison. LearningPrerequisites Requiredcourses SignalsandSystemsI&II(orequivalent) Importantconceptstostartthecourse 1-Dsignalprocessing:convolution,Fouriertransform,z-transform LearningOutcomes ImageprocessingI Page1/2"}
{"pack_id": "french_pack", "section_title": "Image processing I", "page": 248, "chunk_id": "french_pack_248_0", "content": "248 2020-2021COURSEBOOKLET Bytheendofthecourse,thestudentmustbeableto: •ExploitthemultidimensionalFouriertransform •SelectappropriatelyHilbertspacesandinner-products •Optimize2-Dsamplingtoavoidaliasing •Formalizeconvolutionandopticalsystems •Designdigitalfiltersin2-D •Analyzemultidimensionallinearshift-invariantsystems •Applyimage-analysistechniques •Constructimage-processingsoftware •Elaboratemorphologicalfilters Transversalskills •Useaworkmethodologyappropriatetothetask. •Managepriorities. •UsebothgeneralanddomainspecificITresourcesandtools ImageprocessingI Page2/2"}
{"pack_id": "french_pack", "section_title": "Image processing II", "page": 249, "chunk_id": "french_pack_249_0", "content": "249 2020-2021COURSEBOOKLET MICRO-512 Image processing II LieblingMichael,SageDaniel,UnserMichaël,VanDeVilleDimitri Cursus Sem. Type Language English Biocomputingminor E Opt. Credits 3 Bioengineering MA4 Opt. Session Summer Semester Spring ComputationalNeurosciencesminor E Opt. Exam Written ComputationalscienceandEngineering MA2,MA4 Opt. Workload 90h Weeks 14 Computerscience MA2,MA4 Opt. Hours 3weekly Cybersecurity MA2,MA4 Opt. Lecture 3weekly DigitalHumanities MA2,MA4 Opt. Numberof positions LifeSciencesEngineering MA2,MA4 Opt. Microtechnics MA2,MA4 Opt. Neuroprostheticsminor E Opt. Photonicsminor E Opt. Robotics,ControlandIntelligentSystems Opt. Robotics MA2,MA4 Opt. SCmasterEPFL MA2,MA4 Opt. Sciencesduvivant MA4 Opt. Summary Studyofadvancedimageprocessing;mathematicalimaging.Developmentofimage-processingsoftwareand prototypinginJAVA;applicationtoreal-worldexamplesinindustrialvisionandbiomedicalimaging. Content •Reviewoffundamentalnotions.Multi-dimensionalFouriertransform.Convolution.z-transform.Digitalfilters. •Continuousrepresentationofdiscretedata.Splines.Interpolation.Geometrictransformations.Multi-scale decomposition(pyramidsandwavelets). •Imagetransforms.Karhunen-Loèvetransform(KLT).Discretecosinetransform(DCT).JPEGcoding.Image pyramids.Waveletdecomposition. •Reconstructionfromprojections.X-rayscanners.Radontransform.Centralslicetheorem.Filteredbackprojection. Iterativemethods. •Deconvolution.InverseandWienerfiltering.Matrixformulations.Iterativetechniques(ART). •Statisticalpatternclassification.Decisionmaking.Bayesianclassification.Parameterestimation.Supervised learning.Clustering. •Imageanalysis.Pixelclassification.Contourextractionandrepresentation.Shape.Texture.Snakesandactive contours. LearningPrerequisites Requiredcourses ImageProcessingI Recommendedcourses SignalsandSystemsI&II,linearalgebra,analysis ImageprocessingII Page1/2"}
{"pack_id": "french_pack", "section_title": "Image processing II", "page": 250, "chunk_id": "french_pack_250_0", "content": "250 2020-2021COURSEBOOKLET Importantconceptstostartthecourse Basicimageprocessingandrelatedanalyticaltools(Fouriertransform,z-tranform,etc.) LearningOutcomes Bytheendofthecourse,thestudentmustbeableto: •Constructinterpolationmodelsandcontinuous-discreterepresentations •Analyzeimagetransforms •Designimage-reconstructionalgorithms •Formalizemultiresolutionrepresentationsusingwavelets •Designdeconvolutionalgorithms •Performimageanalysisandfeatureextraction •Designimage-processingsoftware(plugins) •Synthesizesteerablefilters Transversalskills •Planandcarryoutactivitiesinawaywhichmakesoptimaluseofavailabletimeandotherresources. •Managepriorities. •Accessandevaluateappropriatesourcesofinformation. •UsebothgeneralanddomainspecificITresourcesandtools ImageprocessingII Page2/2"}
{"pack_id": "french_pack", "section_title": "Industrial automation", "page": 251, "chunk_id": "french_pack_251_0", "content": "251 2020-2021COURSEBOOKLET CS-487 Industrial automation SommerPhilippAlexander,TournierJean-Charles Cursus Sem. Type Language English Computerscience MA2,MA4 Opt. Credits 3 Cybersecurity MA2,MA4 Opt. Session Summer Semester Spring ElectricalandElectronicalEngineering MA2,MA4 Opt. Exam Oral EnergyScienceandTechnology MA2,MA4 Opt. Workload 90h Weeks 14 Robotics,ControlandIntelligentSystems Opt. Hours 3weekly Robotics MA2,MA4 Opt. Lecture 2weekly SCmasterEPFL MA2,MA4 Opt. Project 1weekly Numberof positions Remark Thiscoursecanbetakenbystudentsofallengineeringsections. Summary Thiscourseconsistsoftwoparts:1)architectureofautomationsystems,hands-onlab2)handlingoffaultsandfailures inreal-timesystems,includingfault-tolerantcomputing Content Trendslikedigitalizationandinternetofthingsaffectthewayindustrialplantsaredesigned,deployedandoperated. IndustrialAutomationcomprisesthecontrol,communicationandsoftwarearchitecturein(real-time)automationsystems: factories,energyproductionanddistribution,vehiclesandotherembeddedsystems. Keywords 1.Processesandplants,automationsystemarchitecture 2.Instrumentation,ProgrammableLogicControllersandembeddedcomputers 3.Industrialcommunicationnetworks,fieldbusses 4.Fielddeviceaccessprotocolsandapplicationprograminterfaces 5.Humaninterfaceandsupervision 6.ManufacturingExecutionSystems 8.Real-timeresponseandperformanceanalysis 9.Dependability(Reliability,Availability,Safety,...) LearningPrerequisites Recommendedcourses Communicationnetworks LearningOutcomes Bytheendofthecourse,thestudentmustbeableto: •Characterizethe(software)architectureofaautomationsystem •Applymethodsandtrade-offsinreal-timesystems •Analyzeaplant •Proposesuitableautomationsolutionsmeetingtherequirements •Analyzethereliability,availability,safetyofasystem Industrialautomation Page1/2"}
{"pack_id": "french_pack", "section_title": "Industrial automation", "page": 252, "chunk_id": "french_pack_252_0", "content": "252 2020-2021COURSEBOOKLET Transversalskills •Writeascientificortechnicalreport. •UsebothgeneralanddomainspecificITresourcesandtools •Communicateeffectivelywithprofessionalsfromotherdisciplines. •Keepappropriatedocumentationforgroupmeetings. •Accessandevaluateappropriatesourcesofinformation. Teachingmethods Oralpresentationaidedbyslides,exercisesaspartofthelecture,practicalwork(workshopatSiemensandgroup assignment). Expectedstudentactivities •Understandmaterialpresentedduringlecturesbyaskingquestionsand/orindependent(online)searches •AttendSiemensworkshop(onefulldayonSiemenspremisesinRenens) •Workongroupassignment •Hand-inartifactsforassignmentontime Assessmentmethods Assignment25%andfinaloralexam75% Resources Bibliography Nussbaumer,InformatiqueIndustrielle(EPFL) Olsson,Gustav&Rosen,Christian-industrialautomation,Dept.ofIndustrialElectricalEngineeringand Automation,LundUniversity,Lund,Sweden. Ressourcesenbibliothèque •InformatiqueIndustrielle/Nussbaumer MoodleLink •https://moodle.epfl.ch/course/view.php?id=14114 Industrialautomation Page2/2"}
{"pack_id": "french_pack", "section_title": "Information security and privacy", "page": 253, "chunk_id": "french_pack_253_0", "content": "253 2020-2021COURSEBOOKLET COM-402 Information security and privacy HubauxJean-Pierre,OechslinPhilippe Cursus Sem. Type Language English ComputationalscienceandEngineering MA1,MA3 Opt. Credits 6 ComputerandCommunicationSciences Opt. Session Winter Semester Fall Computerscienceminor H Opt. Exam Written Computerscience MA1,MA3 Obl. Workload 180h Weeks 14 Cybersecurityminor H Opt. Hours 6weekly Cybersecurity MA1,MA3 Obl. Lecture 3weekly DataScience MA1,MA3 Obl. Exercises 1weekly Project 2weekly Datascienceminor H Opt. Numberof Financialengineering MA1,MA3 Opt. positions SCmasterEPFL MA1,MA3 Obl. Summary Thiscourseprovidesanoverviewofinformationsecurityandprivacytopics.Itintroducesstudentstotheknowledgeand toolstheywillneedtodealwiththesecurity/privacychallengestheyarelikelytoencounterintoday'sBigDataworld.The toolsareillustratedwithrelevantapplications. Content •Overviewofcyberthreats • Exploitingvulnerabilities •Authentication,accesscontrol,compartmentalization •Basicappliedcryptography •Operationalsecuritypracticesandfailures •Machinelearningandprivacy •Dataanonymizationandde-anonymizationtechniques •Privacyenhancingtechnologies •Blockchainanddecentralization Keywords security,privacy,protection,intrusion,anonymization,cryptography LearningPrerequisites Requiredcourses Informationsecurityandprivacy Page1/2"}
{"pack_id": "french_pack", "section_title": "Information security and privacy", "page": 254, "chunk_id": "french_pack_254_0", "content": "254 2020-2021COURSEBOOKLET COM-301Computersecurity BasicPythonprogrammingorbetter Basicnetworkingknowledge LearningOutcomes Bytheendofthecourse,thestudentmustbeableto: •Understandthemostimportantclassesofinformationsecurity/privacyrisksintoday's\"BigData\"environment •Exerciseabasic,criticalsetof\"bestpractices\"forhandlingsensitiveinformation •Exercisecompetentoperationalsecuritypracticesintheirhomeandprofessionallives •Understandatoverviewlevelthekeytechnicaltoolsavailableforsecurity/privacyprotection Expectedstudentactivities Attendinglectures,solvingassignedproblemsand\"hands-on\"exercises,readinganddemonstratingunderstandingof providedmaterials. Assessmentmethods •continuouscontrol:30%ofthegrade •finalexam:70%ofthegrade Informationsecurityandprivacy Page2/2"}
{"pack_id": "french_pack", "section_title": "Information theory and coding", "page": 255, "chunk_id": "french_pack_255_0", "content": "255 2020-2021COURSEBOOKLET COM-404 Information theory and coding TelatarEmre Cursus Sem. Type Language English Communicationsystemsminor H Opt. Credits 7 ComputerandCommunicationSciences Opt. Session Winter Semester Fall Computerscience MA1,MA3 Opt. Exam Written Cybersecurity MA1,MA3 Opt. Workload 210h Weeks 14 DataScience MA1,MA3 Opt. Hours 6weekly ElectricalandElectronicalEngineering MA1,MA3 Opt. Lecture 4weekly SCmasterEPFL MA1,MA3 Obl. Exercises 2weekly Numberof positions Summary Themathematicalprinciplesofcommunicationthatgovernthecompressionandtransmissionofdataandthedesignof efficientmethodsofdoingso. Content 1.Mathematicaldefinitionofinformationandthestudyofitsproperties. 2.Sourcecoding:efficientrepresentationofmessagesources. 3.Communicationchannelsandtheircapacity. 4.Codingforreliablecommunicationovernoisychannels. 5.Multi-usercommunications:multiaccessandbroadcastchannels. 6.Lossysourcecoding:approximaterepresentationofmessagesources. 7.InformationTheoryandstatistics LearningOutcomes Bytheendofthecourse,thestudentmustbeableto: •Formulatethefundamenalconceptsofinformationtheorysuchasentropy,mutualinformation,channelcapacity •Elaboratetheprinciplesofsourcecodinganddatatransmission •Analyzesourcecodesandchannelcodes •Applyinformationtheoreticmethodstonovelsettings Teachingmethods Excathedra+exercises Assessmentmethods Withcontinuouscontrol Resources Ressourcesenbibliothèque •ElementsofInformationTheory/Cover Informationtheoryandcoding Page1/1"}
{"pack_id": "french_pack", "section_title": "Intelligent agents", "page": 256, "chunk_id": "french_pack_256_0", "content": "256 2020-2021COURSEBOOKLET CS-430 Intelligent agents FaltingsBoi Cursus Sem. Type Language English ComputerandCommunicationSciences Opt. Credits 6 Computerscienceminor H Opt. Session Winter Semester Fall Computerscience MA1,MA3 Opt. Exam Duringthe Cybersecurity MA1,MA3 Opt. semester Workload 180h DataScience MA1,MA3 Opt. Weeks 14 Datascienceminor H Opt. Hours 6weekly EnergyManagementandSustainability MA1,MA3 Opt. Lecture 3weekly Exercises 3weekly Financialengineeringminor H Opt. Numberof Financialengineering MA1,MA3 Opt. positions Robotics,ControlandIntelligentSystems Opt. Robotics MA1,MA3 Opt. SCmasterEPFL MA1,MA3 Opt. Summary Softwareagentsarewidelyusedtocontrolphysical,economicandfinancialprocesses.Thecoursepresentspractical methodsforimplementingsoftwareagentsandmulti-agentsystems,supportedbyprogrammingexercises,andthe theoreticalunderpinningsincludingcomputationalgametheory. Content Thecoursecontains4mainsubjectareas: 1)Basicmodelsandalgorithmsforindividualagents: Modelsandalgorithmsforrational,goal-orientedbehaviorinagents:reactiveagents,reinforcementlearning, exploration-exploitationtradeoff,AIplanningmethods. 2)Multi-agentsystems: multi-agentplanning,coordinationtechniquesformulti-agentsystems,distributedalgorithmsforconstraintsatisfaction. 3)Self-interestedagents: Modelsandalgorithmsforimplementingself-interestedagentsmotivatedbyeconomicprinciples:elementsof computationalgametheory,modelsandalgorithmsforautomatednegotiation,socialchoice,mechanismdesign, electronicauctionsandmarketplaces. 4)Implementingmulti-agentsystems: Agentplatforms,ontologiesandmarkuplanguages,webservicesandstandardsfortheirdefinitionandindexing. LearningPrerequisites Recommendedcourses IntelligenceArtificielleoranotherintroductorycoursetoAI LearningOutcomes Bytheendofthecourse,thestudentmustbeableto: •Chooseandimplementmethodsforrationaldecisionmakinginsoftwareagents,basedondecisionprocessesandAI planningtechniques •Chooseandimplementmethodsforefficientrationaldecisionmakinginteamsofmultiplesoftwareagents •Modelscenarioswithmultipleself-interestedagentsinthelanguageofgametheory •Evaluatethefeasibilityofachievinggoalswithself-interestedagentsusinggametheory Intelligentagents Page1/2"}
{"pack_id": "french_pack", "section_title": "Intelligent agents", "page": 257, "chunk_id": "french_pack_257_0", "content": "257 2020-2021COURSEBOOKLET •Design,chooseandimplementmechanismsforself-interestedagentsusinggametheory •Implementsystemsofsoftwareagentsusingagentplatforms Teachingmethods Excathedra,practicalprogrammingexercises Expectedstudentactivities Lectures:3hours Reading:3hours Assignments/programming:4hours Assessmentmethods Mini-projectsandexercises40%,finalexam60% Resources Bibliography MichaelWooldridge:AnIntroductiontoMultiAgentSystems-SecondEdition,JohnWiley&Sons,2009 StuartRussellandPeterNorvig:ArtificialIntelligence:AModernApproach(2nd/3rdEdition),PrenticeHall SeriesinArtificialIntelligence,2003/2009. Ressourcesenbibliothèque •AnIntroductiontoMultiAgentSystems/Wooldridge •ArtificialIntelligence:AModernApproach/Russell Intelligentagents Page2/2"}
{"pack_id": "french_pack", "section_title": "Interaction design", "page": 258, "chunk_id": "french_pack_258_0", "content": "258 2020-2021COURSEBOOKLET CS-486 Interaction design PuPearl Cursus Sem. Type Language English Computerscience MA2,MA4 Opt. Credits 4 Cybersecurity MA2,MA4 Opt. Session Summer Semester Spring DataScience MA2,MA4 Opt. Exam Duringthe DigitalHumanities MA2,MA4 Opt. semester Workload 120h Robotics,ControlandIntelligentSystems Opt. Weeks 14 SCmasterEPFL MA2,MA4 Opt. Hours 4weekly Lecture 2weekly Exercises 1weekly Project 1weekly Numberof positions Summary Thiscoursefocusesongoal-directeddesignandinteractiondesign,twosubjectstreatedindepthintheCooperbook (seereferencebelow).Topracticethesetwomethods,weproposeadesignchallenge,whichistobecarriedoutbya teamofthreestudents. Content DesignmethodsforHCI WhatisHCI:itsaimsandgoals Designthinking Goal-directedDesign Mentalmodelanddifferenttypesofusers Qualitativeresearchanduserinterviews Usermodeling:personaandempathydiagram Scenarios,requirementsandframeworkdesign Visualdesign InformationVisualizationdesign BasicprototypingmethodsforHCI Storyboarding Contextscenario Interactiveprototype Videoprototype Humancomputerinteractionevaluationmethods Cognitivewalkthrough Heuristicevaluation Evaluationwithusers Keywords Interactiondesign,designthinking,designforplayfulness,rapidprototypingtechniques,evaluationwithusers. LearningPrerequisites Requiredcourses IntroductiontoVisualComputing Interactiondesign Page1/2"}
{"pack_id": "french_pack", "section_title": "Interaction design", "page": 259, "chunk_id": "french_pack_259_0", "content": "259 2020-2021COURSEBOOKLET Recommendedcourses OpentostudentsenrolledintheMasterandPhDprogramsinIC. Importantconceptstostartthecourse Goal-directiondesign LearningOutcomes Bytheendofthecourse,thestudentmustbeableto: •Interviewusersandelicittheirneedsusingthegoal-directeddesignmethod •Designandimplementinterfacesandintearctions •Projectmanagement:setobjectivesanddeviceaplantoachievethem •Groupworkskills:discussandidentifyroles,andassumethoserolesincludingleadership •Communication:writingandpresentationskills Teachingmethods Lectures,exercises,hands-onpractice,designreview Expectedstudentactivities Lectures,readings,designproject,quiz Assessmentmethods Groupproject,presentation,mid-termexam Resources Bibliography AboutFace3:TheEssentialsofInteractionDesignbyAlanCooperetal.(availablease-bookatNEBIS) Ressourcesenbibliothèque •AboutFace3 Interactiondesign Page2/2"}
{"pack_id": "french_pack", "section_title": "Intoduction to natural language processing", "page": 260, "chunk_id": "french_pack_260_0", "content": "260 2020-2021COURSEBOOKLET CS-431 Introduction to natural language processing ChappelierJean-Cédric,RajmanMartin Cursus Sem. Type Language English Computerscience MA1,MA3 Opt. Credits 4 Cybersecurity MA1,MA3 Opt. Session Winter Semester Fall DataScience MA1,MA3 Opt. Exam Written Datascienceminor H Opt. Workload 120h Weeks 14 DigitalHumanities MA1,MA3 Opt. Hours 4weekly SCmasterEPFL MA1,MA3 Opt. Lecture 2weekly UNIL-Sciencesforensiques H Opt. Exercises 2weekly Numberof positions Summary Theobjectiveofthiscourseistopresentthemainmodels,formalismsandalgorithmsnecessaryforthedevelopmentof applicationsinthefieldofnaturallanguageinformationprocessing.Theconceptsintroducedduringthelectureswillbe appliedduringpracticalsessions. Content Severalmodelsandalgorithmsforautomatedtextualdataprocessingwillbedescribed:(1)morpho-lexicallevel: electroniclexica,spellingcheckers,...;(2)syntacticlevel:regular,context-free,stochasticgrammars,parsingalgorithms, ...;(3)semanticlevel:modelsandformalismsfortherepresentationofmeaning,... Severalapplicationdomainswillbepresented:Linguisticengineering,InformationRetrieval,Textmining(automated knowledgeextraction),TextualDataAnalysis(automateddocumentclassification,visualizationoftextualdata). Keywords NaturalLanguageProcessing;ComputationnalLinguisitics;Part-of-Speechtagging;Parsing LearningOutcomes Bytheendofthecourse,thestudentmustbeableto: •ComposekeyNLPelementstodevelophigherlevelprocessingchains •Assess/EvaluateNLPbasedsystems •ChooseappropriatesolutionsforsolvingtypicalNLPsubproblems(tokenizing,tagging,parsing) •DescribethetypicalproblemsandprocessinglayersinNLP •AnalyzeNLPproblemstodecomposetheminadequateindependantcomponents Teachingmethods Excathedra;practicalworkoncomputer Expectedstudentactivities attendlecturesandpracticalsessions,answerquizzes. Assessmentmethods 4quizduringsemester25%,finalexam75% Resources Introductiontonaturallanguageprocessing Page1/2"}
{"pack_id": "french_pack", "section_title": "Intoduction to natural language processing", "page": 261, "chunk_id": "french_pack_261_0", "content": "261 2020-2021COURSEBOOKLET Virtualdesktopinfrastructure(VDI) No Bibliography 1. M.Rajmaneditor,\"SpeechandLanguageEngineering\",EPFLPress,2006. 2. DanielJurafskyandJamesH,Martin,\"SpeechandLanguageProcessing\",PrenticeHall,2008(2nd edition) 3. ChristopherD.ManningandHinrichSchütze,\"FoundationsofStatisticalNaturalLanguageProcessing\", MITPress,2000 4. ChristopherD.Manning,PrabhakarRaghavanandHinrichSchütze,IntroductiontoInformation Retrieval,CambridgeUniversityPress.2008 5. NitinIndurkhyaandFredJ.Dameraueditors,\"HandbookofNaturalLanguageProcessing\",CRCPress, 2010(2ndedition) Ressourcesenbibliothèque •HandbookofNaturalLanguageProcessing/Indurkhya •IntroductiontoInformationRetrieval/Manning •FoundationsofStatisticalNaturalLanguageProcessing/Manning •SpeechandLanguageEngineering/Rajman •SpeechandLanguageProcessing/Jurafsky Websites •http://coling.epfl.ch Introductiontonaturallanguageprocessing Page2/2"}
{"pack_id": "french_pack", "section_title": "Learning theory", "page": 262, "chunk_id": "french_pack_262_0", "content": "262 2020-2021COURSEBOOKLET CS-526 Learning theory MacrisNicolas,UrbankeRüdiger Cursus Sem. Type Language English Computerscience MA2,MA4 Opt. Credits 4 Cybersecurity MA2,MA4 Opt. Session Summer Semester Spring DataScience MA2,MA4 Opt. Exam Written SCmasterEPFL MA2,MA4 Opt. Workload 120h Weeks 14 Hours 4weekly Lecture 2weekly Exercises 2weekly Numberof positions Summary Machinelearninganddataanalysisarebecomingincreasinglycentralinmanysciencesandapplications.Thiscourse concentratesonthetheoreticalunderpinningsofmachinelearning. Content •Basics:statisticallearningframework,ProbablyApproximatelyCorrect(PAC)learning,learningwithafinitenumber ofclasses,Vapnik-Chervonenkis(VC)dimension,non-uniformlearnability,complexityoflearing. •NeuralNets:representationpowerofneuralnets,learningandstability,PACBayesbounds. •Graphicalmodellearning. •Non-negativematrixfactorization,Tensordecompositionsandfactorization. •Learningmixturemodels. LearningPrerequisites Recommendedcourses •AnalysisI,II,III •LinearAlgebra •Machinelearning •Probability •Algorithms(CS-250) LearningOutcomes Bytheendofthecourse,thestudentmustbeableto: •ExplaintheframeworkofPAClearning •ExplaintheimportancebasicconceptssuchasVCdimensionandnon-uniformlearnability •Describebasicfactsaboutrepresentationoffunctionsbyneuralnetworks •Describerecentresultsonspecifictopicse.g.,graphicalmodellearning,matrixandtensorfactorization,learning mixturemodels Teachingmethods Learningtheory Page1/2"}
{"pack_id": "french_pack", "section_title": "Learning theory", "page": 263, "chunk_id": "french_pack_263_0", "content": "263 2020-2021COURSEBOOKLET •Lectures •Exercises Expectedstudentactivities •Attendlectures •Attendexercisessessionsanddothehomework Assessmentmethods Finalexamandgradedhomeworks Supervision Officehours Yes Assistants Yes Forum Yes Others Coursewebsite Learningtheory Page2/2"}
{"pack_id": "french_pack", "section_title": "Machine learning", "page": 264, "chunk_id": "french_pack_264_0", "content": "264 2020-2021COURSEBOOKLET CS-433 Machine learning FlammarionNicolas,JaggiMartin Cursus Sem. Type Language English Biocomputingminor H Opt. Credits 7 Civil&EnvironmentalEngineering Opt. Session Winter Semester Fall Communicationsystemsminor H Opt. Exam Written ComputationalNeurosciencesminor H Opt. Workload 210h Weeks 14 ComputationalscienceandEngineering MA1,MA3 Opt. Hours 6weekly ComputerandCommunicationSciences Opt. Lecture 4weekly Computerscienceminor H Opt. Exercises 2weekly Numberof Computerscience MA1,MA3 Obl. positions Cybersecurity MA1,MA3 Obl. DataScience MA1,MA3 Obl. Datascienceminor H Opt. DigitalHumanities MA1,MA3 Opt. ElectricalEngineering Opt. ElectricalandElectronicalEngineering MA1,MA3 Opt. Financialengineering MA1,MA3 Opt. LifeSciencesEngineering MA1,MA3 Opt. Managmt,techetentr. MA1,MA3 Opt. Robotics,ControlandIntelligentSystems Opt. SCmasterEPFL MA1,MA3 Obl. Sciencesduvivant MA3 Opt. Summary Machinelearninganddataanalysisarebecomingincreasinglycentralinmanysciencesandapplications.Inthiscourse, fundamentalprinciplesandmethodsofmachinelearningwillbeintroduced,analyzedandpracticallyimplemented. Content 1. Basicregressionandclassificationconceptsandmethods:Linearmodels,overfitting,linearregression,Ridge regression,logisticregression,andk-NN. 2. Fundamentalconcepts:cost-functionsandoptimization,cross-validationandbias-variancetrade-off,curseof dimensionality. 3. Unsupervisedlearning:k-MeansClustering,GaussianmixturemodelsandtheEMalgorithm. 4. Dimensionalityreduction:PCAandmatrixfactorization,wordembeddings 5. Advancedmethods:generalizedlinearmodels,SVMsandKernelmethods,Neuralnetworksanddeeplearning Keywords •Machinelearning,patternrecognition,deeplearning,datamining,knowledgediscovery,algorithms LearningPrerequisites Requiredcourses Machinelearning Page1/3"}
{"pack_id": "french_pack", "section_title": "Machine learning", "page": 265, "chunk_id": "french_pack_265_0", "content": "265 2020-2021COURSEBOOKLET •AnalysisI,II,III •LinearAlgebra •ProbabilityandStatistics(MATH-232) •Algorithms(CS-250) Recommendedcourses •Introductiontodifferentiableoptimization(MATH-265) •LinearModels(MATH-341) Importantconceptstostartthecourse •Basicprobabilityandstatistics(conditionalandjointdistribution,independence,Bayesrule,random variables,expectation,mean,median,mode,centrallimittheorem) •Basiclinearalgebra(matrix/vectormultiplications,systemsoflinearequations,SVD) •Multivariatecalculus(derivativew.r.t.vectorandmatrixvariables) •BasicProgrammingSkills(labswillusePython) LearningOutcomes Bytheendofthecourse,thestudentmustbeableto: •Definethefollowingbasicmachinelearningproblems:Regression,classification,clustering,dimensionalityreduction, time-series •Explainthemaindifferencesbetweenthem •Implementalgorithmsforthesemachinelearningmodels •Optimizethemaintrade-offssuchasoverfitting,andcomputationalcostvsaccuracy •Implementmachinelearningmethodstoreal-worldproblems,andrigorouslyevaluatetheirperformanceusing cross-validation.Experiencecommonpitfallsandhowtoovercomethem •ExplainandunderstandthefundamentaltheorypresentedforMLmethods Teachingmethods •Lectures •Labsessions •CourseProjects Expectedstudentactivities Studentsareexpectedto: •attendlectures •attendlabsessionsandworkontheweeklytheoryandcodingexercises •workonprojectsusingthecodedevelopedduringlabs,insmallgroups Assessmentmethods Machinelearning Page2/3"}
{"pack_id": "french_pack", "section_title": "Machine learning", "page": 266, "chunk_id": "french_pack_266_0", "content": "266 2020-2021COURSEBOOKLET •Writtenfinalexam •Continuouscontrol(Courseprojects) Supervision Officehours Yes Assistants Yes Forum Yes Resources Virtualdesktopinfrastructure(VDI) No Bibliography •ChristopherBishop,PatternRecognitionandMachineLearning •KevinMurphy,MachineLearning:AProbabilisticPerspective •ShaiShalev-Shwartz,ShaiBen-David,UnderstandingMachineLearning •MichaelNielsen,NeuralNetworksandDeepLearning •(JeromeFriedman,RobertTibshirani,TrevorHastie,Theelementsofstatisticallearning:datamining, inference,andprediction) Ressourcesenbibliothèque • Linearalgebraandlearningfromdata •Theelementsofstatisticallearning:datamining,inference,andprediction/Friedman •PatternRecognitionandMachineLearning/Bishop •NeuralNetworksandDeepLearning/Nielsen •MachineLearning:AProbabilisticPerspective/Murphy •UnderstandingMachineLearning/Shalev-Shwartz Notes/Handbook https://github.com/epfml/ML_course Websites •https://www.epfl.ch/labs/mlo/machine-learning-cs-433/ Machinelearning Page3/3"}
{"pack_id": "french_pack", "section_title": "Machine learning for behavioral data", "page": 267, "chunk_id": "french_pack_267_0", "content": "267 2020-2021COURSEBOOKLET CS-421 Machine learning for behavioral data KäserTanja Cursus Sem. Type Language English Computerscience MA2,MA4 Opt. Credits 4 Cybersecurity MA2,MA4 Opt. Session Summer Semester Spring DataScience MA2,MA4 Opt. Exam Written SCmasterEPFL MA2,MA4 Opt. Workload 120h Weeks 14 Hours 4weekly Lecture 2weekly Project 2weekly Numberof positions Summary Computerenvironmentssuchaseducationalgames,interactivesimulations,andwebservicesprovidelargeamountsof data,whichcanbeanalyzedandserveasabasisforadaptation.Thiscoursewillcoverthecoremethodsofuser modelingandpersonalization,withafocusoneducationaldata. Content Theusersofcomputerenvironmentssuchasintelligenttutoringsystems,interactivegames,andwebservicesareoften veryheterogeneousandthereforeitisimportanttoadapttotheirspecificneedsandpreferences. Thiscoursewillcoverthecoremethodsofadaptationandpersonalization,withafocusoneducationaldata.Specifically wewilldiscussapproachestothetaskofaccuratelymodelingandpredictinghumanbehaviorwithinacomputer environment.Furthermore,wewewillalsodiscussdataminingtechniqueswiththegoaltogaininsightsintohuman behavior.Wewillcoverthetheoriesandmethodologiesunderlyingthecurrentapproachesandthenalsolookintothe mostrecentdevelopmentsinthefield. 1. ‘Cycle’ofadaptation:representation,prediction,intervention(e.g.recommendation) 2. DataProcessingandInterpretation(missingdata,featuretransformations,distributionfitting) 3. Performanceevaluation(cross-validation,errormeasures,statisticalsignificance,overfitting) 4. Representation&Prediction(probabilisticgraphicalmodels,recurrentneuralnetworks,logisticmodels, clustering-classificationapproaches) 5. Recommendation(collaborativefiltering,content-basedrecommendations,multi-armedbandits) 6. StealthAssessment(seemlessdetectionofusertraits) 7. Multimodalanalytics(represent&analyzedatafromnon-traditionalsources.i.e.sensors,classroomanalytics, human-robotinteraction) LearningPrerequisites Requiredcourses Thestudentmusthavepassedacourseinprobabilityandstatisticsandacourseincludingaprogramming project Recommendedcourses -CS-433Machinelearningor -CS-233a/CS-233bIntroductiontomachinelearning Importantconceptstostartthecourse Probabilityandstatistics,basicmachinelearningknowledge,algorithmsandprogramming LearningOutcomes Bytheendofthecourse,thestudentmustbeableto: Machinelearningforbehavioraldata Page1/2"}
{"pack_id": "french_pack", "section_title": "Machine learning for behavioral data", "page": 268, "chunk_id": "french_pack_268_0", "content": "268 2020-2021COURSEBOOKLET •Explainthemainmachinelearningapproachestopersonalization,describetheiradvantagesanddisadvantagesand explainthedifferencesbetweenthem •Implementalgorithmsforthesemachinelearningmodels •Applythemtoreal-worlddata •Assess/Evaluatetheirperformance •Explainandunderstandthefundamentaltheoryunderlyingthepresentedmachinelearningmodels Teachingmethods -Lectures -Weeklylabsessions -Courseproject Expectedstudentactivities -Attendthelectures -Attendthelabsessionsandworkonthehomeworkassignments -Projectwork Assessmentmethods -Projectwork(50%) -Finalexam(50%) Supervision Officehours Yes Assistants Yes Forum Yes Machinelearningforbehavioraldata Page2/2"}
{"pack_id": "french_pack", "section_title": "Markov chains and algorithmic applications", "page": 269, "chunk_id": "french_pack_269_0", "content": "269 2020-2021COURSEBOOKLET COM-516 Markov chains and algorithmic applications LévêqueOlivier,MacrisNicolas Cursus Sem. Type Language English Computerscience MA1,MA3 Opt. Credits 4 Cybersecurity MA1,MA3 Opt. Session Winter Semester Fall DataScience MA1,MA3 Opt. Exam Written ElectricalEngineering Opt. Workload 120h Weeks 14 SCmasterEPFL MA1,MA3 Opt. Hours 4weekly Lecture 2weekly Exercises 2weekly Numberof positions Summary Thestudyofrandomwalksfindsmanyapplicationsincomputerscienceandcommunications.Thegoalofthecourseis togetfamiliarwiththetheoryofrandomwalks,andtogetanoverviewofsomeapplicationsofthistheorytoproblemsof interestincommunications,computerandnetworkscience. Content Part1:Markovchains(~6weeks): -basicproperties:irreducibility,periodicity,recurrence/transience,stationaryandlimitingdistributions, -ergodictheorem:couplingmethod -detailedbalance -convergenceratetotheequilibrium,spectralgap,mixingtimes -cutoffphenomenon Part2:Sampling(~6weeks) -classicalmethods,importanceandrejectionsampling -MarkovChainMonteCarlomethods,Metropolis-Hastingsalgorithm,Glauberdynamics,Gibbssampling -applications:functionminimization,coloringproblem,satisfiabilityproblems,Isingmodels -couplingfromthepastandexactsimulation Keywords randomwalks,stationarity,ergodic,convergence,spectralgap,mixingtime,sampling,MarkovchainMonteCarlo, couplingfromthepast LearningPrerequisites Requiredcourses Basicprobabilitycourse Basiclinearalgebraandcalculuscourses Recommendedcourses StochasticModelsforCommunications(COM-300) Importantconceptstostartthecourse Goodknowledgeofprobabilityandanalysis. HavingbeenexposedtothetheoryofMarkovchains. LearningOutcomes Bytheendofthecourse,thestudentmustbeableto: Markovchainsandalgorithmicapplications Page1/2"}
{"pack_id": "french_pack", "section_title": "Markov chains and algorithmic applications", "page": 270, "chunk_id": "french_pack_270_0", "content": "270 2020-2021COURSEBOOKLET •Analyzethebehaviourofarandomwalk •Assess/Evaluatetheperformanceofanalgorithmonagraph •Implementefficientlyvarioussamplingmethods Teachingmethods ex-cathedracourse Expectedstudentactivities activeparticipationtoexercisesessionsandimplementationofasamplingalgorithm Assessmentmethods gradedhomeworks(20%),mini-project(20%),finalexam(60%) Resources Bibliography Variousreferenceswillbegiventothestudentsduringthecourse,accordingtothetopicsdiscussedin class. Ressourcesenbibliothèque •Probabilityandrandomprocesses/Grimmett Notes/Handbook Lecturenoteswillbeprovided Websites •https://moodle.epfl.ch/course/view.php?id=15016 Prerequisitefor Thiscourseisnotsotospeakaprerequisiteforothercourses,butcouldcomplementwellthecourseCOM-512on Networksoutofcontrol,aswellasothercoursesinstatistics. Markovchainsandalgorithmicapplications Page2/2"}
{"pack_id": "french_pack", "section_title": "Mathematical foundations of signal processing", "page": 271, "chunk_id": "french_pack_271_0", "content": "271 2020-2021COURSEBOOKLET COM-514 Mathematical foundations of signal processing BejarHaroBenjamin,SimeoniMatthieu Cursus Sem. Type Language English Communicationsystemsminor H Opt. Credits 6 ComputationalscienceandEngineering MA1,MA3 Opt. Session Winter Semester Fall ComputerandCommunicationSciences Opt. Exam Written Computerscience MA1,MA3 Opt. Workload 180h Weeks 14 Cybersecurity MA1,MA3 Opt. Hours 5weekly DataScience MA1,MA3 Opt. Lecture 3weekly Robotics,ControlandIntelligentSystems Opt. Exercises 2weekly Numberof SCmasterEPFL MA1,MA3 Opt. positions SystemsEngineeringminor H Opt. Summary Signalprocessingtoolsarepresentedfromanintuitivegeometricpointofviewwhichisattheheartofallmodernsignal processingtechniques.Thestudentwilldevelopthemathematicaldepthandrigorneededforthestudyofadvanced topicsinsignalprocessingandapproximationtheory. Content Sequences,Discrete-TimeSystems,FunctionsandContinuous-TimeSystems(reviewofdiscrete-timeFourier transform;DFT;FouriertransformandFourierseries). FromEuclidtoHilbert:LinearAlgebraFundamentalsforRepresentationTheory(vectorspaces;Hilbertspaces; approximations,projectionsanddecompositions;basesandframes;linearoperators;adjoint;generalizedinverses; matrixrepresentations;computationalaspects) SamplingandInterpolation(samplingandinterpolationwithnormalandnonorthogonal vectors,sequencesand functions;samplingandinterpolationofbandlimitedsequencesandfunctions) PolynomialandSplineApproximation(LegendreandChebyshevpolynomials;Lagrangeinterpolation;minimax approximation; Taylorexpansions;B-splines) RegularizedInverseProblems(regularizedconvexoptimisation;Tikhonovregularisation;penalisedbasispursuit; proximalalgorithms;pseudo-differentialoperatorsandL-splines;representertheoremsforcontinuousinverseproblems withTikhonovpenalties) ComputerizedTomography(lineintegralsandprojections,Radontransform,Fourierprojection/slicetheorem,filtered backprojectionalgorithm,algebraicreconstructiontechniques). FiniteRateofInnovation:SamplingNonBandlimitedSignals(overviewanddefinitions,reconstructionmethodsand applications) AdaptiveFiltering(Wienerfiltering,matrixinversionlemma,RLS,LMS,beamforming) LearningPrerequisites Requiredcourses Signalprocessingforcommunications(orDigitalsignalprocessingonCoursera) LinearAlgebraIandII(orequivalent). Recommendedcourses SignalsandSystems Importantconceptstostartthecourse Goodknowledgeoflinearalgebraconcepts.BasicsofFourieranalysisandsignalprocessing. Mathematicalfoundationsofsignalprocessing Page1/2"}
{"pack_id": "french_pack", "section_title": "Mathematical foundations of signal processing", "page": 272, "chunk_id": "french_pack_272_0", "content": "272 2020-2021COURSEBOOKLET LearningOutcomes Bytheendofthecourse,thestudentmustbeableto: •Mastertherighttoolstotackleadvancedsignalanddataprocessingproblems •Developanintuitiveunderstandingofsignalprocessingthroughageometricalapproach •Gettoknowtheapplicationsthatareofinteresttoday •Learnabouttopicsthatareattheforefrontofsignalprocessingresearch Teachingmethods Excathedrawithexercisesandhomeworks. Expectedstudentactivities Attendinglectures,completingexercises Assessmentmethods miniproject30%,finalexam(written)70% Resources Virtualdesktopinfrastructure(VDI) No Bibliography M.Vetterli,J.KovacevicandV.Goyal,\"SignalProcessing:Foundations\",CambridgeU.Press,2014. Availableinopenaccessathttp://www.fourierandwavelets.org Ressourcesenbibliothèque •SignalProcessing:Foundations/Vetterli Mathematicalfoundationsofsignalprocessing Page2/2"}
{"pack_id": "french_pack", "section_title": "Mobile networks", "page": 273, "chunk_id": "french_pack_273_0", "content": "273 2020-2021COURSEBOOKLET COM-405 Mobile networks HubauxJean-Pierre Cursus Sem. Type Language English Communicationsystemsminor E Opt. Credits 4 Computerscience MA2,MA4 Opt. Session Summer Semester Spring Cybersecurityminor E Opt. Exam Written Cybersecurity MA2,MA4 Opt. Workload 120h Weeks 14 ElectricalandElectronicalEngineering MA2,MA4 Opt. Hours 3weekly MineurSTASChine E Opt. Lecture 2weekly Robotics,ControlandIntelligentSystems Opt. Exercises 1weekly Numberof SCmasterEPFL MA2,MA4 Obl. positions Summary Thiscourseprovidesadetaileddescriptionoftheorganizationandoperatingprinciplesofmobilecommunication networks. Content Introductiontowirelessnetworks OrganizationoftheMAClayer WirelessLocalAreaNetworks-WiFi Cellularnetworks Mobilityatthenetworkandtransportlayers Securityandprivacyinmobilenetworks Keywords Communicationnetworks,protocols,mobility LearningPrerequisites Requiredcourses COM-208ComputerNetworks Recommendedcourses COM-302PrinciplesofDigitalCommunications COM-301Computersecurity Importantconceptstostartthecourse Operatingprinciplesofcommunicationprotocolsandlayerorganization. LearningOutcomes Bytheendofthecourse,thestudentmustbeableto: •Synthesizethewayamobilenetworkoperates •Interpretthebehaviorofsuchnetworks •Proposeevolutionstoexistingprotocols •Identifyweaknesses,bottlenecksandvulnerabilities Teachingmethods Mobilenetworks Page1/2"}
{"pack_id": "french_pack", "section_title": "Mobile networks", "page": 274, "chunk_id": "french_pack_274_0", "content": "274 2020-2021COURSEBOOKLET Excathedralectures Weeklyquizzes Exercisesessions Hands-onexercises Expectedstudentactivities Classparticipation,quizzes,homework,hands-onexercises Assessmentmethods Quizzes+finalexam Supervision Officehours No Assistants Yes Forum No Resources Bibliography Handouts,recommendedbooks(seecourseURL) Ressourcesenbibliothèque •FundamentalsofMobileDataNetworks/Miao Mobilenetworks Page2/2"}
{"pack_id": "french_pack", "section_title": "Modern digital communications: hands-on approach", "page": 275, "chunk_id": "french_pack_275_0", "content": "275 2020-2021COURSEBOOKLET COM-430 Modern digital communications: a hands-on approach RimoldiBixio Cursus Sem. Type Language English Communicationsystemsminor H Opt. Credits 6 Computerscience MA1,MA3 Opt. Session Winter Semester Fall Cybersecurity MA1,MA3 Opt. Exam Duringthe SCmasterEPFL MA1,MA3 Obl. semester Workload 180h Weeks 14 Hours 4weekly Lecture 2weekly Practical 2weekly work Numberof positions Summary ThiscoursecomplementsthetheoreticalknowledgelearnedinPDCwithmoreadvancedtopicssuchasOFDM,MIMO, fadingchancels,andGPSpositioning.Thisknowledgeisputintopracticewithhands-onexercisesbasedonMatlaband onasoftware-definedradioplatform. Content 1. Softwareradio:keyconcepts. 2. MatlabimplementationofthesignalprocessingchaintothelevelofdetailinPrinciplesofDigitalCommunications. 3. Channelmodeling,estimation,equalization. 4. Implementationofabasicwirelesscommunicationsystemusingasoftware-definedradiotestbed. 5. Fadinganddiversity. 6. OFDMandMIMO:theoryandimplementation. 7. CDMAinthecontextofaGPSsystem. 8. DecodingofaGPSsignalandpositioning. Keywords Wireless,OFDM,Diversity,Coding,GPS,CDMA, MMSE,Rayleighfading,software-definedradio,channelestimation. LearningPrerequisites Requiredcourses COM-302Principlesofdigitalcommunicationorequivalent Importantconceptstostartthecourse Solidunderstandingoflinearalgebraandprobabilityaswellasrealandcomplexanalysis. LearningOutcomes Bytheendofthecourse,thestudentmustbeableto: •Designandimplementandadvanceddigitalcommunicationsystem(datarate,spectralbandwidth,energy requirements,errorprobability,implementationcomplexity) •Modelphysicalpropertiesofwiredandwirelesscommunicationchannels •Implementvariouspartsofa\"physical-layer\"digitalcommunicationsystem •Understandwhatsoftware-definedradioisallabout Teachingmethods Moderndigitalcommunications:ahands-onapproach Page1/2"}
{"pack_id": "french_pack", "section_title": "Modern digital communications: hands-on approach", "page": 276, "chunk_id": "french_pack_276_0", "content": "276 2020-2021COURSEBOOKLET Excathedralecturesandsmallprojects Expectedstudentactivities Followlectures;guidedaswellasindependentworkonprojects Assessmentmethods Writtenandpracticalmidtermandfinalexamduringthesemester. 40%midtermexam,60%finalexam. Supervision Officehours Yes Assistants Yes Forum Yes Resources Notes/Handbook Lecturenotes Moderndigitalcommunications:ahands-onapproach Page2/2"}
{"pack_id": "french_pack", "section_title": "Networks out of control", "page": 277, "chunk_id": "french_pack_277_0", "content": "277 2020-2021COURSEBOOKLET COM-512 Networks out of control Cursus Sem. Type Language English Computerscience MA2,MA4 Opt. Credits 4 Cybersecurity MA2,MA4 Opt. Session Summer Semester Spring DataScience MA2,MA4 Opt. Exam Written Datascienceminor E Opt. Workload 120h Weeks 14 ElectricalEngineering Opt. Hours 3weekly SCmasterEPFL MA2,MA4 Opt. Lecture 2weekly SystemsEngineeringminor E Opt. Exercises 1weekly Numberof positions Remark Coursbiennal(pasdonnéen2020-21) Summary Thegoalofthisclassistoacquiremathematicaltoolsandengineeringinsightaboutnetworkswhosestructureis random,aswellaslearningandcontroltechniquesapplicabletosuchnetworkdata. Content •Randomgraphmodels:Erdös-Renyi,randomregular,geometric,percolation,smallworlds,stochasticblockmodel •Learninggraphsfromdata:centralitymetrics,embeddings,Hawkesprocesses,networkalignment •Controlofprocessesongraphs:epidemics,navigation Keywords Randomgraphs,networkdata,machinelearning,graphprocesses. LearningPrerequisites Requiredcourses Stochasticmodelsincommunication(COM-300),orequivalent. Importantconceptstostartthecourse Basicprobabilityandstastistics;Markovchains;basiccombinatorics. Teachingmethods Excathedralectures,exercises,mini-project Expectedstudentactivities Attendinglectures,bi-weeklyhomeworks,mini-projectincl.studentpresentationattheendofsemester,finalexam. Assessmentmethods 1. Homeworks10% 2. Mini-project40% 3. Finalexam50%. Networksoutofcontrol Page1/2"}
{"pack_id": "french_pack", "section_title": "Networks out of control", "page": 278, "chunk_id": "french_pack_278_0", "content": "278 2020-2021COURSEBOOKLET Resources Bibliography •A.D.Barbour,L.HolstandS.Janson,PoissonApproximation,OxfordSciencePublications,1992. •B.Bollobas,RandomGraphs(2ndedition),CambridgeUniversityPress,2001. •R.Durrett,RandomGraphDynamics,CambridgeUniversityPress,2006(electronicversion). •D.Easley,J.Kleinberg.Networks,Crowds,andMarkets:ReasoningAboutaHighlyConnectedWorld, CambridgeUniversityPress,2010(electronicversion). •G.Grimmett,Percolation(2ndedition),Springer,1999. •S.Janson,T.Luczak,A.Rucinski,RandomGraphs,Wiley,2000. •R.MeesterandR.Roy,ContinuumPercolation,CambridgeUniversityPress,1996. Ressourcesenbibliothèque • RandomGraphs/Bollobas •RandomGraphs/Janson •ContinuumPercolation/Meester • Percolation/Grimmett •Networks,CrowdsandMarkets/Easley •PoissonApproximation/Barbour •RandomGraphDynamics/Durrett Notes/Handbook Classnoteswillbeavailableonthecoursewebsite. Networksoutofcontrol Page2/2"}
{"pack_id": "french_pack", "section_title": "Number theory in cryptography", "page": 279, "chunk_id": "french_pack_279_0", "content": "279 2020-2021COURSEBOOKLET MATH-489 Number theory in cryptography SerbanVlad Cursus Sem. Type Language English Computerscience MA2,MA4 Opt. Credits 5 Cybersecurity MA2,MA4 Opt. Session Summer Semester Spring Ing.-math MA2,MA4 Opt. Exam Written Mathématicien MA2 Opt. Workload 150h Weeks 14 SCmasterEPFL MA2,MA4 Opt. Hours 4weekly Lecture 2weekly Exercises 2weekly Numberof positions Summary Thegoalofthecourseistointroducebasicnotionsfrompublickeycryptography(PKC)aswellasbasic number-theoreticmethodsandalgorithmsforcryptanalysisofprotocolsandschemesbasedonPKC. Content BasicnotionsandalgorithmsfrompublickeycryptographysuchasRSA,ElGamal,keyexchangeprotocols,zero knowledgeproofs.Maintopicsmayinclude,butarenotlimitedto •modularandfinitefieldarithmetic •primalitytesting •polynomialandintegerfactorizationalgorithms •indexcalculusanddiscretelogarithm-basedschemes •ellipticcurvearithemticandcryptography •basicnotionsfromlattice-basedcryptography MuchofthecoursedrawsinspirationfromtheMath-489(-2019)curriculumtaughtbyProf.DimitarJetchev. Keywords publickeycryptography,keyexchange,digitalsignatures,zeroknowledgeproofs,RSA,ElGamal,integerfactorization, indexcalculus,ellipticcurvecryptography Teachingmethods lectures,exercises,additionalreferences Assessmentmethods Homeworkassignments:Weeklyproblemsetsfocusingonnumber-theoreticandcomplexity-theoreticaspects.These willbecomplementedbyprogrammingexercisesinSAGEwhichisaPython-basedcomputeralgebrasystem.Noprior experiencewithSAGEorPythonisrequired.Asubsetofthehomeworkwillbehandedinandgraded,countingfor40% ofthefinalgrade. Thewrittenfinalexamcountsfor60%ofthefinalgrade.Therewillbenogradedmidtermsincetheclassisonline.The finalexamwilltesttheoreticalunderstandingaswellasunderstandingofthealgorithmsandprotocols.Theexamwill includenoSAGEprogrammingexercises.Ifneeded,algorithmscouldbepresentedwithpseudo-code.Theexactfinal examformatwillbeadaptedtotheepidemiologicalsituationandresultingguidelines. Danslecasdel¿art.3al.5duRèglementdesection,l¿enseignantdécidedelaformedel¿examenqu¿ilcommunique auxétudiantsconcernés. Numbertheoryincryptography Page1/1"}
{"pack_id": "french_pack", "section_title": "Optimization for machine learning", "page": 280, "chunk_id": "french_pack_280_0", "content": "280 2020-2021COURSEBOOKLET CS-439 Optimization for machine learning FlammarionNicolas,JaggiMartin Cursus Sem. Type Language English ComputationalscienceandEngineering MA2,MA4 Opt. Credits 5 Computerscience MA2,MA4 Opt. Session Summer Semester Spring Cybersecurity MA2,MA4 Opt. Exam Written DataScience MA2,MA4 Obl. Workload 150h Weeks 14 Datascienceminor E Opt. Hours 5weekly ElectricalEngineering Opt. Lecture 2weekly SCmasterEPFL MA2,MA4 Opt. Exercises 2weekly Practical 1weekly work Numberof positions Summary Thiscourseteachesanoverviewofmodernoptimizationmethods,forapplicationsinmachinelearninganddatascience. Inparticular,scalabilityofalgorithmstolargedatasetswillbediscussedintheoryandinimplementation. Content Thiscourseteachesanoverviewofmodernoptimizationmethods,forapplicationsinmachinelearninganddatascience. Inparticular,scalabilityofalgorithmstolargedatasetswillbediscussedintheoryandinimplementation. FundamentalContents: •Convexity,GradientMethods,Proximalalgorithms,StochasticandOnlineVariantsofmentionedmethods,Coordinate DescentMethods,SubgradientMethods,Non-ConvexOptimization,Frank-Wolfe,AcceleratedMethods,Primal-Dual contextandcertificates,LagrangeandFenchelDuality,Second-OrderMethods,Quasi-NewtonMethods, Gradient-FreeandZero-OrderOptimization. AdvancedContents: •Non-ConvexOptimization:ConvergencetoCriticalPoints,Saddle-Pointmethods,Alternatingminimizationformatrix andtensorfactorizations •ParallelandDistributedOptimizationAlgorithms,SynchronousandAsynchronousCommunication •LowerBounds Onthepracticalside,agradedgroupprojectallowstoexploreandinvestigatethereal-worldperformanceaspectsof thealgorithmsandvariantsdiscussedinthecourse. Keywords Optimization,Machinelearning LearningPrerequisites Recommendedcourses •CS-433MachineLearning Importantconceptstostartthecourse •Previouscourseworkincalculus,linearalgebra,andprobabilityisrequired. Optimizationformachinelearning Page1/3"}
{"pack_id": "french_pack", "section_title": "Optimization for machine learning", "page": 281, "chunk_id": "french_pack_281_0", "content": "281 2020-2021COURSEBOOKLET •Familiaritywithoptimizationand/ormachinelearningisuseful. LearningOutcomes Bytheendofthecourse,thestudentmustbeableto: •Assess/Evaluatethemostimportantalgorithms,functionclasses,andalgorithmconvergenceguarantees •Composeexistingtheoreticalanalysiswithnewaspectsandalgorithmvariants. •Formulatescalableandaccurateimplementationsofthemostimportantoptimizationalgorithmsformachinelearning applications •Characterizetrade-offsbetweentime,dataandaccuracy,formachinelearningmethods Transversalskills •UsebothgeneralanddomainspecificITresourcesandtools •Summarizeanarticleoratechnicalreport. Teachingmethods •Lectures •ExerciseswithTheoryandImplementationAssignments Expectedstudentactivities Studentsareexpectedto: •Attendthelecturesandexercises •Giveashortscientificpresentationaboutaresearchpaper •Read/watchthepertinentmaterial •Engageduringtheclass,anddiscusswithothercolleagues Assessmentmethods •Continuouscontrol(courseproject) •FinalExam Supervision Officehours Yes Assistants Yes Forum Yes Resources Virtualdesktopinfrastructure(VDI) No Websites •https://github.com/epfml/OptML_course Optimizationformachinelearning Page2/3"}
{"pack_id": "french_pack", "section_title": "Optional project in computer science", "page": 282, "chunk_id": "french_pack_282_0", "content": "282 2020-2021COURSEBOOKLET CS-596 Optional project in computer science Profsdivers* Cursus Sem. Type Language English Computerscienceminor E,H Opt. Credits 8 Computerscience MA1,MA2, Opt. Session Winter, MA3,MA4 Summer Semester Fall Cybersecurity MA1,MA2, Opt. Exam Duringthe MA3,MA4 semester Workload 240h Weeks 14 Hours 2weekly Project 2weekly Numberof positions Remark forstudentsdoingaminorinComputerScience:Registrationuponauthorizationofthesection.Onlyfor2ndyear Masterstudents.SupervisionbyanICprofessor Summary Individualresearchduringthesemesterundertheguidanceofaprofessororanassistant. Content Subjecttobechosenamongthethemesproposedonthewebsite: https://www.epfl.ch/schools/ic/education/master/computer-science/projects-lab-mcs/ LearningOutcomes Bytheendofthecourse,thestudentmustbeableto: •Organizeaproject •Assess/Evaluateone'sprogressthroughthecourseoftheproject •Presentaproject Transversalskills •Writeascientificortechnicalreport. •Writealiteraturereviewwhichassessesthestateoftheart. Teachingmethods Individualandindependantwork,undertheguidanceofaprofessororanassistant. Assessmentmethods Oralpresentationandwrittenreport. Resources Virtualdesktopinfrastructure(VDI) Yes Websites https://www.epfl.ch/schools/ic/education/master/semester-project-msc/ Optional project in computer science Page 1 / 1"}
{"pack_id": "french_pack", "section_title": "Performance evaluation", "page": 283, "chunk_id": "french_pack_283_0", "content": "283 2020-2021COURSEBOOKLET COM-503 Performance evaluation LeBoudecJean-Yves Cursus Sem. Type Language English ComputerandCommunicationSciences Opt. Credits 7 Computerscience MA2,MA4 Opt. Session Summer Semester Spring Cybersecurity MA2,MA4 Opt. Exam Written DataScience MA2,MA4 Opt. Workload 210h Weeks 14 Datascienceminor E Opt. Hours 6weekly Robotics,ControlandIntelligentSystems Opt. Lecture 3weekly SCmasterEPFL MA2,MA4 Opt. Exercises 1weekly Project 2weekly Numberof positions Remark Thiscoursewillbelastgiveninspring2021 Summary Inthiscourseyouwilllearnthemethodsandtechniquesthatareusedtoperformagoodperformanceevaluationduring aresearchordevelopmentproject. Content MethodologyAPerformanceEvaluationMethodology.Thescientificmethod.DijkstraandOccam'sprinciple. StatisticsandModeling. Statisticsandmodeling,whyandhow.Comparingsystemsusingsampleddata.Regressionmodels.Factorialanalysis. Stochasticloadandsystemmodels.Loadforecasting.TheBox-Jenkinsmethod. Practicals. Usingastatisticspackage(Matlab).Measurements.Discreteeventsimulation.StationarityandSteadyState.Analysisof simulationresults.PerfectSimulations. ElementsofaTheoryofPerformance.Performanceofsystemswithwaitingtimes.Utilizationversuswaitingtimes. Operationallaws.Little'sformula.Forcedflows.law.Stochasticmodelingrevisited.Theimportanceoftheviewpoint.Palm calculus.ApplicationtoSimulationPerformancepatternsincomplexsystems.Bottlenecks.Congestionphenomenon. Performanceparadoxes. Mini-Projectproposedbystudent. LearningPrerequisites Requiredcourses Afirstcourseonprobability Afirstcourseonprogramming LearningOutcomes Bytheendofthecourse,thestudentmustbeableto: •Estimateconfidenceintervals •Designasimulationmethod •Critiqueperformancemetricsandfactors •Organizeaperformanceevaluationstudy •Quantifyperformance Performanceevaluation Page1/2"}
{"pack_id": "french_pack", "section_title": "Performance evaluation", "page": 284, "chunk_id": "french_pack_284_0", "content": "284 2020-2021COURSEBOOKLET •Conductaperformanceanalysis •Synthesizeperformanceresults •Systematizefactorsandmetrics •Presentresultsofaperformanceanalysis Transversalskills •Useaworkmethodologyappropriatetothetask. •Demonstratethecapacityforcriticalthinking Teachingmethods Lectures+pencilandpaperexercises+labs+miniproject Expectedstudentactivities Lectures Paperandpencilexercises Labs Miniproject(last4weeks) Onlinequizzes. Assessmentmethods E=gradeatfinalexam(duringexamsession) L=averageoflabs M=miniprojectgrade Finalgrade=1/3(E+L+M),roundedtothenearesthalfinteger. Allgradesexceptthefinalgradearenotrounded. Resources Virtualdesktopinfrastructure(VDI) No Bibliography •PerformanceEvaluationofComputerandCommunicationSystems,LeBoudecJean-Yves,EPFLPress 2010 •alsofreelyavailableonlineatperfeval.epfl.ch Ressourcesenbibliothèque •Performanceevaluationofcomputerandcommunicationsystems/LeBoudec MoodleLink •http://moodle.epfl.ch/course/view.php?id=14395 Performanceevaluation Page2/2"}
{"pack_id": "french_pack", "section_title": "Principles of computer systems", "page": 285, "chunk_id": "french_pack_285_0", "content": "285 2020-2021COURSEBOOKLET CS-522 Principles of computer systems ArgyrakiKaterina,CandeaGeorge Cursus Sem. Type Language English ComputerandCommunicationSciences Opt. Credits 7 Computerscience MA1,MA3 Opt. Session Winter Semester Fall Cybersecurity MA1,MA3 Opt. Exam Written SCmasterEPFL MA1,MA3 Opt. Workload 210h Weeks 14 Hours 4weekly Lecture 4weekly Numberof positions Summary Thisadvancedgraduatecourseteachesthekeydesignprinciplesunderlyingsuccessfulcomputerandcommunication systems,andshowshowtosolverealproblemswithideas,techniques,andalgorithmsfromoperatingsystems, networks,databases,programminglanguages,andcomputerarchitecture. Content Amoderncomputersystemspansmanylayers:applications,libraries,operatingsystems,networks,andhardware devices.Buildingagoodsystementailsmakingtherighttrade-offs(e.g.,betweenperformance,durability,and correctness)andunderstandingemergentbehaviors.Greatsystemdesignersmakethesetrade-offsinaprincipled fashion,whereasaverageonesmakethembytrial-and-error.Inthiscoursewedevelopaprincipledframeworkfor computersystemdesign,coveringthefollowingtopics: •Modulesandinterfaces •Names •Layers •Indirectionandvirtualization •Redundancyandfaulttolerance •Client/serverarchitectures •Decentralizedarchitectures •Transactionalbuildingblocks LearningPrerequisites Requiredcourses Thecourseisintellectuallychallengingandfast-paced,anditrequiresasolidbackgroundinoperating systems,databases,networking,programminglanguages,andcomputerarchitecture.Thebasiccourses onthesetopicsteachhowtheelementalpartsofmodernsystemswork,andthiscoursepicksupwherethe basiccoursesleaveoff.Todowell,astudentmustmasterthematerialtaughtinthefollowingcourses: •COM-208Computernetworks •CS-208/209Computerarchitecture •CS-210Functionalprogramming •CS-305Softwareengineering •CS-322Introductiontodatabasesystems •CS-323Introductiontooperatingsystems Recommendedcourses Principlesofcomputersystems Page1/3"}
{"pack_id": "french_pack", "section_title": "Principles of computer systems", "page": 286, "chunk_id": "french_pack_286_0", "content": "286 2020-2021COURSEBOOKLET ThefollowingEPFLcoursescovermaterialthatsignificantlyhelpsstudentstakingthiscourse,however theyarenotstrictlyrequired: •CS-320:Computerlanguageprocessing •CS-470:Advancedcomputerarchitecture •CS-422:Databasesystems •COM-407:TCP/IPnetworking LearningOutcomes Bytheendofthecourse,thestudentmustbeableto: •Designcomputerandcommunicationsystemsthatworkwell •Makerationaldesigntrade-offs(e.g.,performancevs.correctness,latencyvs.availability) •Anticipateemergentsystembehaviors(e.g.,failurecascades,securityvulnerabilities) •Integratemultipletechniques,ideas,andalgorithmsfromdifferentfieldsofcomputing/communicationintoaworking system Teachingmethods •Acombinationofonlineandin-classlectures •Interactivedesignsessions •Readingassignments •Homeworkassignments Expectedstudentactivities •Attendlecturesanddesignsessions •Completethereadingandwritingassignments •Participateactivelyinthecourse(physicallyandonline) Assessmentmethods •30%writtenassignments(duringthesemester) •10%researchpresentation(duringthesemester) •10%courseparticipationanddiscussion(duringthesemester) •50%writtenfinalexam(duringtheexamsession) Supervision Officehours Yes Assistants Yes Forum Yes Resources Bibliography Seecoursewebsiteforthelatestinformationandanup-to-datebibliography. Principlesofcomputersystems Page2/3"}
{"pack_id": "french_pack", "section_title": "Principles of computer systems", "page": 287, "chunk_id": "french_pack_287_0", "content": "287 2020-2021COURSEBOOKLET Ressourcesenbibliothèque •Principlesofcomputersystemdesign:anintroduction/Saltzer Websites •https://pocs.epfl.ch Principlesofcomputersystems Page3/3"}
{"pack_id": "french_pack", "section_title": "Probabilistic methods in combinatorics", "page": 288, "chunk_id": "french_pack_288_0", "content": "288 2020-2021COURSEBOOKLET MATH-467 Probabilistic methods in combinatorics MarcusAdamW. Cursus Sem. Type Language English Computerscience MA1,MA3 Opt. Credits 5 Cybersecurity MA1,MA3 Opt. Session Winter Semester Fall Ing.-math MA1,MA3 Opt. Exam Written Mathématicien MA1,MA3 Opt. Workload 150h Weeks 14 SCmasterEPFL MA1,MA3 Opt. Hours 4weekly Lecture 2weekly Exercises 2weekly Numberof positions Summary Wedevelopasophisticatedframeworkforsolvingproblemsindiscretemathematicsthroughtheuseofrandomness(i.e., coinflipping).Thisincludesconstructingmathematicalstructureswithunexpected(andsometimesparadoxical) propertiesforwhichnoothermethodsofconstructionareknown. Content •Linearityofexpectation •Thesecondmomentmethod •Locallemma •Randomgraphsandmatrices •Applicationsincombinatoricsandgraphtheory Keywords randomvariable,expectedvalue,probabilisticmethod,randomgraph LearningPrerequisites Requiredcourses Probabilitytheory Recommendedcourses •DiscreteMathematicsorGraphTheory •LinearAlgebra Importantconceptstostartthecourse Graph,randomvariable,expectation,variance,binomialcoefficients,asymptotics,eigenvalues LearningOutcomes Bytheendofthecourse,thestudentmustbeableto: •Defineandexplainbasicconceptsinprobabilityanddiscretemathematics •Proveexplain,andapplythefirstandsecondmomentmethods Probabilisticmethodsincombinatorics Page1/2"}
{"pack_id": "french_pack", "section_title": "Probabilistic methods in combinatorics", "page": 289, "chunk_id": "french_pack_289_0", "content": "289 2020-2021COURSEBOOKLET •Proveexplain,andapplytheLocalLemma •Solveexercises,designrandomizedalgorithms •Describeandexplainthemethodofinterlacingpolynomials Transversalskills •Summarizeanarticleoratechnicalreport. •Demonstratethecapacityforcriticalthinking •Assessprogressagainsttheplan,andadapttheplanasappropriate. Teachingmethods Lecturesandexercises Expectedstudentactivities Attendingthelectures,solvingtheexercises,readingsectionsfromthetextbook Assessmentmethods Examwritten Danslecasdel’art.3al.5duRèglementdesection,l’enseignantdécidedelaformedel’examenqu’ilcommuniqueaux étudiantsconcernés. Resources Bibliography NogaAlon-JoelSpencer:TheProbabilisticMethod(Wiley) Ressourcesenbibliothèque •NogaProbabilisticmethod Probabilisticmethodsincombinatorics Page2/2"}
{"pack_id": "french_pack", "section_title": "Real-time embedded systems", "page": 290, "chunk_id": "french_pack_290_0", "content": "290 2020-2021COURSEBOOKLET CS-476 Real-time embedded systems BeuchatRené Cursus Sem. Type Language English Computerscience MA2,MA4 Opt. Credits 4 Cybersecurity MA2,MA4 Opt. Session Summer Semester Spring ElectricalandElectronicalEngineering MA2,MA4 Opt. Exam Duringthe MineurSTASChine E Opt. semester Workload 120h Robotics MA2,MA4 Opt. Weeks 14 SCmasterEPFL MA2,MA4 Opt. Hours 4weekly Lecture 2weekly Project 2weekly Numberof positions Summary Arealtimesystemissubjecttoimportanttemporalconstraints.Thiscourseisaboutunderstandingwhereprocessing timeisspentandwhatadesignercandoinordertoachievereal-timeprocessingsystems.Somesolutionsare Multiprocessors,accelerators,custominstructions,specializedhardware. Content Duringthiscourse,responsetimemeasurementsofinterruptsarestudiedinlaboratories,suchasforexample: the influenceofdynamicmemories,cachememories,compilationflags.Interruptsresponsetimemeasurements,task commutationsandsynchronizationsprimitivesarecarriedoutonanembeddedsystembasedonanFPGA. Thecourseincludesthestudyofembeddedsystemsmanagementmodelsthroughpolling,interruptsandusingareal timekernelwithitstaskmanagementandsynchronizationprimitives. SpecializedprogrammableinterfacesareimplementedinVHDLtohelpwiththesemeasurements.Arealtimekernelis studiedandusedduringthelabs.AnacquisitionsystemisimplementedandthegathereddataistransmittedbyaWeb server.ToensuretherealtimeacquisitionandreadingbytheWebserver,amultiprocessorsystemisdevelopedand implementedonanFPGA. AnAcceleratordesignedinVHDLmakesitpossibletofacilitatetheoptimizationoffunctionsthroughhardwareonan FPGA.Crossdevelopmenttoolsareused. Eachtopicistreatedbyatheoreticalcourseandanassociatedlaboratory.ThelaboratoriesarerealizedonanFPGA boardincludingahardcoremultiprocessor.Arealtimeoperatingsystemisstudiedandusedwiththelaboratories. Keywords RealTime,FPGA,SOC,microprocessor,hardwareaccelerator,custominstruction,RealTimeOS LearningPrerequisites Requiredcourses Introductiontocomputingsystems,Logicsystems,Computerarchitecture Recommendedcourses EmbeddedSystems,RealtimeProgramming Importantconceptstostartthecourse ProgrammableLogicArchitecture(FPGA),ComputerArchitecture,VHDL,Cprogramming,RealTimes basicknowledge(semaphor,synchronization) LearningOutcomes Real-timeembeddedsystems Page 1 / 2"}
{"pack_id": "french_pack", "section_title": "Real-time embedded systems", "page": 291, "chunk_id": "french_pack_291_0", "content": "291 2020-2021COURSEBOOKLET Bytheendofthecourse,thestudentmustbeableto: •DesignamultiprocessorsystemonanFPGA •Analyzetheperformanceofarealtimeembeddedsystem •UsedesigntoolsforSOCconceptiononanFPGA •Implementacompletereal-timesystembasedonamultiprocessordesignonanFPGA •Testtherealizedsystem •Defendthechoicesduringthedesignphases Transversalskills •Setobjectivesanddesignanactionplantoreachthoseobjectives. •Communicateeffectively,beingunderstood,includingacrossdifferentlanguagesandcultures. •Continuetoworkthroughdifficultiesorinitialfailuretofindoptimalsolutions. •Makeanoralpresentation. •Writeascientificortechnicalreport. Teachingmethods Excathedra,laboratoriesandamini-project Expectedstudentactivities •3groupsoflaboratoriesonspecifictopics,withareportbygroupforeachofthem,3-4weeks/topic; •Afinalmini-projecttopracticallysynthesizethecontentofthecourse,withthedesignofamultiprocessorsystemon anFPGA,includingforexampleaWeb-server,acameracontroller,aspecificalgorithmtobeimplementedinanFPGA hardwareaccelerator,3~4weeksforthismini-project Assessmentmethods Continuouscontrolwithreportsandoralpresentation alllabs50%+finalmini-project50% Supervision Officehours No Assistants Yes Forum Yes Resources Virtualdesktopinfrastructure(VDI) No Bibliography Teachingnotesandsuggestedreadingmaterial. Specializeddatasheets(ie.ex.FPGAetspecificmicrocontrollers)andstandards. Notes/Handbook Slidesanddocumentsonmoodle MoodleLink •http://moodle.epfl.ch/course/view.php?id=391 Real-timeembeddedsystems Page 2 / 2"}
{"pack_id": "french_pack", "section_title": "Semester project in Computer Science II", "page": 292, "chunk_id": "french_pack_292_0", "content": "292 2020-2021COURSEBOOKLET CS-498 Semester project in Computer Science II Profsdivers* Cursus Sem. Type Language English Computerscience MA1,MA2, Obl. Credits 12 MA3,MA4 Session Winter, Summer Semester Fall Exam Duringthe semester Workload 360h Weeks 14 Hours 2weekly Project 2weekly Numberof positions Summary Individualresearchduringthesemesterundertheguidanceofaprofessororanassistant. Content Subjecttobechosenamongthethemesproposedonthewebsite: https://www.epfl.ch/schools/ic/education/master/computer-science/projects-lab-mcs/ LearningOutcomes Bytheendofthecourse,thestudentmustbeableto: •Organizeaproject •Assess/Evaluateone'sprogressthroughthecourseoftheproject •Presentaproject Transversalskills •Writeascientificortechnicalreport. •Writealiteraturereviewwhichassessesthestateoftheart. Assessmentmethods Writtenreportandoralpresentation Resources Virtualdesktopinfrastructure(VDI) No Websites •https://www.epfl.ch/schools/ic/education/master/semester-project-msc/ SemesterprojectinComputerScienceII Page1/1"}
{"pack_id": "french_pack", "section_title": "Sensors in medical instrumentation", "page": 293, "chunk_id": "french_pack_293_0", "content": "293 2020-2021COURSEBOOKLET EE-511 Sensors in medical instrumentation AminianKamiar Cursus Sem. Type Language English Bioengineering MA4 Opt. Credits 3 Biomedicaltechnologiesminor E Opt. Session Summer Semester Spring Computerscience MA2,MA4 Opt. Exam Written Cybersecurity MA2,MA4 Opt. Workload 90h Weeks 14 ElectricalandElectronicalEngineering MA2,MA4 Opt. Hours 3weekly LifeSciencesEngineering MA2,MA4 Opt. Lecture 2weekly Microtechnics MA2,MA4 Opt. Exercises 1weekly Numberof Robotics,ControlandIntelligentSystems Opt. positions Robotics MA2,MA4 Opt. SCmasterEPFL MA2,MA4 Opt. Sciencesduvivant MA4 Opt. Summary Fundamentalprinciplesandmethodsusedforphysiologicalsignalconditioning.Resistive,capacitive,inductive, piezoelectricandopticaltechniquesusedtodetectandconvertphysiologicalinformation'stoelectricalsignals. Laboratoryandambulatorydevicesformonitoringandtherapy. Content 1.PhysiologicalMesurands Biopotentials;bioimpedance;mechanical,acousticandthermalsignals 2.Noiseinmedicalinstrumentation Sourceandnatureofthenoise;noisereduction;instrumentationamplifier forbiopotentialmeasurement 3.Biopotentialmeasurement Electrodes;ECG,EMGandEEGmeasurement 4.Resistivesensors Thermistoranditsbiomedicalapplications;straingageforthe measurementofbloodpressure;forceandaccelerationsofthebody 5.Inductivesensors Simpleandmutualinductanceanditsmedicalapplications 6.Capacitivesensors Respiratoryflowmeasurementbythegradientofpressure 7.Piezoelectricsensors Forceplatform,accelerometer,angularratesensorforthemeasurement oftremorsandbodymovements,ultrasoundtransducer:measurementof pressureandflowrate 8.Opticalsensors Photoplethysmography;pulsedoxymetry 9.Exampleofapplications Keywords sensors,instrumentation,biomedicaldevices,physiologicalmeasurement,monitoring LearningPrerequisites Requiredcourses coursesenelectricalcircuit,basicelectronics Sensorsinmedicalinstrumentation Page 1 / 2"}
{"pack_id": "french_pack", "section_title": "Sensors in medical instrumentation", "page": 294, "chunk_id": "french_pack_294_0", "content": "294 2020-2021COURSEBOOKLET Recommendedcourses measuringsystemsorelectronicsorsensors Importantconceptstostartthecourse basicelectronics,basicphysics LearningOutcomes Bytheendofthecourse,thestudentmustbeableto: •Choosetechniquesdetectingandconvertphysiologicalinformation'stoelectricalsignals •Exploitfundamentalprinciplesandmethodsusedforphysiologicalsignalconditioning •Designmeasuringdevices •Interpreterror,noiseinbiomedicalmeasuringsystems Transversalskills •Useaworkmethodologyappropriatetothetask. •Communicateeffectivelywithprofessionalsfromotherdisciplines. Teachingmethods Excathedra,withexercises Expectedstudentactivities homework,shortquizzesduringsemester Assessmentmethods Written Supervision Officehours Yes Assistants Yes Forum Yes Resources Bibliography MedicalInstrumentation:Applicationanddesign,JGWebster Ressourcesenbibliothèque •MedicalInstrumentation/Webster Notes/Handbook Slidescopies(tobecompletedduringthelectures) Polycopies(inFrenchonly) MoodleLink •http://moodle.epfl.ch/course/view.php?id=2571 Prerequisitefor Semester project and Master project Sensorsinmedicalinstrumentation Page 2 / 2"}
{"pack_id": "french_pack", "section_title": "Set theory", "page": 295, "chunk_id": "french_pack_295_0", "content": "295 2020-2021COURSEBOOKLET MATH-318 Set theory DuparcJacques Cursus Sem. Type Language English Computerscience MA2,MA4 Opt. Credits 5 Cybersecurity MA2,MA4 Opt. Session Summer Semester Spring Ing.-math MA2,MA4 Opt. Exam Written Mathématicien MA2 Opt. Workload 150h Weeks 14 SCmasterEPFL MA2,MA4 Opt. Hours 4weekly Lecture 2weekly Exercises 2weekly Numberof positions Remark Coursdonnéenalternancetouslesdeuxans Summary SetTheoryasafoundationalsystemformathematics.ZF,ZFCandZFwithatoms.RelativeconsistencyoftheAxiomof Choice,theContinuumHypothesis,therealsasacountableunionofcountablesets,theexistenceofacountablefamily ofpairswithoutanychoicefunction. Content SetTheory:ZFC.Extensionalityandcomprehension.Relations,functions,andwell-ordering.Ordinals.Classand transfiniterecursion.Cardinals.Well-foundedrelations,axiomoffoundation,induction,andvonNeumann'shierarchy. Relativization,absoluteness,reflectiontheorems.Gödel'sconstructibleuniverseL.AxiomofChoice(AC),and ContinuumHypothesisinsideL.Po-sets,filtersandgenericextensions.Forcing.ZFCingenericextensions.Cohen Forcing.IndependenceoftheContinuumHypothesis.HODandAC:independenceofAC.TherealswithoutAC. Symmetricsubmodelsofgenericextensions.Applicationsofthesymmetricsubmodeltechinique(therealsasa countableunionofcountablesets,therealsnotwell-orderable,everyultirafilterontheintegersistrivial).ZFwithatoms andpermutationmodels.Simultatingpermutationmodelsbysymmetricsubmodelsofgenericextensions. Keywords SetTheory,Relativeconsistency,ZFC,Ordinals,Cardinals,Transfiniterecursion,Relativization,Absoluteness, Constructibleuniverse,L,AxiomofChoice,Continuumhypothesis,Forcing,Genericextensions LearningPrerequisites Requiredcourses MATH-381MathematicalLogic. Inparticularordinalnumbersandordinalarithmeticwillbeconsideredknownandadmitted. Recommendedcourses Mathematicallogic(oranyequivalentcourseonfirstorderlogic).Warning:withoutagoodunderstandingof firstorderlogic,studentstendtogetlostsoonerorllater. Importantconceptstostartthecourse •1storderlogic •basicsofprooftheory Settheory Page1/3"}
{"pack_id": "french_pack", "section_title": "Set theory", "page": 296, "chunk_id": "french_pack_296_0", "content": "296 2020-2021COURSEBOOKLET •Basicsofmodeltheory •Compacitytheorem •Löwenheim-Skolem •Completenesstheorem LearningOutcomes Bytheendofthecourse,thestudentmustbeableto: •SpecifyamodelofZFC •Proveconsistencyresults •Developagenericextension •Arguebytransfiniteinduction •DecidewhetherZFCprovesitsownconsistency •FormalizetheaxiomsofZF,AC,CH,DC •Sketchaninnermodel •Justifytheaxiomoffoundation Teachingmethods Excathedralectureandexercises Expectedstudentactivities •Attendanceatlectures •Solvetheexercises Assessmentmethods •Writenexam(3hours) •Danslecasdel’art.3al.5duRèglementdesection,l’enseignantdécidedelaformedel’examenqu’ilcommunique auxétudiantsconcernés Supervision Officehours Yes Assistants Yes Forum Yes Resources Virtualdesktopinfrastructure(VDI) No Bibliography 1. KennethKunen:Settheory,Springer,1983 2. LorenzHalbeisen:CombinatorialSetTheory,Springer2018 3. ThomasJech:Settheory,Springer2006 4. Jean-LouisKrivine:Theoriedesensembles,2007 Settheory Page2/3"}
{"pack_id": "french_pack", "section_title": "Set theory", "page": 297, "chunk_id": "french_pack_297_0", "content": "297 2020-2021COURSEBOOKLET 5. PatrickDehornoy:Logiqueetthéoriedesensembles;Notesdecours,FIMFAENS: http://www.math.unicaen.fr/~dehornoy/surveys.html 6. YiannisMoschovakis:Notesonsettheory,Springer2006 7. KarelHrbacekandThomasJech:IntroductiontoSettheory,(3dedition),1999 Ressourcesenbibliothèque •IntroductiontoSettheory/Hrbacek •Settheory/Jech •Theoriedesensembles/Krivine •Settheory/Kunen • Notesonsettheory/Moschovakis •Logiqueetthéoriedesensembles/Dehorny Notes/Handbook Lecturenotes(350pages). Websites •http://www.hec.unil.ch/logique/ MoodleLink •http://moodle.epfl.ch/course/index.php?categoryid=72 Settheory Page3/3"}
{"pack_id": "french_pack", "section_title": "Smart grids technologies", "page": 298, "chunk_id": "french_pack_298_0", "content": "298 2020-2021COURSEBOOKLET EE-472 Smart grids technologies LeBoudecJean-Yves,PaoloneMario Cursus Sem. Type Language English Computerscience MA2,MA4 Opt. Credits 5 Cybersecurity MA2,MA4 Opt. Session Summer Semester Spring ElectricalandElectronicalEngineering MA2,MA4 Obl. Exam Written EnergyManagementandSustainability MA2,MA4 Opt. Workload 150h Weeks 14 EnergyScienceandTechnology MA2,MA4 Opt. Hours 5weekly Energyminor E Obl. Lecture 2weekly SCmasterEPFL MA2,MA4 Opt. Exercises 1weekly Practical 2weekly work Numberof positions Summary Learnthetechnologiesandmethodologiesusedinthecontextsmartelectricalgridsandbeableto deploy/implement/testtheminalabenvironment. Content 1. Modernmonitoring:phasormeasurementunitstechnology,synchrophasorsextractionprocessesandtime alignement 2. Smartgridcommunication;reliability,realtimeandsecurityissues 3. Topologyassessmentandcontingencyanalysisofpowergrids 4. Admittancematrixcalculus,numericalsolutionoftheloadflowproblemandstateestimation 5. Energymanagementanddispatchplans,theoptimalpowerflowproblem 6. Demandresponse Keywords Smartgrid,powersystems LearningPrerequisites Requiredcourses Electricpowersystems,powerdistributionnetworks,TPC/IPNetworking Recommendedcourses Signalprocessing,discreteoptimizationmethods,modelpredictivecontrol,industrialelectronics. Importantconceptstostartthecourse Understandingofelectricalgridsandcommunicationnetworks. LearningOutcomes Bytheendofthecourse,thestudentmustbeableto: •Designmonitoringandcontrolplatformsforsmartgrids •Testasmartgrid •Implementasmartgrid •Analyzeperformanceofasmartgrid Smartgridstechnologies Page1/2"}
{"pack_id": "french_pack", "section_title": "Smart grids technologies", "page": 299, "chunk_id": "french_pack_299_0", "content": "299 2020-2021COURSEBOOKLET Transversalskills •Planandcarryoutactivitiesinawaywhichmakesoptimaluseofavailabletimeandotherresources. •Continuetoworkthroughdifficultiesorinitialfailuretofindoptimalsolutions. •Demonstratethecapacityforcriticalthinking •Managepriorities. •UsebothgeneralanddomainspecificITresourcesandtools Teachingmethods Excathedra,classroomintegratedexercisesandcomputerlaboratorysessions. Expectedstudentactivities Attendlecturesandlabs Dolabhomeworks Doonlinequizzes Assessmentmethods Writtenexam(50%)andgradedlabreports(50%) Prerequisitefor Masterprojectsintheareasofpowersystemsandenergyconversionsystems. Smartgridstechnologies Page2/2"}
{"pack_id": "french_pack", "section_title": "Social media", "page": 300, "chunk_id": "french_pack_300_0", "content": "300 2020-2021COURSEBOOKLET EE-593 Social media GilletDenis Cursus Sem. Type Language English Computerscience MA2,MA4 Opt. Credits 2 Cybersecurity MA2,MA4 Opt. Withdrawal Unauthorized Session Summer ElectricalandElectronicalEngineering MA2,MA4 Opt. Semester Spring MineurSTASChine E Opt. Exam Duringthe semester SCmasterEPFL MA2,MA4 Opt. Workload 60h UNIL-HEC E Opt. Weeks 14 Hours 2weekly Lecture 1weekly Project 1weekly Numberof 45 positions Summary TheobjectiveistoenablestudentstocriticallyapprehendtheHumanComputerInteraction(HCI)challengesassociated withthedesignandtheexploitationofsocialmediaplatforms. Content •Socialmediaplatformsandthelongtail(definitionandtypology) •Usabilityandadoptionofsocialmediaplatforms •Web2.0featuresandadoptionfactors •Privacy,trustandreputationmodels •Identities,traces,andWebanalytics •Interplay,betweenplatformsandcommunities(interdisciplinaryperspective) •Opportunities,requirementsandconstraintsfororganizationandenterprises •Participatorydesignmethodologies •Futureadhocsocialapplications LearningOutcomes Bytheendofthecourse,thestudentmustbeableto: •Choose •Design •Critique •Defend Transversalskills •Setobjectivesanddesignanactionplantoreachthoseobjectives. •Planandcarryoutactivitiesinawaywhichmakesoptimaluseofavailabletimeandotherresources. •Useaworkmethodologyappropriatetothetask. •Communicateeffectively,beingunderstood,includingacrossdifferentlanguagesandcultures. Socialmedia Page1/2"}
{"pack_id": "french_pack", "section_title": "Social media", "page": 301, "chunk_id": "french_pack_301_0", "content": "301 2020-2021COURSEBOOKLET •Communicateeffectivelywithprofessionalsfromotherdisciplines. •Evaluateone'sownperformanceintheteam,receiveandrespondappropriatelytofeedback. •Negotiateeffectivelywithinthegroup. •Assessone'sownlevelofskillacquisition,andplantheiron-goinglearninggoals. Teachingmethods Lectures,invitedspeakers,individualworkandteamwork Assessmentmethods Oneindividualprojectandoneteamworkwithcombinedpeerandexpertassesment(reportsandpresentations) Supervision Officehours No Assistants Yes Forum No Resources Bibliography •ChrisAnderson(2006)-TheLongTail:WhytheFutureofBusinessisSellingLessofMore.NewYork, NY:Hyperion.ISBN1-4013-0237-8. •JoshuaPorter-DesigningfortheSocialWeb •MatthewA.Russel-MiningtheSocialWeb:AnalyzingDatafromFacebook,Twitter,LinkedIn,andOther SocialMediaSites.O¿Reilly2011 Ressourcesenbibliothèque •DesigningfortheSocialWeb/Porter •TheLongTail/Anderson •MiningtheSocialWeb/Russel Socialmedia Page2/2"}
{"pack_id": "french_pack", "section_title": "Software security", "page": 302, "chunk_id": "french_pack_302_0", "content": "302 2020-2021COURSEBOOKLET CS-412 Software security PayerMathias Cursus Sem. Type Language English Computerscience MA2,MA4 Opt. Credits 6 Cybersecurityminor E Opt. Session Summer Semester Spring Cybersecurity MA2,MA4 Opt. Exam Duringthe DataScience MA2,MA4 Opt. semester Workload 180h SCmasterEPFL MA2,MA4 Opt. Weeks 14 Hours 6weekly Lecture 3weekly Exercises 2weekly Practical 1weekly work Numberof positions Summary Thiscoursefocusesonsoftwaresecurityfundamentals,securecodingguidelinesandprinciples,andadvancedsoftware securityconcepts.Studentslearntoassessandunderstandthreats,learnhowtodesignandimplementsecuresoftware systems,andgethands-onexperiencewithsecuritypitfalls. Content Thiscoursefocusesonsoftwaresecurityfundamentals,securecodingguidelinesandprinciples,andadvancedsoftware securityconcepts.Studentswilllearntoassessandunderstandthreats,learnhowtodesignandimplementsecure softwaresystems,andgethands-onexperiencewithcommonsecuritypitfalls. Softwarerunningoncurrentsystemsisexploitedbyattackersdespitemanydeployeddefencemechanismsandbest practicesfordevelopingnewsoftware.Inthiscoursestudentswilllearnaboutcurrentsecuritythreats,attackvectors, anddefencemechanismsoncurrentsystems.Thestudentswillworkwithrealworldproblemsandtechnicalchallenges ofsecuritymechanisms(bothinthedesignandimplementationofprogramminglanguages,compilers,andruntime systems). • Securesoftwarelifecycle:design,implementation,testing,anddeployment • Basicsoftwaresecurityprinciples • Reverseengineering:understandingcode • Securitypolicies:MemoryandTypesafety • Softwarebugsandundefinedbehavior • Attackvectors:fromflawtocompromise • Runtimedefense:mitigations • Softwaretesting:fuzzingandsanitization • Focustopic:Websecurity • Softwaresecurity Page1/3"}
{"pack_id": "french_pack", "section_title": "Software security", "page": 303, "chunk_id": "french_pack_303_0", "content": "303 2020-2021COURSEBOOKLET Focustopic:Mobilesecurity Keywords Softwaresecurity,mitigation,softwaretesting,sanitization,fuzzing LearningPrerequisites Requiredcourses • COM-402Informationsecurityandprivacy Importantconceptstostartthecourse Basiccomputerliteracylikesystemadministration,buildsystems,basicC/C++programmingskills, debugging,anddevelopmentskills.Understandingofvirtualmachinesandoperatingsystems. LearningOutcomes Bytheendofthecourse,thestudentmustbeableto: •Explainthetop20mostcommonweaknessesinsoftwaresecurityandunderstandhowsuchproblemscanbe avoidedinsoftware. •Identifycommonsecuritythreats,risks,andattackvectorsforsoftwaresystems. •Assess/Evaluatecurrentsecuritybestpracticesanddefensemechanismsforcurrentsoftwaresystems.Become awareoflimitationsofexistingdefensemechanismsandhowtoavoidthem. •Identifysecurityproblemsinsourcecodeandbinaries,assesstheassociatedrisks,andreasonabouttheirseverity andexploitability. •Assess/Evaluatethesecurityofgivensourcecodeorapplications. Transversalskills •Identifythedifferentrolesthatareinvolvedinwell-functioningteamsandassumedifferentroles,includingleadership roles. •Keepappropriatedocumentationforgroupmeetings. •Summarizeanarticleoratechnicalreport. •Accessandevaluateappropriatesourcesofinformation. •Writeascientificortechnicalreport. •Makeanoralpresentation. Teachingmethods Thelecturesaredenserearlyinthesemester,thentaperingoffbeforetheend.Theymaybepepperedwithoccasional shortsurprisequizzesthatarenotmandatorybutmayearnpointsforsuccessfulparticipants.Theyarebackedupby PDFfilesofallthelecturematerial,aswellasafewtextbookrecommendations. Theexercisessessionsstartslowlyearlyinthesemesterbutpickupandoccupyalltimetowardstheend.Theyconsist mostlyofpaperquestionsinvolvingtheanalysis,criticalreview,andoccasionalcorrectionofsoftware.Theyincludea reading,writing,andpresentationassignment. Expectedstudentactivities Softwaresecurity Page2/3"}
{"pack_id": "french_pack", "section_title": "Software security", "page": 304, "chunk_id": "french_pack_304_0", "content": "304 2020-2021COURSEBOOKLET Studentsareencouragedtoattendlecturesandexercisesessions.Inadditiontonormalstudyingofthelectureand practiceoftheexercises,thereadingassignmentconsistsofanalyzingafewsuggestedscientificpapersonalarge selectionoftopics;thepresentationassignmentconsistsofholdinga15-minutepresentationontheselectedtopic;and thewritingassignmentofdocumentingwhatwaslearnedinatermpaperdueattheendofthesemester. Assessmentmethods Thegradewillcontinuouslybeevaluatedthroughacombinationofpracitcalassignmentsintheformofseverallabsand theoreticalquizzesandassignmentsthroughoutthesemester.Thelabswillaccountfor70%,thequizzesand assignmentsto30%. Supervision Officehours Yes Assistants Yes Forum No Resources Notes/Handbook SoftwareSecurity:Principles,Policies,andProtection(SS3P,byMathiasPayer) http://nebelwelt.net/SS3P/ Softwaresecurity Page3/3"}
{"pack_id": "french_pack", "section_title": "Statistical signal & data processing through applications", "page": 305, "chunk_id": "french_pack_305_0", "content": "305 2020-2021COURSEBOOKLET COM-500 Statistical signal and data processing through applications RidolfiAndrea Cursus Sem. Type Language English Communicationsystemsminor E Opt. Credits 6 Computerscience MA2,MA4 Opt. Session Summer Semester Spring Cybersecurity MA2,MA4 Opt. Exam Written Robotics,ControlandIntelligentSystems Opt. Workload 180h Weeks 14 SCmasterEPFL MA2,MA4 Obl. Hours 5weekly Lecture 3weekly Exercises 2weekly Numberof positions Summary Buildinguponthebasicconceptsofsampling,filteringandFouriertransforms,weaddressstochasticmodeling,spectral analysis,estimationandprediction,classification,andadaptivefiltering,withanapplicationorientedapproachand hands-onnumericalexercises. Content 1.FundamentalsofStatisticalSignalandDataProcessing:Signalsandsystemsfromthedeterministicandthe stochasticpointofview;Processingandanalysingsignalsandsystemswithamathematicalcomputinglanguage. 2.Models,Methods,andAlgorithms:Parametricandnon-parametricsignalmodels(widesensestationary,Gaussian, Markovian,auto-regressiveandwhitenoisesignals);Linearpredictionandestimation(orthogonalityprincipleandWiener filter);MaximumlikehoodestimationandBayesianapriori;Maximumaposterioriestimation. 3.StatisticalSignalandDataProcessingToolsforSpreadSpectrumWirelessTransmission:Codingand decodingofinformationusingpositionofpulses(annihilatingfilterapproach);Spectrumestimation(periodogram,line spectrummethods,smoothspectrummethods,harmonicsignals). 4.StatisticalSignalandDataProcessingToolsfortheAnalysisofNeurobiologicalRecordings:Poissonprocess forneurobiologicalspikes;Characterizationofmultiplestateneurons(Markovianmodelsandmaximumlikelihood estimation);Classifyingfiringratesofneuron(MixturemodelsandtheEMalgorithm);HiddenMarkovmodels;Spike sortingandPrincipalComponentAnalysis. 5.StatisticalSignalandDataProcessingToolsforEchoCancellation:Adaptivefiltering(leastmeansquaresand recursiveleastsquares);Adaptiveechocancellationanddenoising. Keywords Statisticaltools,spectralanalysis,prediction,estimation,annihilatingfilter,mixturemodels,principalcomponentanalysis, stochasticprocesses,hiddenMarkovmodels,adaptivefiltering,mathematicalcomputinglanguage(Matlab,Python,or similar). LearningPrerequisites Requiredcourses StochasticModelsinCommunications(COM-300),SignalProcessingforCommunications(COM-303). Recommendedcourses MathematicalFoundationsofSignalProcessing(COM-514). Importantconceptstostartthecourse Calculus,Algebra,FourierTransform,ZTransform,Probability,LinearSystems,Filters. LearningOutcomes Statisticalsignalanddataprocessingthroughapplications Page1/3"}
{"pack_id": "french_pack", "section_title": "Statistical signal & data processing through applications", "page": 306, "chunk_id": "french_pack_306_0", "content": "306 2020-2021COURSEBOOKLET Bytheendofthecourse,thestudentmustbeableto: •Chooseappropriatestatisticaltoolstosolvesignalprocessingproblems; •Analyzerealdatausingamathematicalcomputinglanguage; •Interpretspectralcontentofsignals; •Developappropriatemodelsforobservedsignals; •Assess/Evaluateadvantagesandlimitationsofdifferentstatisticaltoolsforagivensignalprocessingproblem; •Implementnumericalmethodsforprocessingsignals. Teachingmethods Excathedrawithexercisesandnumericalexamples. Expectedstudentactivities Attendanceatlectures,completingexercises,testingpresentedmethodswithamathematicalcomputinglanguage (Matlab,Python,orsimilar). Assessmentmethods •20%midterm •10%miniproject •70%Finalexam Supervision Officehours Yes Assistants Yes Forum Yes Resources Bibliography Backgroundtexts •P.Prandoni,SignalProcessingforCommunications,EPFLPress; •P.Bremaud,AnIntroductiontoProbabilisticModeling,Springer-Verlag,1988; •A.V.Oppenheim,R.W.Schafer,DiscreteTimeSignalProcessing,PrenticeHall,1989; •B.Porat,ACourseinDigitalSignalProcessing,JohnWiley&Sons,1997; •C.T.Chen,DigitalSignalProcessing,OxfordUniversityPress; •D.P.Bertsekas,J.N.Tsitsiklis,IntroductiontoProbability,AthenaScientific,2002(excellentbookon probability). Moreadvancedtexts •L.DebnathandP.Mikusinski,IntroductiontoHilbertSpaceswithApplications,Springer-Verlag,1988; •A.N.Shiryaev,Probability,Springer-Verlag,NewYork,2ndedition,1996; •S.M.Ross,IntroductiontoProbabilityModels,Thirdedition,1985; •P.Bremaud,MarkovChains,Springer-Verlag,1999; •P.Bremaud,MathematicalPrinciplesofSignalProcessing,Springer-Verlag,2002; •S.M.Ross,StochasticProcesses,JohnWiley,1983; •B.Porat,DigitalProcessingofRandomSignals,PrenticeHall,1994; •P.M.Clarkson,OptimalandAdaptiveSignalProcessing,CRCPress,1993; •P.StoïcaandR.Moses,IntroductiontoSpectralAnalysis,Prentice-Hall,1997. Statisticalsignalanddataprocessingthroughapplications Page2/3"}
{"pack_id": "french_pack", "section_title": "Statistical signal & data processing through applications", "page": 307, "chunk_id": "french_pack_307_0", "content": "307 2020-2021COURSEBOOKLET Ressourcesenbibliothèque •Probability/Shiryaev •StochasticsProcesses/Ross •DiscreteTimeSignalProcessing/Oppenheim • IntroductiontoSpectralAnalysis/Stoïca •DigitalProcessingofRandomSignals/Porat •IntroductiontoProbability/Bertsekas •IntroductiontoHilbertSpaceswithApplications/Debnath •SignalProcessinsforCommunications/Prandoni •AnIntroductiontoProbabilisticModeling/Bremaud •ACourseinDigitalSignalProcessing/Porat •OptimalandAdaptiveSignalProcessing/Clarkson •DigitalSignalProcessing/Chen •IntroductiontoProbabilityModels/Ross Notes/Handbook •Slideshandouts; •Collectionofexercises. Statisticalsignalanddataprocessingthroughapplications Page3/3"}
{"pack_id": "french_pack", "section_title": "Sublinear algorithms for big data analysis", "page": 308, "chunk_id": "french_pack_308_0", "content": "308 2020-2021COURSEBOOKLET CS-448 Sublinear algorithms for big data analysis Cursus Sem. Type Language English Computerscience MA2,MA4 Opt. Credits 4 Cybersecurity MA2,MA4 Opt. Session Summer Semester Spring DataScience MA2,MA4 Opt. Exam Duringthe SCmasterEPFL MA2,MA4 Opt. semester Workload 120h Weeks 14 Hours 3weekly Lecture 3weekly Numberof positions Remark Coursbiennal,donnélesannéesimpaires(pasdonnéen2020-21) Summary Inthiscoursewewilldefinerigorousmathematicalmodelsforcomputingonlargedatasets,covermainalgorithmic techniquesthathavebeendevelopedforsublinear(e.g.fasterthanlineartime)dataprocessing.Wewillalsodiscuss limitationsinherenttocomputingwithconstrainedresources. Content Thetentativelistoftopicsis: Streaming:givenalargedatasetasastream,howcanweapproximateitsbasicpropertiesusingaverysmallmemory footprint?Examplesthatwewillcoverincludestatisticalproblemssuchasestimatingthenumberofdistinctelementsin astreamofdataitems,findingheavyhitters,frequencymoments,aswellasgraphsproblemssuchasapproximating shortestpathdistances,maximummatchingsetc.; Sketching:whatcanwelearnabouttheinputfromafewcarefullydesignedmeasurements(i.e.a`sketch')oftheinput, orjustafewsamplesoftheinput?Wewillcoverseveralresultsinsparserecoveryandpropertytestingthatanswerthis questionforarangeoffundamentalproblems; Sublinearruntime:whichproblemsadmitsolutionsthatrunfasterthanittakestoreadtheentireinput?Wewillcover sublineartimealgorithmsforgraphprocessingproblems,nearestneighborsearchandsparserecovery(including SparseFFT); Communication:howcanwedesignalgorithmsformoderndistributedcomputationmodels(e.g.MapReduce)thathave lowcommunicationrequirements?Wewilldiscussgraphsketching,arecentlydevelopedapproachfordesigninglow communicationalgorithmsforprocessingdynamicallychanginggraphs,aswellasothertechniques. Keywords streaming,sketching,sparserecovery,sublinearalgorithms LearningPrerequisites Requiredcourses Bachelorcoursesonalgorithms,complexitytheory,anddiscretemathematics Importantconceptstostartthecourse Discreteprobability;mathematicalmaturity LearningOutcomes Bytheendofthecourse,thestudentmustbeableto: Sublinearalgorithmsforbigdataanalysis Page1/2"}
{"pack_id": "french_pack", "section_title": "Sublinear algorithms for big data analysis", "page": 309, "chunk_id": "french_pack_309_0", "content": "309 2020-2021COURSEBOOKLET •Designefficientalgorithmsforvariationsofproblemsdiscussedinclass •Analyzespace/time/communicationcomplexityofrandomizedalgorithms •Provespace/time/communicationlowerboundsforvariationsofproblemsdiscussedinclass •Chooseanappropriatealgorithmictoolforbigdataproblemathand Teachingmethods Excathedra,homeworks,final Assessmentmethods Continuouscontrol Supervision Officehours Yes Assistants Yes Forum Yes Sublinearalgorithmsforbigdataanalysis Page2/2"}
{"pack_id": "french_pack", "section_title": "TCP/IP networking", "page": 310, "chunk_id": "french_pack_310_0", "content": "310 2020-2021COURSEBOOKLET COM-407 TCP/IP networking LeBoudecJean-Yves Cursus Sem. Type Language English Communicationsystemsminor H Opt. Credits 6 Computerscience MA1,MA3 Obl. Session Winter Semester Fall Cybersecurityminor H Opt. Exam Written Cybersecurity MA1,MA3 Obl. Workload 180h Weeks 14 ElectricalandElectronicalEngineering MA1,MA3 Opt. Hours 6weekly SCmasterEPFL MA1,MA3 Obl. Lecture 2weekly Exercises 2weekly Practical 2weekly work Numberof positions Summary Inthelecturesyouwilllearnandunderstandthemainideasthatunderlieandthewaycommunicationnetworksarebuilt andrun.Inthelabsyouwillexercisepracticalconfigurations. Content LECTURES:1.TheTCP/IParchitecture2.Layer2networking;Bridging.3.TheInternetprotocolversions4and64.The transportlayer,TCP,UDP,sockets,QUIC.5.Linkstaterouting,OSPF,DistanceVectorrouting.Interdomainrouting, BGP.6.Congestioncontrolprinciples.ApplicationtotheInternet.ThefairnessofTCP.Tunnelsandhybridarchitectures. LABS:1.Configurationofanetwork,virtualmachinesandmininet,packetcaptures2.MAC;NATsandtroubleshooting 3.Socketprogramming4.OSPFrouting5.Congestioncontrolandflowmanagement6.BGP Keywords TCP/IP ComputerNetworks LearningPrerequisites Requiredcourses Afirstprogrammingcourse LearningOutcomes Bytheendofthecourse,thestudentmustbeableto: •Runandconfigurenetworks •UnderstandthemainideasthatunderlietheInternet •Writesimplecommunicatingprograms •Usecommunicationprimitivesforinternetandindustrialapplications. Transversalskills •Accessandevaluateappropriatesourcesofinformation. •Continuetoworkthroughdifficultiesorinitialfailuretofindoptimalsolutions. Teachingmethods TCP/IPnetworking Page1/2"}
{"pack_id": "french_pack", "section_title": "TCP/IP networking", "page": 311, "chunk_id": "french_pack_311_0", "content": "311 2020-2021COURSEBOOKLET Lectureswithquestionnaires. Onlinequizzes. Labsonstudent'scomputerandifrequiredandifpossible,intheInternetEngineeringWorkshop Expectedstudentactivities Participateinlectures Participateinonlinequizzes Makelabassignments (intherule,everyotherweek,includinghandinginawrittenreport) Assessmentmethods Theorygrade=finalexam Practicegrade=averageoflabs Finalgrade= meanoftheorygrade(50%)andpracticegrade(50%). Theresearchexercicemaygiveabonusofatmost0.5pointsin1-6scaleonthepracticegrade. Supervision Officehours Yes Assistants Yes Forum Yes Resources Bibliography \"ComputerNetworking:Principles,ProtocolsandPractice\",O.Bonaventure,opensourcetextbook, http://inl.info.ucl.ac.be/CNP3 Ressourcesenbibliothèque •ComputerNetworking/Bonaventure Notes/Handbook Slidesareonmoodle Websites •http://moodle.epfl.ch/course/view.php?id=523 MoodleLink •http://moodle.epfl.ch/course/view.php?id=523 Videos •http://moodle.epfl.ch/course/view.php?id=523 TCP/IPnetworking Page2/2"}
{"pack_id": "french_pack", "section_title": "Technology ventures in IC", "page": 312, "chunk_id": "french_pack_312_0", "content": "312 2020-2021COURSEBOOKLET CS-410 Technology ventures in IC Cursus Sem. Type Language English Computerscience MA2,MA4 Opt. Credits 4 Cybersecurity MA2,MA4 Opt. Session Summer Semester Spring DataScience MA2,MA4 Opt. Exam Duringthe MineurSTASChine E Opt. semester Workload 120h SCmasterEPFL MA2,MA4 Opt. Weeks 14 Hours 4weekly Lecture 2weekly Project 2weekly Numberof positions Remark pasdonnéen2020-21 Summary Thishands-onclassgivesgraduatestudentsinICinterestedinstartupstheopportunitytolearnandputinpracticethe fundamentalskillsrequiredtoassessatechnologyconceptinthecontextofabusinessopportunity.Thisclassisfocused onlyonbusinessopportunitieswherehigh-technology Content Workinginteams,studentswilllearnthefundamentalsof: •Opportunityassessement •Customerdevelopmentandvalidation •Businessmodelalternatives •IntellectualProperty •StrategyandFinancialplanning •Go-to-market,launch,andgrowth Thisisahands-onclasswherestudentsstarttheclasswiththeirowntechnologyventureconcept(e.g.theworkdoneas partoftheirPhD,orsomewell-formedidea,maybewithaprototype). Duringtheclass,theyconverttheirconceptintoa integratedbusinessplan. Keywords Entrepreneurship,startups, technologytransfer,intellectualproperty LearningPrerequisites Requiredcourses •None–butavailabletoMSandPh.D.studentsonly LearningOutcomes Bytheendofthecourse,thestudentmustbeableto: TechnologyventuresinIC Page1/2"}
{"pack_id": "french_pack", "section_title": "Technology ventures in IC", "page": 313, "chunk_id": "french_pack_313_0", "content": "313 2020-2021COURSEBOOKLET •Analyzeabusinessplan •Createabusinessplan Teachingmethods •Shortex-cathedrapresentationsofeachtopic •Hands-onseminarwithmanyshortstudentpresentations •Presentationsfrominvitedguests,inparticluarindustryexecutivesandentrepeneurs •Discussionandcasestudies Assessmentmethods •In-classparticipation(30%) •In-classpresentations(30%) •Finalpitch(40%) TechnologyventuresinIC Page2/2"}
{"pack_id": "french_pack", "section_title": "Topics in theoretical computer science", "page": 314, "chunk_id": "french_pack_314_0", "content": "314 2020-2021COURSEBOOKLET CS-455 Topics in theoretical computer science KapralovMikhail Cursus Sem. Type Language English Computerscienceminor H Opt. Credits 4 Computerscience MA1,MA3 Opt. Session Winter Semester Fall Cybersecurity MA1,MA3 Opt. Exam Duringthe DataScience MA1,MA3 Opt. semester Workload 120h SCmasterEPFL MA1,MA3 Opt. Weeks 14 Hours 4weekly Lecture 3weekly Exercises 1weekly Numberof positions Remark Coursbiennal Summary Thestudentsgainanin-depthknowledgeofseveralcurrentandemergingareasoftheoreticalcomputerscience.The coursefamiliarizesthemwithadvancedtechniques,anddevelopsanunderstandingoffundamentalquestionsthat underliesomeofthekeyproblemsofmoderncomputerscience. Content Examplesoftopicsthatwillbecoveredinclude: •Laplacians,randomwalks,graphsparsification:Itispossibletocompressgraphswhileapproximatelypreservingtheir spectralproperties(inparticular,propertiesofrandomwalks)?Wewillcoverthemainresultsfromtherecentinfluential lineofworkonspectralsparsificationthatprovidessuchcompressionschemes. •Laplaciansystemsolvers:givenalinearsystemAx=b,howquicklycanwefindx?Wewillcovernearlylineartime algorithmsforsolvingAx=bwhenAisasymmetricdiagonallydominantmatrix(acommonscenarioinpractice)that cruciallyrelyonspectralgraphsparsification. •Spectralclustering:givenagraph,canwefindapartitionofthegraphintokvertexdisjointpartssuchthatfewedges crossfromoneparttoanother?Thisisthefundamentalgraphclusteringproblemthatarisesinmanyapplications.We willcoverseveralresultsonspectralgraphpartitioning,whereonefirstembedsverticesofthegraphintoEuclidean spaceusingthebottomfeweigenvectorsofthegraphLaplacian,andthenemploysEuclideanclusteringprimitivesto findthepartition. •Localclusteringwithrandomwalks:Givenaverylargegraphandaseednodeinit,canwefindasmallcutthat separatestheseednodefromtherestofthegraph,withoutreadingtheentiregraph?Wewillcoverlocalclustering algorithms,whichidentifysuchcutsintimeroughlyproportionaltothenumberofverticesonthesmallsideofthecut, bycarefullyanalyzingdistributionsofrandomwalksinthegraph. Keywords spectralgraphtheory,sparsification,clustering,randomwalks LearningPrerequisites Requiredcourses Topicsintheoreticalcomputerscience Page1/2"}
{"pack_id": "french_pack", "section_title": "Topics in theoretical computer science", "page": 315, "chunk_id": "french_pack_315_0", "content": "315 2020-2021COURSEBOOKLET Bachelorcoursesonalgorithmsanddiscretemathematics,mathematicalmaturity. LearningOutcomes Bytheendofthecourse,thestudentmustbeableto: •Designefficientalgorithmsforvariationsofproblemsdiscussedinclass; •Analyzeapproximationqualityofspectralgraphalgorithms; Teachingmethods Excathedra,homeworks,reading Expectedstudentactivities Attendanceatlectures,completingexercises,readingwrittenmaterial Assessmentmethods •Continuouscontrol Supervision Others Electroniqueforum:Yes Resources Bibliography Thereisnotextbookforthecourse.Noteswillbepostedonthecoursewebsite. Ressourcesenbibliothèque •RandomizedAlgorithms/Motwani Topicsintheoreticalcomputerscience Page2/2"}
{"pack_id": "french_pack", "section_title": "Virtual Reality", "page": 316, "chunk_id": "french_pack_316_0", "content": "316 2020-2021COURSEBOOKLET CS-444 Virtual reality BoulicRonan Cursus Sem. Type Language English Computerscience MA2,MA4 Opt. Credits 4 Cybersecurity MA2,MA4 Opt. Session Summer Semester Spring DataScience MA2,MA4 Opt. Exam Duringthe DigitalHumanities MA2,MA4 Opt. semester Workload 120h Robotics,ControlandIntelligentSystems Opt. Weeks 14 SCmasterEPFL MA2,MA4 Opt. Hours 3weekly Lecture 2weekly Exercises 1weekly Numberof positions Summary ThegoalofVRistoembedtheusersinapotentiallycomplexvirtualenvironmentwhileensuringthattheyareableto reactasifthisenvironmentwerereal.Thecourseprovidesahumanperception-actionbackgroundanddescribesthe keytechniquesforachievingefficientVRapplications. Content Thefirstlecturesfocusmoreonthetechnicalmeans(hw&sw)foracheivingthehands-onsessions: -Visualdisplay -Interactiondevicesandsensors -Softwareenvironment(UNITY3D) TheproportionofmoretheoreticalVRandNeurosciencebackgroundincreasesoverthesemester: -KeyHumanperceptionabilities,Cybersickness,Immersion,presenceandflow -Basic3Dinteractiontechniques:MagicvsNaturalism -Theperceptionofaction -Hapticinteraction -Whatmakesavirtualhumanlookingalive? -Motioncaptureforfull-bodyinteraction -VR,cognitivescienceandtrueexperimentaldesign Keywords 3Dinteraction,display,sensors,immersion,presence LearningPrerequisites Requiredcourses (CS341)IntroductiontoComputerGraphics Recommendedcourses (CS211)IntroductiontoVisualComputing Importantconceptstostartthecourse fromComputerGraphics: -perspectivetransformations -representationoforientation Virtualreality Page1/3"}
{"pack_id": "french_pack", "section_title": "Virtual Reality", "page": 317, "chunk_id": "french_pack_317_0", "content": "317 2020-2021COURSEBOOKLET -3Dmodellinghierarchy -matrixalgebra:translation,orientation,composition LearningOutcomes Bytheendofthecourse,thestudentmustbeableto: •Describehowthehumanperception-actionsystemisexploitedinVR •Applytheconceptsofimmersions,presenceandflow •GiveanexampleofapplicationsofVRindifferentindustrialsectors •Chooseamethodofimmersionsuitedforagiven3Dinteractioncontext •ExplainthepossiblecausesofcybersicknessinagivenVRsystemconfiguration •DesignaVRsysteminvolving3Dinteractions Transversalskills •Setobjectivesanddesignanactionplantoreachthoseobjectives. •Assessone'sownlevelofskillacquisition,andplantheiron-goinglearninggoals. Teachingmethods Excathedra+Hands-onsessionsonVRdevicesinthefirsthalfofthesemester, Amini-projectingroupsof2-3personswillhavetointegratevariouscomponentsof3Dreal-timeinteraction.Thegroup willsubmittheirprojectproposaltothecourseresponsibleTAswhowillassesswhetheritmeetsthekeyspecifications andisoriginalenough. TheproposalwillincludetheuseofsomeVRdevicesthattheIIGresearchgroupwilllendduring themini-projectperiod. Expectedstudentactivities exploitcitationanalysistoolstoevaluateascientificpaper combine 3Dinteractioncomponentstoproduceanoriginal3Dexperience experimentthehands-onpracticalworkinthelab synthesizetheknowledgeacquiredincourseandhands-oninthequizzesandfinaloral Assessmentmethods Throughoutsemester:4-5Hand-onsessions(5%),2Quizzes(10%),1papercitationstudy(20%),1mini-project(40%), 1oral(25%) Supervision Officehours No Assistants Yes Forum Yes Resources Virtualdesktopinfrastructure(VDI) No Bibliography -Coursenoteswillbeupdatedandmadeavailableaftereachcourse,withlinkstokeysitesandon-line documents -J.Jerald,TheVRBook,ACMPress2015 -Parisi,LearningVirtualReality,O’Reilly2015 -LeTraitédeRéalitéVirtuelle(5vol.)PressesdesMines,ParisTech,2006-2009,availableon-line,freefor Virtualreality Page2/3"}
{"pack_id": "french_pack", "section_title": "Virtual Reality", "page": 318, "chunk_id": "french_pack_318_0", "content": "318 2020-2021COURSEBOOKLET studentuponregistration. -DougA.Bowman,ErnstKruijff,JosephJ.LaViola,andIvanPoupyrev.2004.3DUserInterfaces:Theory andPractice.AddisonWesleyLongmanPublishingCo.,Inc.,RedwoodCity,CA,USA. Ressourcesenbibliothèque •3DUserInterfaces:TheoryandPractice/Bowman •LearningVirtualReality/Parisi •TheVRBook/Jerald •LeTraitédeRéalitéVirtuelle/Fuchs Notes/Handbook pdfofslidesaremadevisibleaftertheex-cathedracourses Virtualreality Page3/3"}
{"pack_id": "french_pack", "section_title": "Index par cours", "page": 319, "chunk_id": "french_pack_319_0", "content": "319 INDEX PAR COURS Cours Enseignant Semestre Page A Advanced algorithms Kapralov M. MA2, MA4 163 Advanced compiler construction Schinz M. MA2, MA4 165 Advanced computer architecture Ienne P. MA2, MA4 167 Advanced computer graphics Jakob W. MA2, MA4 169 Advanced information, computation, communication I Aberer K. BA1 31 Advanced information, computation, communication II Rimoldi B. / Gastpar M. BA2 33 Advanced probability and applications Lévêque O. MA2, MA4 173 Advanced topics on privacy enhancing technologies Troncoso C. MA2, MA4 175 Algèbra Lachowska A. BA5 67 Algèbre linéaire Urech Ch. BA1 35 Algèbre linéaire (anglais) Maddocks J. BA1 37 Algorithms Svensson O. BA3 69 Analyse I Lachowska A. BA1 41 Analyse I (allemand) Kressner D. BA1 43 Analyse I (anglais) Svaldi R. BA1 45 Analyse II Lachowska A. BA2 47 Analyse II (anglais) Mountford Th. BA2 49 Analyse III Struett D. BA3 71 Analyse IV Struett D. BA4 73 Applied biostatistics Goldstein D. MA2, MA4 177 Applied data analysis West R. MA1, MA3 179 Artificial neural networks Gerstner W. MA2, MA4 182 Automatic speech processing Bourlard H. MA1, MA3 185 B Biological modeling of neural network Gerstner W. MA2, MA4 187 Biomedical signal processing Vesin J.-M. MA1, MA3 190 Business design for IT services Wegmann A. MA2, MA4 192 C Calcul quantique Macris N. BA6 75 Cellular biology and biochemistry for engineers Zufferey R. MA1, MA3 194 Chimie générale Terrettaz S. BA5 77 Computational photography Süsstrunk S. MA2, MA4 198 Computer architecture I Stojilovic M. BA3 79 Computer architecture II Ienne P. BA4 81 Computer language processing Kuncak V. BA5 83 Computer networks Argyraki A. BA3 86 Computer security Troncoso C. BA5 89 Computer vision Fua P. MA2, MA4 200 Concurrent algorithms Guerraoui R. MA1, MA3 202 Cryptography and security Vaudenay S. MA1, MA3 204 D Database systems Ailamaki A. MA2, MA4 207 Data visualization Vuillon L. MA2, MA4 209 Decentralized systems engineering Ford B. MA1, MA3 212 Deep Learning Fleuret F. MA2, MA4 215 Design technologies for integrated systems De Micheli G. MA1, MA3 217 Digital education & learning analytics Dillenbourg P. / Jermann P. MA1, MA3 221 Digital"}
{"pack_id": "french_pack", "section_title": "Index par cours", "page": 319, "chunk_id": "french_pack_319_1", "content": "Vaudenay S. MA1, MA3 204 D Database systems Ailamaki A. MA2, MA4 207 Data visualization Vuillon L. MA2, MA4 209 Decentralized systems engineering Ford B. MA1, MA3 212 Deep Learning Fleuret F. MA2, MA4 215 Design technologies for integrated systems De Micheli G. MA1, MA3 217 Digital education & learning analytics Dillenbourg P. / Jermann P. MA1, MA3 221 Digital system design Kluter T. BA2 51 Distributed algorithms Guerraoui R. MA1, MA3 223 Distributed information systems Aberer K. MA2, MA4 225 Distributed intelligent systems Martinoli A. MA1, MA3 227 Dynamical system theory for engineers Thiran P. MA1, MA3 230 E Électromagnétisme I : lignes et ondes Fleury R. BA5 91 Électromagnétisme II : calcul des champs Fleury R. BA6 93"}
{"pack_id": "french_pack", "section_title": "Index par cours", "page": 320, "chunk_id": "french_pack_320_0", "content": "320 INDEX PAR COURS Cours Enseignant Semestre Page Électronique I Zysman E. BA3 95 Électronique II Zysman E. BA5 97 Électronique III Zysman E. BA6 99 Embedded systems Beuchat R. MA1, MA3 232 Enterprise and service-oriented architecture Wegmann A. MA2, MA4 235 Experience design Huang J. MA1, MA3 237 F Formal verification Kuncak V. MA1, MA3 239 Foundations of software Odersky M. MA1, MA3 242 Functional programming Kuncak V. / Odersky M. BA3 102 G General physics: electromagnetism Dil J. H. BA3 104 Gödel and recursivity Duparc J. MA1, MA3 244 I Image processing I Unser M. / Van de Ville D. MA1, MA3 247 Image processing II Unser M. / Van de Ville D. MA2, MA4 249 Industrial automation Sommer Ph. / Tournier J.-Ch. MA2, MA4 251 Information security and privacy Hubaux J.-P/Oechslin Ph. MA1, MA3 253 Information theory and coding Telatar E. MA1, MA3 255 Intelligence artificielle Faltings B. BA6 106 Intelligent agents Faltings B. MA1, MA3 256 Interaction design Pu Faltings P. MA2, MA4 258 Internet analytics Grossglauser M. BA6 110 Introduction à la programmation Sam J. BA1 53 Introduction aux sciences du vivant (pour IC) Zufferey R. BA6 112 Introduction to computer graphics Pauly M. BA6 114 Introduction to database systems Ailamaki A. / Koch Ch. BA6 116 Introduction to machine learning (BA3) Salzmann M. BA3 119 Introduction to machine learning (BA4) Fua P. BA4 121 Introduction to multiprocessor architecture Falsafi B. BA5 123 Introduction to natural language processing Chappelier J.-C. / Rajman M. MA1, MA3 260 Introduction to operating systems Payer M. BA5 125 L Learning theory Macris N. /Urbanke R. MA2, MA4 262 M Machine learning Jaggi M. / Flammarion N. MA1, MA3 264 Machine learning for behavioral data Käser T. MA2, MA4 267 Markov chains and algorithmic applications Lévêque O. / Macris N. MA1, MA3 269 Mathematical foundations of signal processing Simeoni M. / Bejar Haro B. MA1, MA3 271 Mobile networks Hubaux J.-P. MA2, MA4 273 Modèles stochastiques pour les communications Thiran P. BA5 127 Modern digital communications: a hands-on approach Rimoldi B. MA1, MA3 275 N Number theory in cryptography Serban"}
{"pack_id": "french_pack", "section_title": "Index par cours", "page": 320, "chunk_id": "french_pack_320_1", "content": "Markov chains and algorithmic applications Lévêque O. / Macris N. MA1, MA3 269 Mathematical foundations of signal processing Simeoni M. / Bejar Haro B. MA1, MA3 271 Mobile networks Hubaux J.-P. MA2, MA4 273 Modèles stochastiques pour les communications Thiran P. BA5 127 Modern digital communications: a hands-on approach Rimoldi B. MA1, MA3 275 N Number theory in cryptography Serban V. MA2, MA4 279 Numerical methods for visual computing and ML Jakob W. BA3 130 O Optimization for machine learning Jaggi M. / Flammarion N. MA2, MA4 280 Optional project in computer science Divers enseignants MA1, MA2, 282 MA3, MA4 P Parallelism and concurrency Kuncak V. / Odersky M. BA4 132 Performance evaluation Le Boudec J.-Y. MA2, MA4 283 Physique générale : mécanique Bréchet S. BA1 55 Physique générale : mécanique (allemand) Gruetter R. BA1 57 Physique générale : mécanique (anglais) Manley S. BA1 60 Pratique de la programmation orientée-objet Schinz M. BA2 62 Principles of computer systems Argyraki A. / Candea G. MA1, MA3 285 Principles of digital communications Telatar E. BA6 134 Probabilistic methods in combinatorics Marcus A. MA1, MA3 288 Probabilities and statistics Abbé E. BA4 136"}
{"pack_id": "french_pack", "section_title": "Index par cours", "page": 321, "chunk_id": "french_pack_321_0", "content": "321 INDEX PAR COURS Cours Enseignant Semestre Page Programmation orientée système Chappelier J.-C. BA4 137 Projet de systems-on-chip Beuchat R. BA6 139 Projet en Informatique I Divers enseignants BA5, BA6 142 Projet programmation système Chappelier J.-C. / Bugnion E. BA4 143 R Real-time embedded systems Beuchat R. MA2, MA4 290 S Semester project in Computer Science II Divers enseignants MA1, MA2, 292 MA3, MA4 Sensors in medical instrumentation Aminian K. MA2, MA4 293 Set theory Duparc J. MA2, MA4 295 Signal processing for communications Prandoni P. BA6 145 Signals and systems (for EL&IC) Shkel Y. BA4 148 Smart grid technologies Le Boudec J.-Y. / Paolone M. MA2, MA4 298 Social media Gillet D. MA2, MA4 300 Software development project Candea G. BA6 150 Software engineering Candea G. BA5 152 Software security Payer M. MA2, MA4 302 Statist. signal and data processing through applications Ridolfi A. MA2, MA4 305 T TCP/IP Networking Le Boudec J.-Y. MA1, MA3 310 Technologies of societal self-organization Ford B. BA3 155 Theory of computation Göös M. BA4 157 Topics in theoretical computer science Kapralov M. MA1, MA3 314 Traitement quantique de l’information Macris N. BA5 159 V Virtual reality Boulic R. MA2, MA4 316 Cours pas donnés en 2020-2021 Advanced multiprocessor architecture Falsafi B. MA1, MA3 171 Algèbre linéaire (classe inversée) Testerman D. BA1 39 Computational complexity Svensson O. MA1, MA3 196 Digital 3D geometry processing Pauly M. MA1, MA3 219 Interaction personne-système Dillenbourg P. BA4 108 Networks out of control Thiran P. / Grossglauser M. MA2, MA4 277 Sublinear algorithms for big data analysis Kapralov M. MA2, MA4 308 Technology ventures in IC Bugnion E. MA2, MA4 312"}
{"pack_id": "french_pack", "section_title": "Index par enseignants", "page": 322, "chunk_id": "french_pack_322_0", "content": "322 INDEX PAR ENSEIGNANTS Enseignant Cours Semestre Page A Abbé E. Probabilities and statistics BA4 136 Advanced information, computation, communication I BA1 31 Aberer K. Distributed information systems MA2, MA4 225 Database systems MA2, MA4 207 Ailamaki A. Introduction to database systems BA6 116 Aminian K. Sensors in medical instrumentation MA2, MA4 293 Computer networks BA3 86 Argyraki A. Principles of computer systems MA1, MA3 285 B Bejar Haro B. Mathematical foundations of signal processing MA1, MA3 271 Embedded systems MA1, MA3 232 Beuchat R. Projet de systems-on-chip BA6 139 Real-time embedded systems MA2, MA4 290 Boulic R. Virtual reality MA2, MA4 316 Bourlard H. Automatic speech processing MA1, MA3 185 Bréchet S. Physique générale : mécanique BA1 55 Bugnion E. Projet programmation système BA4 143 C Principles of computer systems MA1, MA3 285 Candea G. Software development project BA6 150 Software engineering BA5 152 Introduction to natural language processing MA1, MA3 260 Chappelier J.-C. Programmation orientée système BA4 137 Projet programmation système BA4 143 D De Micheli G. Design technologies for integrated systems MA1, MA3 217 Dil J. H. General physics: electromagnetism BA3 104 Dillenbourg P. Digital education & learning analytics MA1, MA3 221 Optional project in computer science MA1, MA2, 282 MA3, MA4 Divers enseignants Projet en Informatique I BA5, BA6 142 Semester project in Computer Science II MA1, MA2, 292 MA3, MA4 Gödel and recursivity MA1, MA3 244 Duparc J. Set theory MA2, MA4 295 F Falsafi B. Introduction to multiprocessor architecture BA5 123 Intelligence artificielle BA6 106 Faltings B. Intelligent agents MA1, MA3 256 Machine learning MA1, MA3 264 Flammarion N. Optimization for machine learning MA2, MA4 280 Fleuret F. Deep Learning MA2, MA4 215 Électromagnétisme I : lignes et ondes BA5 91 Fleury R. Électromagnétisme II : calcul des champs BA6 93 Decentralized systems engineering MA1, MA3 212 Ford B. Technologies of societal self-organization BA3 155 Computer vision MA2, MA4 200 Fua P. Introduction to machine learning (BA4) BA4 121 G Gastpar M. Advanced information, computation, communication II BA2 33 Artificial neural networks MA2, MA4 182 Gerstner W. Biological modeling of neural network MA2, MA4"}
{"pack_id": "french_pack", "section_title": "Index par enseignants", "page": 322, "chunk_id": "french_pack_322_1", "content": "II : calcul des champs BA6 93 Decentralized systems engineering MA1, MA3 212 Ford B. Technologies of societal self-organization BA3 155 Computer vision MA2, MA4 200 Fua P. Introduction to machine learning (BA4) BA4 121 G Gastpar M. Advanced information, computation, communication II BA2 33 Artificial neural networks MA2, MA4 182 Gerstner W. Biological modeling of neural network MA2, MA4 187 Gillet D. Social media MA2, MA4 300 Goldstein D. Applied biostatistics MA2, MA4 177 Göös M. Theory of computation BA4 157 Grossglauser M. Internet analytics BA6 110 Gruetter R. Physique générale : mécanique (allemand) BA1 57 Concurrent algorithms MA1, MA3 202 Guerraoui R. Distributed algorithms MA1, MA3 223"}
{"pack_id": "french_pack", "section_title": "Index par enseignants", "page": 323, "chunk_id": "french_pack_323_0", "content": "323 INDEX PAR COURS Enseignant Cours Semestre Page H Huang J. Experience design MA1, MA3 237 Information security and privacy MA1, MA3 253 Hubaux J.-P Mobile networks MA2, MA4 273 I Advanced computer architecture MA2, MA4 167 Ienne P. Computer architecture II BA4 81 J Machine learning MA1, MA3 264 Jaggi M. Optimization for machine learning MA2, MA4 280 Advanced computer graphics MA2, MA4 169 Jakob W. Numerical methods for visual computing and ML BA3 130 Jermann P. Digital education & learning analytics MA1, MA3 221 K Advanced algorithms MA2, MA4 163 Kapralov M. Topics in theoretical computer science MA1, MA3 314 Käser T. Machine learning for behavioral data MA2, MA4 267 Kluter T. Digital system design BA2 51 Koch Ch. Introduction to database systems BA6 116 Kressner D. Analyse I (allemand) BA1 43 Computer language processing BA5 83 Formal verification MA1, MA3 239 Kuncak V. Functional programming BA3 102 Parallelism and concurrency BA4 132 L Algèbra BA5 67 Lachowska A. Analyse I BA1 41 Analyse II BA2 47 Performance evaluation MA2, MA4 283 Le Boudec J.-Y. Smart grid technologies MA2, MA4 298 TCP/IP Networking MA1, MA3 310 Advanced probability and applications MA2, MA4 173 Lévêque O. Markov chains and algorithmic applications MA1, MA3 269 M Calcul quantique BA6 75 Learning theory MA2, MA4 262 Macris N. Markov chains and algorithmic applications MA1, MA3 269 Traitement quantique de l’information BA5 159 Maddocks J. Algèbre linéaire (anglais) BA1 37 Manley S. Physique générale : mécanique (anglais) BA1 60 Marcus A. Probabilistic methods in combinatorics MA1, MA3 288 Martinoli A. Distributed intelligent systems MA1, MA3 227 Mountford Th. Analyse II (anglais) BA2 49 O Foundations of software MA1, MA3 242 Odersky M. Functional programming BA3 102 Parallelism and concurrency BA4 132 Oechslin Ph. Information security and privacy MA1, MA3 253 P Paolone M. Smart grid technologies MA2, MA4 298 Pauly M. Introduction to computer graphics BA6 114 Introduction to operating systems BA5 125 Payer M. Software security MA2, MA4 302 Prandoni P. Signal processing for communications BA6 145 Pu Faltings P. Interaction design MA2, MA4 258 R Rajman M. Introduction to natural"}
{"pack_id": "french_pack", "section_title": "Index par enseignants", "page": 323, "chunk_id": "french_pack_323_1", "content": "Ph. Information security and privacy MA1, MA3 253 P Paolone M. Smart grid technologies MA2, MA4 298 Pauly M. Introduction to computer graphics BA6 114 Introduction to operating systems BA5 125 Payer M. Software security MA2, MA4 302 Prandoni P. Signal processing for communications BA6 145 Pu Faltings P. Interaction design MA2, MA4 258 R Rajman M. Introduction to natural language processing MA1, MA3 260 Ridolfi A. Statist. signal and data processing through applications MA2, MA4 305 Advanced information, computation, communication II BA2 33 Rimoldi B. Modern digital communications: a hands-on approach MA1, MA3 275"}
{"pack_id": "french_pack", "section_title": "Index par enseignants", "page": 324, "chunk_id": "french_pack_324_0", "content": "324 INDEX PAR COURS Enseignant Cours Semestre Page S Salzmann M. Introduction to machine learning (BA3) BA3 119 Sam J. Introduction à la programmation BA1 53 Advanced compiler construction MA2, MA4 165 Schinz M. Pratique de la programmation orientée-objet BA2 62 Serban V. Number theory in cryptography MA2, MA4 279 Shkel Y. Signals and systems (for EL&IC) BA4 148 Simeoni M. Mathematical foundations of signal processing MA1, MA3 271 Sommer Ph. Industrial automation MA2, MA4 251 Stojilovic M. Computer architecture I BA3 79 Analyse III BA3 71 Struett D. Analyse IV BA4 73 Süsstrunk S. Computational photography MA2, MA4 198 Svaldi R. Analyse I (anglais) BA1 45 Svensson O. Algorithms BA3 69 T Information theory and coding MA1, MA3 255 Telatar E. Principles of digital communications BA6 134 Terrettaz S. Chimie générale BA5 77 Dynamical system theory for engineers MA1, MA3 230 Thiran P. Modèles stochastiques pour les communications BA5 127 Tournier J.-Ch. Industrial automation MA2, MA4 251 Advanced topics on privacy enhancing technologies MA2, MA4 175 Troncoso C. Computer security BA5 89 U Image processing I MA1, MA3 247 Unser M. Image processing II MA2, MA4 249 Urbanke R. Learning theory MA2, MA4 262 Urech Ch. Algèbre linéaire BA1 35 V Image processing I MA1, MA3 247 Van de Ville D. Image processing II MA2, MA4 249 Vaudenay S. Cryptography and security MA1, MA3 204 Vesin J.-M. Biomedical signal processing MA1, MA3 190 Vuillon L. Data visualization MA2, MA4 209 W Business design for IT services MA2, MA4 192 Wegmann A. Enterprise and service-oriented architecture MA2, MA4 235 West R. Applied data analysis MA1, MA3 179 Z Cellular biology and biochemistry for engineers MA1, MA3 194 Zufferey R. Introduction aux sciences du vivant (pour IC) BA6 112 Électronique I BA3 95 Zysman E. Électronique II BA5 97 Électronique III BA6 99"}
{"pack_id": "french_pack", "section_title": "Un des premiers ordinateurs, \"Colossus\", a été construit en 1944 par l'équipe de", "page": 1, "chunk_id": "french_pack_1_0", "content": "Introduction à la Cyber Sécurité - 2021 Machine Enigma, Imperial War Museum, Londres Pascal Urien - Télécom Paris"}
{"pack_id": "french_pack", "section_title": "Vinton G. Cerf and Roberty E. Kahn \"A Protocol for Packet Network", "page": 2, "chunk_id": "french_pack_2_0", "content": "2 Une tentative de définition de la Cybersécurité. ................................................... 6 Introduction ........................................................................................................... 7 Ordinateurs et sécurité des applications ............................................................ 7 Le Réseau Téléphonique Commuté (RTC) ....................................................... 9 L'internet ......................................................................................................... 10 L'internet sans fil, les réseaux radio ................................................................ 11 Transfert de fichiers et streaming .................................................................... 11 Roaming, VPN ................................................................................................ 11 Du Data Center au Cloud ................................................................................ 12 L’Architecture Logicielle Réseau selon REST ................................................... 12 Sécurité du Cloud ................................................................................................ 13 Modèle du Cloud - NIST Special Publication 800-145 .................................. 13 Surface d'attaque du Cloud ............................................................................. 15 Eléments de sécurité du Cloud ........................................................................ 15 Network Isolation and Segmentation .......................................................... 15 Application Isolation ................................................................................... 15 Data Security ............................................................................................... 16 Identity and Access Management (IAM). ................................................... 16 L'émergence du monde connecté et l'internet des objets (IoT) ........................... 17 TOP 10 des attaques IoT, OWASP 2018 ........................................................ 18 Protocoles de l'Internet of Things (IoT) .......................................................... 19 CoAP (Constrained Application Protocol) .................................................. 19 LWM2M (Lightweight Machine to Machine Technical Specification) ..... 20 MQTT (MQ Telemetry Transport) ............................................................ 20 Quelques plateformes logicielles pour l'IoT .................................................. 20 Thread ......................................................................................................... 22 Open Connectivity Foundation OCF .......................................................... 23 HAP ............................................................................................................ 24 Hue Smart Lighting ..................................................................................... 25 Brillo et Weave ........................................................................................... 25 Intégrité des systèmes embarqués ....................................................................... 26 FLASH Disk ................................................................................................... 27 Dongle Bluetooth ............................................................................................ 28 Dongle Wi-Fi .................................................................................................. 28 AVR ................................................................................................................ 29 Sécurité des Systèmes Industriels ....................................................................... 30 SCADA ........................................................................................................... 30 STUXNET, une arme logicielle .................................................................. 31 Car Hacking. ................................................................................................... 32 Attaques récentes sur les voitures connectées ............................................. 34 Surface d’attaque du véhicule connecté autonome ............................................. 36 Exemple d’architecture de communication d’une TESLA ............................. 37 Types d’attaques ............................................................................................. 38 Pascal Urien – Télécom Paris– Introduction à la Cyber Sécurité"}
{"pack_id": "french_pack", "section_title": "Vinton G. Cerf and Roberty E. Kahn \"A Protocol for Packet Network", "page": 3, "chunk_id": "french_pack_3_0", "content": "3 Méthodes de défense ....................................................................................... 38 Deep Learning & Attaques ................................................................................. 39 Introduction aux techniques Deep Learning (DL) .......................................... 39 Attaques des systèmes Deep Learning ............................................................ 41 L’émergence des Crypto-Monnaies, Blockchain, Smart Contracts .................... 43 Bitcoin ............................................................................................................. 43 Ethereum et smart contract ............................................................................. 45 Exemple de contrats: les jetons ERC20 ...................................................... 47 Sécurité des Applications Distribuées, Emergence de la Cyber Sécurité ............ 48 Sécurité des applications ............................................................................. 48 Sécurité des protocoles de communication et des réseaux .......................... 48 Sécurité du système d'exploitation .............................................................. 49 Sécurité Hardware ....................................................................................... 49 Quelques paradigmes de sécurité ........................................................................ 50 Classification des types d’attaques ................................................................. 50 Heuristiques de défense: placebo, vaccin, défense immunitaire ..................... 50 Facteurs de Vulnérabilité: Complexité, Extensibilité, Connectivité ............... 51 Une Méthodologie de Cyber Attaque: Empreinte, Collecte, Inventaire.......... 51 Systèmes Embarqués ...................................................................................... 52 Principes de sécurité. .......................................................................................... 52 Identification ................................................................................................... 52 Authentification .............................................................................................. 52 Confidentialité ................................................................................................ 53 Intégrité ........................................................................................................... 53 Non-répudiation .............................................................................................. 53 Disponibilité .................................................................................................... 53 Au sujet de la confiance .................................................................................. 53 Sécurité des Réseaux ........................................................................................... 54 Sécurité au niveau physique ............................................................................ 55 Sécurité au niveau MAC ................................................................................. 55 Sécurité au niveau réseau/transport ................................................................. 55 Couche de Sécurité entre transport et application ........................................... 56 Sécurité au niveau application ........................................................................ 56 Eléments de Sécurité ........................................................................................... 57 Authentification - Autorisation ....................................................................... 57 Sécurité du canal ............................................................................................. 58 Sécurité des échanges de Diffie Hellman ........................................................ 59 Comment trouver des générateurs dans Z/pZ* ........................................... 60 Safe Prime ................................................................................................... 60 Attaque DH et contre mesure ...................................................................... 60 Mise à jour des clés cryptographiques ........................................................ 61 Identité et Organisations ................................................................................. 62 Taxonomie des méthodes d’authentification................................................... 63 Mécanismes symétriques: mot de passe, pre-shared key, provisionning .... 63 Mécanismes Asymétriques ......................................................................... 65 Pascal Urien – Télécom Paris – Introduction à la Cyber Sécurité"}
{"pack_id": "french_pack", "section_title": "Vinton G. Cerf and Roberty E. Kahn \"A Protocol for Packet Network", "page": 4, "chunk_id": "french_pack_4_0", "content": "4 Les tunnels .................................................................................................. 65 Les faiblesses du protocole IP ............................................................................. 66 Les solutions sécurisées IP classiques: VPN, TLS, Kerberos, SSH .................... 67 IPSEC ............................................................................................................. 67 TLS/SSL ......................................................................................................... 69 TLS1.3 ............................................................................................................ 71 Au sujet du Phishing ....................................................................................... 73 Kerberos .......................................................................................................... 73 PPTP-EAP ...................................................................................................... 74 SSH ................................................................................................................. 75 Limitation des protections offertes par les pare-feu. ........................................... 76 Au sujet des normes Critères Communs (CC) .................................................... 77 Heuristiques d'Attaque ........................................................................................ 79 L’intrusion. ..................................................................................................... 79 Programmes Malveillants, Virus, Vers ........................................................... 79 Exemple le ver Blaster (2003)..................................................................... 81 Au sujet des botnets ........................................................................................ 81 Au sujet des rootkits........................................................................................ 82 Le buffer overflow .......................................................................................... 82 Le Fuzzing ...................................................................................................... 84 L'injection SQL ............................................................................................... 84 Le Cross Site Scripting CSS ........................................................................... 84 Cross Site Request Forgery CSRF .................................................................. 84 Autour de la Sécurité des Systèmes d'Exploitation ............................................. 84 Stratégie de défense du système Windows (2005) .......................................... 84 Principes de sécurité du système Android....................................................... 85 Intégrité du code, obfuscation, TPM ............................................................... 86 Cas d'usage: la sécurité des consoles de jeu XBOX (2002) ............................ 87 Exemple de classification des attaques pour les systèmes embarqués. ........... 88 Secure Elements .............................................................................................. 89 Trusted Execution Environment ..................................................................... 91 Hardware Secure Module (HSM) ................................................................... 92 Intel SGX ........................................................................................................ 93 Obfuscation ..................................................................................................... 95 Indistinguishability Obfuscation ..................................................................... 97 White-Box Cryptography (WBC) ................................................................... 97 Intégrité physique et logicielle ............................................................................ 99 Intégrité physique............................................................................................ 99 Les implants matériels ................................................................................ 99 Les relais ................................................................................................... 100 Anti clonage de processeur : techniques SRAM PUF ............................... 102 Attestation distante (remote attestation) ........................................................ 104 Intégrité logicielle pour un système embarqué ............................................. 105 Remote Attestation .................................................................................... 106 Bijective MAC, BMAC ............................................................................ 106 Pascal Urien – Télécom Paris– Introduction à la Cyber Sécurité"}
{"pack_id": "french_pack", "section_title": "Vinton G. Cerf and Roberty E. Kahn \"A Protocol for Packet Network", "page": 5, "chunk_id": "french_pack_5_0", "content": "5 Les Canaux Cachés. .......................................................................................... 108 Single Power Analysis .................................................................................. 108 Differential Power Analysis .......................................................................... 108 Faites moi confiance ? 20 ans de bugs et heuristiques ...................................... 110 Spectre et Meltdown: insécurité des processeurs .............................................. 121 Attaques récentes sur le Wi-Fi .......................................................................... 123 Attaques sur les fonctions de hash MD5 et SHA-1 ........................................... 126 Quelques TOP10 d'attaques .............................................................................. 127 Le TOP9 des menaces visant le cloud computing en 2013 ........................... 127 OWASP TOP10 2013 ................................................................................... 129 Attaques TLS diverses ...................................................................................... 131 L’attaque par renégociation (2009) ............................................................... 131 L’attaque BEAST (2011) .............................................................................. 131 L’attaque Lucky Thirteen (2013) .................................................................. 132 Attaque TLS Triple Handshake (2014) ......................................................... 134 HeartBleed (2014) ......................................................................................... 135 L’attaque RC4 du L’attaque Royal Holloway (2013) ................................... 135 Pascal Urien – Télécom Paris – Introduction à la Cyber Sécurité"}
{"pack_id": "french_pack", "section_title": "Une tentative de définition de la Cybersécurité.", "page": 6, "chunk_id": "french_pack_6_0", "content": "6 Introduction à la Cyber Sécurité Une tentative de définition de la Cybersécurité. La cybersécurité vise à garantir le fonctionnement \"normal\" (nonimal) d’un système numérique. Bien que ce fonctionnement normal (\"goodware\") soit difficile à définir formellement, l’idée est que le système reste conforme à un cahier des charges. Le but d’un attaquant est de modifier le comportement (\"behavior\") du système numérique et/ou d’accéder à des informations confidentielles. Un système numérique est composé de processeurs, associés à des mémoires hébergeant des programmes et des données. Des canaux d’entrées sorties (I/O) permettent des interactions locales (clavier, écran…) ou distantes (réseaux…) avec des humains ou des machines. Les applications numériques sont multiples, véhicules autonomes, supervision de processus industriels, commerce électronique, échange d’information multimédia, réseau domotique… La surface d’attaque, et donc le périmètre de défense de la cybersécurité, est complexe à appréhender, les technologies (microélectronique, algorithmes, protocoles…) ayant évoluées sous la pression du marché, en l’absence de pré-requis de sécurité. Pascal Urien – Télécom Paris– Introduction à la Cyber Sécurité"}
{"pack_id": "french_pack", "section_title": "L'hyperviseur Xen a été créé à la fin des années 90, par Keir Fraser et Ian Pratt,", "page": 7, "chunk_id": "french_pack_7_0", "content": "7 Introduction Une application distribuée est réalisée par un ensemble d’entités logicielles logiquement autonomes, qui produisent, consomment et échangent des informations ( OUTi = PROG(INi) ). IN2 IN1 PROG1 PROG2 GLUEWARE OUT1 OUT2 Ordinateurs et sécurité des applications Dans un premier temps1 les composants logiciels des applications étaient logés dans un même système informatique, constituant de fait leur média de communication (parfois dénommé gluware). Le bus système permet le transfert des informations stockées en mémoire, les modules logiciels sont réalisés par des processus gérés par le système d’exploitation. La sécurité est uniquement dépendante des caractéristiques du système d’exploitation, par exemple en termes de gestion des droits utilisateurs, ou d’isolement des processus. Le transistor a été inventé fin 1947 par John Bardeen, William Shockley et Walter Brattain (prix Nobel de physique en 1956). L'entreprise INTEL fondée en 1968 par les docteurs Gordon Moore, Robert Noyce et Andrew Grove, créa en 1971 le premier microprocesseur 4 bits (le 4004, comportant 2300 transistors). Un microprocesseur CISC (complex instruction set computer) est organisé autour d’une unité arithmétique et logique (ALU) qui exécute des micro-instructions (µI) stockées dans la mémoire du microprogramme (µP). Dans ce cas l’intégrité du µP est le point zéro de la confiance. Dans le modèle RISC (reduced instruction set computing) il n’y a pas de µP, les instructions sont exécutées par un décodeur d’instruction. Le PDP-11 (Programmable Data Processor) commercialisé par Digital Equipment Corporation (DEC) dans la période 1970 et 1993 a popularisé l'architecture classique des ordinateurs comprenant, un CPU, un bus système, des mémoires, et des dispositifs d'entrée/sortie (I/O). 1 Un des premiers ordinateurs, \"Colossus\", a été construit en 1944 par l'équipe de Tommy Flowers selon les spécifications de Max Newman. Il comportait dans sa dernière version, 2400 tubes à vide. Pascal Urien – Télécom Paris – Introduction à la Cyber Sécurité"}
{"pack_id": "french_pack", "section_title": "\"The Internet of Things. How the Next Evolution of the Internet Is Changing", "page": 8, "chunk_id": "french_pack_8_0", "content": "8 Le système PDP 11, 1970 Illustration des attaques et défenses dans un système informatique classique. Le système d’exploitation réalise l’isolation logique des programmes. Le contenu des mémoires non chiffré, transite en clair sur le bus système. Le système d'exploitation CP/M (ancêtre du DOS), créé en 1974 par Gary Kildall, fondateur de Digital Research utilisait des lignes de commande selon la syntaxe ProgramName FileIn FileOut. Architecture de Harward (à gauche) et Von Newmann (à droite) Remarquons qu'il existe deux classes majeures d'architecture d'ordinateur: l'architecture de Harvard (systèmes embarqués…) pour laquelle les mémoires de données (RAM) et de code (FLASH) sont disjointes, et l'architecture de Von Neumann (Unix, Windows…) où le code et les données sont stockées une mémoire (RAM) commune. L’injection de code Pascal Urien – Télécom Paris– Introduction à la Cyber Sécurité"}
{"pack_id": "french_pack", "section_title": "Le Réseau Téléphonique Commuté (RTC)", "page": 9, "chunk_id": "french_pack_9_0", "content": "9 est plus difficile dans le cas d’une architecture de Harvard, puisqu’il est nécessaire de stocker le code malveillant dans la mémoire (FLASH) des instructions. Par exemple une attaque \"buffer overflow\" injecte des instructions dans la mémoire RAM, l’exécution de code en RAM est impossible dans le modèle de Harvard. Le Réseau Téléphonique Commuté (RTC) Dans une deuxième période l’application distribuée est répartie entre plusieurs systèmes informatiques reliés entre eux par des liens de communications supposés surs (c’est à dire qu’il est difficile d’enregistrer ou de modifier l’information transmise), tels que modems ou liaisons spécialisées (X25, RNIS …). Remarquons à ce propos qu’il est possible de sécuriser une liaison de type point à point par un dispositif matériel de chiffrement. Sous UNIX des applications telles que RLOGIN permettent de se connecter à une machine distante à l'aide d'un identifiant et d'un mot de passe, qui sont échangés sans protection particulère. IN2 IN1 PROG1 PROG2 Réseau Téléphonique OUT1 Commuté OUT2 3274:Unité de contrôle FEP: Front End Processor Mainframe & Front End Processor (FEP): 1960-1980 Pascal Urien – Télécom Paris – Introduction à la Cyber Sécurité"}
{"pack_id": "french_pack", "section_title": "IBM, Building Smarter Planet Solutions with MQTT and IBM WebSphere", "page": 10, "chunk_id": "french_pack_10_0", "content": "10 L'internet Enfin l’émergence de l'internet2, puis de la toile d’araignée mondiale (WEB3) a permis de concevoir des systèmes distribués à l’échelle planétaire. Les composants logiciels sont répartis sur des systèmes informatiques hétérogènes, le réseau n’est pas sûr, le nombre d’utilisateurs est important. D'abord absente des premiers standards, la sécurité de l'Internet (Security Architecture for the Internet Protocol, RFC 825, 1995), puis du WEB (Secure Socket Layer, SSL 3.0, 1996) devient un paramètre critique et tente de concilier des contraintes à priori antinomiques telles que, nécessité économique d’utiliser Internet, et impérative résistance au piratage informatique ou à l’espionnage. Poster de Tim Berners-Lee à la conférence ACM Hypertext 91. IN2 IN1 PROG1 PROG2 Internet OUT1 OUT2 2 Vinton G. Cerf and Roberty E. Kahn \"A Protocol for Packet Network Intercommunication\", IEEE Trans on Comms, Vol Com-22, No 5 May 1974. 3 Tim Berners-Lee. \"The World Wide Web\", Poster, ACM Hypertext 91 Conference. Pascal Urien – Télécom Paris– Introduction à la Cyber Sécurité"}
{"pack_id": "french_pack", "section_title": "Roaming, VPN", "page": 11, "chunk_id": "french_pack_11_0", "content": "11 L'internet sans fil, les réseaux radio La dernière révolution des communications repose sur les technologies de réseaux IP sans fil, tels que Wi-Fi4, WiMAX5 ou réseaux cellulaires 3G/4G/5G. Les liens filaires symboles d’une connectivité volontaire et contrôlée s’estompent; l’infrastructure du réseau devient diffuse et invisible. Un nouveau besoin de sécurité6 s’affirme, le contrôle des accès réseaux et la confidentialité des données. IN2 IN1 PROG1 PROG2 Internet OUT1 OUT2 Transfert de fichiers et streaming Les réseaux de communication transportent les données produites et consommées par les systèmes distribués. Ils offrent deux types de services fondamentaux, le transfert de fichiers (un ensemble de données prédéfinies) et la diffusion d’informations, en temps réel, en mode flux (streaming). La première catégorie comporte des services tels que le courrier électronique (POP, SMTP…), le WEB (HTTP) et diverses méthodes d’échange d’information (FTP, NNTP, …). La deuxième catégorie regroupe les protocoles relatifs au multimédia ou à la téléphonie sur IP, par exemple RTP, H323, ou SIP. Roaming, VPN Les fournisseurs de services internet gèrent un ensemble de serveurs qui stockent les données et les applications de leurs clients (base de données, messageries, fichiers…). Le roaming consiste à autoriser l’accès à distance de ces ressources, ce qui implique également la gestion sécurisée de la mobilité des utilisateurs, typiquement à l’aide de protocoles VPN (Virtual Private Network). Chez les particuliers une box (modem ADSL) établit un lien point à point avec le réseau de l'Internet Service Provider (ISP). 4 IEEE 802.11b, Septembre 1999 5 IEEE 802.16e, Décembre 2005 6 IEEE 802.11i, 2004 Pascal Urien – Télécom Paris – Introduction à la Cyber Sécurité"}
{"pack_id": "french_pack", "section_title": "L’Architecture Logicielle Réseau selon REST", "page": 12, "chunk_id": "french_pack_12_0", "content": "12 Du Data Center au Cloud Durant la période 2000-2010 les grands fournisseurs de services de l’Internet (tels que Google, Facebook,…) ont développé une technologie s’appuyant sur des Data Centers, c'est-à-dire des sites informatiques regroupant jusqu’à un million d’ordinateurs (cartes mère), pour un coût de l’ordre de 600 M$, et consommant environ 100 MW (le dixième d’un réacteur nucléaire). Cette approche est à la base du concept du Cloud Computing, le client est équipé d’un terminal léger comportant un navigateur ou une machine virtuelle, la sécurité d’accès au service repose sur des technologies WEB. Annoncé en 2007, l’iPhone marque le début de l’internet mobile. De par sa nature, le stockage de données sensibles dans un objet portable implique la disponibilité de composants électroniques sécurisés adaptés (perte, vol, hacking…) tels que Secure Elements (contrôleur NFC, carte SIM/USIM) ou Trusted Execution Environment (TEE). L’Architecture Logicielle Réseau selon REST Dans sa thèse de doctorat, \"Architectural Styles and the Design of Network- based Software Architectures\", publiée en 2000, Thomas Fielding (Université d’Irvine, CA, USA) définit le concept d’architecture REST (Representational State Transfer). L’idée est d’extraire du protocole HTTP les principes de son efficacité. Il introduit la notion d’architecture logicielle (distribuée) sous forme d’un assemblage de trois types d’éléments, les composants, les connecteurs et les données: - Un composant (component) est un bloc abstrait d’instructions et d’états machine qui traite les données reçues via son interface. - Un connecteur (connector) est un mécanisme abstrait qui organise la communication, la coordination, et la coopération entre composants. - Un datum est un élément d’information reçu ou transmis par un composant via un connecteur. Une architecture REST est une généralisation du WEB; ses principales caractéristiques sont les suivantes : - Deux types d’entités les clients et les serveurs (Client-Server). Pascal Urien – Télécom Paris– Introduction à la Cyber Sécurité"}
{"pack_id": "french_pack", "section_title": "Modèle du Cloud - NIST Special Publication 800-145", "page": 13, "chunk_id": "french_pack_13_0", "content": "13 - Pas d’états machine (stateless). Les requêtes échangées sont indépendantes les unes des autres. - Usage de caches (cache) pour une meilleure efficacité du système. - Interface Uniforme (uniform interface) en particulier pour l’identification et l’usage des ressources. - Système structuré en couche (layered system), mais présentant des interfaces uniques. - Code à la demande (on demand code) exécuté par le client. Dans un contexte REST la sécurité du réseau consiste à garantir l’intégrité et la confidentialité des données échangées entre composants. Sécurité du Cloud Selon la définition du NIST (Special Publication 800-145, 2011), le cloud computing est un modèle qui permet un accès efficace, omniprésent, et à la demande, à un ensemble (pool) partagé de ressources informatiques configurables (telles que réseaux, serveurs, stockage, applications et services). Ces ressources peuvent être provisionnées rapidement et libérées avec un effort de gestion minimal (c’est la notion d’élasticité), et une interaction réduite avec le fournisseur de services. Il est important de remarquer que l'infrastructure est la propriété du fournisseur de service (service provider). Modèle du Cloud - NIST Special Publication 800-145 Ce modèle est composé de cinq caractéristiques essentielles, trois modèles de service, et quatre modèles de déploiement. Les cinq caractéristiques essentielles sont: 1) la provision de ressources à la demande et en self service, 2) l'accès aux ressources via le réseau, à partir de clients légers, 3) le partage de ressources multi utilisateurs et géographiquement distribuées, 4) l'élasticité des ressources disponibles, 5) la mesure de la consommation des ressources. Pascal Urien – Télécom Paris – Introduction à la Cyber Sécurité"}
{"pack_id": "french_pack", "section_title": "Modèle du Cloud - NIST Special Publication 800-145", "page": 14, "chunk_id": "french_pack_14_0", "content": "14 Une plateforme de Cloud Computing est divisée en trois modèles de services : - Le SaaS ou Software as a Service. Par exemple Salesforce.com met à la disposition de ses clients un ensemble de logiciels dédiés à la gestion des entreprises. Le client accède uniquement à la configuration des applications. - PaaS ou Plateform as a Service. C’est un environnement (APIs, Machine Virtuelles7) permettant de construire/déployer des applications par exemple Google App Engine ou Microsoft Azure. - IaaS, ou Infrastructure as a Service. C’est typiquement un service de location de ressources telles que serveurs ou stockage de données, par exemple Amazon EC2. La propriété essentielle est la notion d’élasticité, c’est-à-dire l’adaptation dynamique des ressources à la demande. 7 L'hyperviseur Xen a été créé à la fin des années 90, par Keir Fraser et Ian Pratt, dans le cadre du projet de recherche Xenoserver à l'université anglaise de Cambridge. Pascal Urien – Télécom Paris– Introduction à la Cyber Sécurité"}
{"pack_id": "french_pack", "section_title": "Application Isolation", "page": 15, "chunk_id": "french_pack_15_0", "content": "15 Les quatre modèles de déploiement du cloud comportent 1) le cloud privé, 2) le cloud communautaire, 3) le cloud public, 4) le cloud hybride. Surface d'attaque du Cloud La surface d'attaque augmente selon l'axe SaaS, PaaS, IaaS, puisque le nombre de ressources mises à disposition de l'utilisateur augmente. Eléments de sécurité du Cloud Outre les procédures et normes de qualité, d'audit, et de conformité liées aux locaux, aux contrôles d'accès physique, aux traitements d'incidents de sécurité, aux incendies et dégâts des eaux, les principaux domaines de sécurité de l'infrastructure du cloud sont les suivants. Network Isolation and Segmentation 1) Network Isolation and Segmentation. Ces mesures visent la protection de l’infrastructure par isolation/segmentation et analyse des flux. Elles s'appuient sur les éléments suivants: – Firewalls réseau, et firewalls au niveau VM utilisateur, – Dispositifs IDS (Intrusion Detection System), IPS (Intrusion Prevention System), DLP (Data Leak/Lost Prevention), – Logs du système, –Détection de clients malveillants, –Chiffrement des informations échangées entre data centers, mais respect de la législation dans le pays d’accueil (Patriot Act par exemple) Application Isolation 2) Application Isolation. Ces mesures adressent l'isolation logique des applications hébergées. Elles s'appuient sur les éléments suivants: Pascal Urien – Télécom Paris – Introduction à la Cyber Sécurité"}
{"pack_id": "french_pack", "section_title": "Identity and Access Management (IAM).", "page": 16, "chunk_id": "french_pack_16_0", "content": "16 – La Virtualisation – La prévention de bugs de sécurité des hyperviseurs, – La détection de canaux cachés (side channel) inter VM - Le matériel sécurisé, hyperviseur certifié (Critères Commun - CC), Unix durci (SE Linux…). Data Security 3) Data Security. Ces mesures adressent la confidentialité des données échangées et stockées. – Protocoles de sécurité réseau TLS, IPSEC, VPN, SSH – Chiffrement des fichiers - Protection, chiffrement des bases de données Multi Tenant. - Gestion des clés clients sécurisées par des HSM (Hardware Security Module) Identity and Access Management (IAM). 4) Identity and Access Management (IAM). Ces mesures adressent le contrôle d'accès à l'infrastructure du cloud. – Login/password, - One Time Password (OTP), – Certificats, – Stockage sécurisé de clés, –Dispositifs Hardware Secure Module (HSM). Pascal Urien – Télécom Paris– Introduction à la Cyber Sécurité"}
{"pack_id": "french_pack", "section_title": "L'émergence du monde connecté et l'internet des objets (IoT)", "page": 17, "chunk_id": "french_pack_17_0", "content": "17 L'émergence du monde connecté et l'internet des objets (IoT) Rebooting the IT Revolution: A Call to Action\" (SIA/SRC), 2015 En 2013 plus d'un milliard de smartphones ont été vendus; ce chiffre marque le basculement vers le paradigme du monde connecté. Par exemple la maison connectée (smart home), la voiture connectée (connected car, Intelligent Transport System -ITS- ), les objets connectés (lunettes, montres, vêtements...), les capteurs médicaux (body area network, BAN), les immeubles intelligents (smart building), la ville intelligente (smart city), et de manière générale l'internet des objets (Internet of Things IoT). Selon un white paper8 de CISCO le nombre d'objets connectés était de 10 milliards en 2010 et pourrait atteindre 50 milliards en 2020. L'article9 évoque un nombre de 100,000 milliards de capteurs à l'horizon 2035, et l'émergence des Cyber Physical System (CPS). Quelle est l’énergie nécessaire à la commutation d’un bit ? Soit N électrons (de charge q =1,6 10-19 Coulomb) l’énergie (en Joule) dissipée sous un volt est de ½ NqV. Pour 1 volt la valeur de 10-14 J/bit correspond à 1,25 million d’électrons stockés dans les capacités des transistors CMOS. Soit encore 100 Watts (1016 x 10-14) pour 1016 commutations par seconde de 10 millions de bits (107) à la fréquence 1 GHz (109). 8 \"The Internet of Things. How the Next Evolution of the Internet Is Changing Everything\" http://www.cisco.com/web/about/ac79/docs/innov/IoT_IBSG_0411FINAL.pdf 9 Rebooting the IT Revolution: A Call to Action\" (SIA/SRC), 2015 Pascal Urien – Télécom Paris – Introduction à la Cyber Sécurité"}
{"pack_id": "french_pack", "section_title": "TOP 10 des attaques IoT, OWASP 2018", "page": 18, "chunk_id": "french_pack_18_0", "content": "18 Le moteur de recherches SHODAN (https://www.shodan.io/) recense les dispositifs connectés. De nombreuses attaques/intrusions s'appuient sur l'usage de mots de passe par défaut. TOP 10 des attaques IoT, OWASP 2018 En 2018 la fondation OWASP a publié une liste des 10 vulnérabilités les plus courantes de l’internet des objets. 1) Mots de passe faibles ou non modifiables Utilisation de mots de passe (\"credential\") cassables par des attaques brute force, non modifiables ou publiés, associés à portes dérobées dans le micro logiciel embarqué ou le logiciel client, qui permettent un accès non autorisé aux systèmes déployés (voir par exemple https://www.shodan.io) 2) Services réseau non sécurisés Services réseau non utilisés ou non sécurisés s'exécutant sur un objet connecté, qui compromettent la confidentialité, l'intégrité, l'authenticité ou la disponibilité de ses données, ou qui permettent un contrôle à distance non autorisé. 3) Interfaces non sécurisées Interfaces WEB, backend API, cloud ou mobiles non sécurisées interagissant avec l’objet, et permettant sa compromission ou celle des composants associés. Les faiblesses observées sont un manque d'authentification/autorisation, un chiffrement absent ou faible, l’absence de filtrage des entrées/sorties. 4) Absence de mécanisme de mise à jour sécurisée Par exemple absence de validation du micrologiciel sur l'appareil, procédure de livraison non sécurisée (\"supply chain attack\"), possibilité de rejeu de versions antérieures (roolback), et manque de notifications des mises à jour. 5) Utilisation de composants non sécurisés ou obsolètes Utilisation de composants de logiciels obsolètes ou non sécurisés. Modification du système d'exploitation, utilisation de logiciels ou de composants matériels tiers provenant d'une chaîne de distribution compromise. 6) Protection insuffisante de la vie privée Pascal Urien – Télécom Paris– Introduction à la Cyber Sécurité"}
{"pack_id": "french_pack", "section_title": "CoAP (Constrained Application Protocol)", "page": 19, "chunk_id": "french_pack_19_0", "content": "19 Les informations personnelles de l'utilisateur stockées sur l'objet ou dans l'écosystème associé, sont utilisées de manière non sécurisée, abusive ou sans autorisation. 7) Transfert et stockage de données non sécurisés Absence de chiffrement ou de contrôle d'accès aux données sensibles stockées dans l'écosystème, durant le transport ou pendant le traitement. 8) Manque d’administration des objets. Absence d’administration de la sécurité sur les objets déployés, y compris la gestion du parc, la gestion des mises à jour, la désactivation, la surveillance des systèmes. 9) Paramètres par défaut non sécurisés Les objets ou les systèmes sont livrés avec des paramètres par défaut non sécurisés, ou n'ont pas la capacité d’améliorer la sécurité en interdisant aux opérateurs de modifier les configurations. 10) Manque de durcissement hardware Absence de mesures de durcissement hardware (tamper resistant), permettant aux attaquants d'obtenir des informations sensibles, ou de prendre le contrôle local de l’objet. Protocoles de l'Internet of Things (IoT) La RFC 7228 (\"Terminology for Constrained-Node Networks\", 2014) propose une classification en 3 classes des nœuds de l'IoT à ressources réduites - Classe C0, RAM << 10KB, code << 100KB, ces systèmes (capteurs) n'ont pas les ressources nécessaires pour gérer des connections sécurisées. - Classe C1, RAM #10KB, code #100KB, les ressources systèmes sont suffisantes pour assurer des connections (TCP-UDP/IP) sécurisées selon des protocoles peu complexes. - Classe C2, RAM #50KB, code #500KB, les ressources systèmes autorisent des connections à des dispositifs TCP/IP classiques (notebook, tablettes,…). CoAP (Constrained Application Protocol) Le protocole CoAP (Constrained Application Protocol, RFC 7252, 2014) sécurise (de manière optionnelle) les échanges d'information de capteurs en Pascal Urien – Télécom Paris – Introduction à la Cyber Sécurité"}
{"pack_id": "french_pack", "section_title": "Quelques plateformes logicielles pour l'IoT", "page": 20, "chunk_id": "french_pack_20_0", "content": "20 utilisant DTLS (TLS avec un transport UDP) ou TLS. CoAP peut être compris comme un proxy http, par exemple entre IPv4 et IPv6. LWM2M (Lightweight Machine to Machine Technical Specification) LWM2M (Lightweight Machine to Machine Technical Specification) est un environnement basé sur CoAP qui gère la communication entre des objets logés dans des clients LWM2M et des serveurs LWM2M. Il supporte deux modes de transport (UDP/IP et SMS) ainsi que quatre interfaces fonctionnelles, 1) le bootstrap, 2) l'enregistrement des clients avec les serveurs, 3) l'administration des objets, 4) les rapports d'information. MQTT (MQ Telemetry Transport) MQTT10 (MQ Telemetry Transport) d'origine IBM, est un protocole de type Publish-Subscribe (bus asynchrone) sécurisé par TLS. Les nœuds publisher délivrent de manière asynchrone de l'information aux serveurs broker de messages, les nœuds subscriber collectent ces informations. Quelques plateformes logicielles pour l'IoT L'internet des objets combine un système informatique de type embarqué et une interface de communication telle que Wi-Fi (IEEE 802.11) ou ZigBee (IEEE 802.15.4). Un objet se décompose généralement en quatre entités logiques et matérielles: 1) un circuit électronique (board) qui comporte typiquement un processeur, 2) un SOC (System On Chip) radio, 3) un système d'exploitation ou un bootloader, 4) une pile de communication et un environnement (framework) applicatif. La syntaxe des messages d’application s'appuie sur JSON (JavaScript Object Notation), un format d'échange de données (Data Interchange Format) en mode texte. La structure d'un arbre JSON est décrite par un schéma JSON. Un document JSON comprend deux types d'éléments structurels : des ensembles de paires clé (key), valeur (value), et des listes ordonnées de valeurs. Les messages applicatifs sont échangés selon le paradigme REST, à l'aide des protocoles HTTP ou CoAP. Il existe de nombreux systèmes d'exploitation, importés de l'informatique classique, ou adaptés pour des systèmes embarqués avec des ressources de traitement (processing) ou de mémoire modeste, par exemple Linux, Contiki, Riot, Iotivity, AllJoyn, Brillo, mbed OS... 10 IBM, Building Smarter Planet Solutions with MQTT and IBM WebSphere MQ Telemetry, 2012 Pascal Urien – Télécom Paris– Introduction à la Cyber Sécurité"}
{"pack_id": "french_pack", "section_title": "Quelques plateformes logicielles pour l'IoT", "page": 21, "chunk_id": "french_pack_21_0", "content": "21 Du point de vue sécurité, on constate trois grandes approches; 1) la sécurité au niveau MAC (Wi-Fi, ZigBee) par exemple pour les ampoules connectées Philips Hue Bulbs, 2) la sécurité à l'aide des classiques protocoles TLS/DTLS (piles logicielles Thread ou OCF), et enfin 3) la sécurité au niveau de l'application (par exemple l'architecture HomeKit Accessory Protocol - HAP- de la société Apple). De surcroit des mécanismes de contrôle d'accès utilisant des ACLs (Access Control List) ou des jetons (OAuth 2.0 Authentication), peuvent être implémentés dans la couche applicative. Le transport de paquets IPv6 natifs, dont le MTU (Maximum Transmission Unit, taille de paquet minimale transmise sans fragmentation) est de 1280 octets, n'est pas compatible avec la taille maximale de 127 octets des trames IEEE 802.15.4 (les entêtes IPv6 et TCP occupent au moins 40+20 octets). Le standard 6LoWPAN11 (IPv6 Low power Wireless Personal Area Networks) finalisé en 2007 (RFC 4919) définit une couche d'adaptation (adaptative layer) qui réalise des opérations de segmentation/assemblage et également des modes de routage, internes à la couche d'adaptation (mesh-under) ou implémentée dans la couche IPv6 (route-over). Un réseau 6LoWPAN comprend des nœuds ordinaires (Host), des routeurs (Routers) et un routeur de bord (Edge Router) connecté au réseau IPv6. L'adresse IPv6 (128 bits) d'un nœud comporte un suffixe de 64 bit basé sur l'adresse MAC et un préfixe alloué selon le protocole Neighbor Discovery Router Advertisement (RA). Le protocole IPSEC est bien sur compatible avec cet environnement. Cependant ZigBee conformément au standard IEEE 802.15.4 dispose d'algorithmes de chiffrement de trame, typiquement selon le mode AES- CCM 128 bits, et possède un jeu de trois clés. Un secret à long terme (Master Key) partagé par tous les membres du réseau, permet au terme du protocole SKKE (Symmetric-Key Key Establishment) d'établir une clé de ligne (Link Key) 11 6LoWPAN: The Wireless Embedded Internet, Zach Shelby, Carsten Bormann, Wiley, 2009 Pascal Urien – Télécom Paris – Introduction à la Cyber Sécurité"}
{"pack_id": "french_pack", "section_title": "Thread", "page": 22, "chunk_id": "french_pack_22_0", "content": "22 pour les communications unicast. Cependant les réseaux ZigBee usuels partagent une même clé de ligne, distribuée par un nœud particulier le Trust Center (TC), et chiffrée grâce au Trust Center Link Key. La clé réseau (Network Key) est commune à tous les participants et chiffre les trames émises en diffusion (broadcast). Thread Le consortium Thread définit une pile réseau s'appuyant sur 6LoWPAN et un routage de type route-over (Distance Vector Routing). La sécurité est délivrée par une couche DTLS munie du mécanisme d'authentification symétrique J-PAKE (Juggling Password-Authenticated Key Exchange), implémentant un mécanisme NIZK (Non-Interactive Zero-Knowledge), à l'aide d'échanges Diffie-Hellmann sur des courbes elliptiques, et de signature de Schnorr. Selon Thread un objet (joiner) s'identifie auprès d'un serveur d'authentification (Commissioner) localisé dans l'internet, selon un protocole nommé Petitioning. Cette opération est réalisée à l'aide d'une connexion point à point avec un commissioner, le routeur de bord (border router) ou un routeur. Le commissioner est un nœud IPv6 ou IPv4; dans ce dernier cas il est nécessaire de traiter les messages DTLS via un proxy. Au terme du processus de petitioning, le joiner récupère la clé de ligne ZigBee et d’autres informations protégées par un mécanisme KEK (Key Establishment Key). Pascal Urien – Télécom Paris– Introduction à la Cyber Sécurité"}
{"pack_id": "french_pack", "section_title": "Open Connectivity Foundation OCF", "page": 23, "chunk_id": "french_pack_23_0", "content": "23 Thread est basé sur le système d'exploitation LINUX. Des sociétés telles que Silicon Labs (www.silabs.com) proposent des cartes mères de développement. Le thermostat NEST implémente les concepts Thread. L'article12 met en évidence l'absence de Secure Boot et présente une attaque permettant de démarrer le système à partir d'une clé USB, puis de modifier ses fonctionnalités. Open Connectivity Foundation OCF L'architecture définie par le consortium Open Connectivity Foundation (OCF) est similaire à Thread relativement au réseau. Elle s'appuie sur une pile 6LoWPAN sécurisée par le protocole DTLS. OCF introduit une entité applicative divisée en deux sous ensembles une couche (framework) définissant des éléments protocolaires (messages, sécurité, opérations 12 \"Smart Nest Thermostat: A Smart Spy in Your Home\", Grant Hernandez, Orlando Arias, Daniel Buentello, and Yier Jin Pascal Urien – Télécom Paris – Introduction à la Cyber Sécurité"}
{"pack_id": "french_pack", "section_title": "HAP", "page": 24, "chunk_id": "french_pack_24_0", "content": "24 CRUDN:Create, Read, Update, Delete, Notify...) et des profils métier tels que domotique, santé, automobile, commerce. L'association IoTivity conçoit des logiciels ouverts implémentant OCF et disponibles pour les systèmes d'exploitation Android, Tizen, Ubuntu , Windows, et Arduino!. Dans OCF le protocole DTLS définit l'identité de l'objet à l'aide de mécanismes cryptographiques symétrique (pre-shared key) ou asymétriques (ECC, RSA, certificats...); de surcroit la couche applicative supporte un mécanisme de type Access Control List (ACL). Un objet oic (Open Interconnect Consortium) logé dans un serveur est identifié par un chemin (oic://server/path). Il est associé à une requête (?query) renseignant diverses propriétés (property, par exemple Type \"rt\", Interface \"if\", name \"n\", Identity \"id\") définies par des tuples key=value: oic://server/path?key1=value1;key2=value2. Ainsi la propriété interface (\"oic.if.a\") fixe les opérations CRUDN (CREATE, RETREIVE, UPDATE) disponibles pour les actuators (oic://server/path?if=\"oic.if.a\"). Les ressources d'un l'objet sont également associées à une liste de propriétés (tuples clé-valeur, par exemple {\"settemp\": 10} en notation JSON) sur lesquelles s'appliquent des procédures CRUDN. L'URI oic://server/path?key1=value1;key2=value2 est adapté à des protocoles de transport tels que HTTP ou CoAP. HAP Le modèle HAP (HomeKit Accessory Protocol) de la société APPLE s'appuie sur des WLAN Wi-Fi ou BLE (Bluetooth Low Energy), avec une couche applicative basée respectivement sur les protocoles HTTP ou GATT/ATT/L2CAP (pile BlueTooth). Le paradigme de sécurité est symétrique. Les objets sont associés à un code PIN de 8 digits, et authentifiés via le protocole Secure Remote Password procedure (SRP, RFC 5054). Par la suite un objet HAP génère une paire de clés asymétriques13 basée sur la courbe elliptique Ed25519, mises en œuvre pour l'authentification et la création des clés de session. Le chiffrement utilise l'algorithme ChaCha20- Poly1305. 13 iOS Security, iOS 9.0 or later, September 2015. http://images.apple.com/euro/privacy/d/generic/docs/iOS_Security_Guide.pdf Pascal Urien – Télécom Paris– Introduction à la Cyber Sécurité"}
{"pack_id": "french_pack", "section_title": "Brillo et Weave", "page": 25, "chunk_id": "french_pack_25_0", "content": "25 Hue Smart Lighting Les ampoules intelligentes Hue de Philips (Hue Smart Lighting) sont basées sur un réseau mesh zigBee, conforme aux spécifications ZLL (ZigBee Light Link). Toutes les ampoules partagent une clé maître. Un contrôleur délivre aux nœuds du réseau une clé de ligne (Link Key) chiffrée à l'aide du MasterSecret. Il intègre une interface radio et une interface ethernet munie d'une pile IPv4. Côté IP les commandes sont transportées en clair par des paquets UDP. L'article14 présente une attaque par canaux caché de ce système qui met à profit l'absence de sécurité du contrôleur. Il introduit également une classification en 4 niveaux des attaques sur les objets; 1) Ignorer la fonction de l'objet et introduire un code malicieux, par exemple un botnet; 2) Réduire la fonction de l'objet, afin de créer un comportement défectueux; 3) Utiliser la fonction de l'objet de manière non pertinente; 4) Etendre la fonction de l'objet, par exemple en introduisant des canaux cachés. On trouve dans l'article15 de Colin O’Flynn un reverse engineering du contrôleur et des ampoules. Le contrôleur exécute un système d'exploitation linux, son processeur intègre des accélérateurs cryptographiques AES, 3xDES, MD5, SHA1. Les fichiers de mise à jour du système sont chiffrés par l'algorithme AES dont la clé est stockée dans le processeur. De même les SOC zigbee du contrôleur et des ampoules intègrent un accélérateur cryptographique AES, utilisé pour le déchiffrement des fichiers de mise à jour. Cette analyse illustre la présence de mécanismes de sécurité matériels destinés à la protection des opérations de mise à jour des objets. Les clés cryptographiques et algorithmes associés sont protégés par des éléments hardware. L'article16 analyse la sécurité du système Hue dont la principale faiblesse est l'usage de jetons d'autorisation intégrés aux requêtes HTTP (en clair), susceptibles d'être interceptés par des malware dédiés. Brillo et Weave La plateforme IoT Weave s'appuie sur le système d'exploitation Brillo de Google, une version allégée d'Android qui comporte un noyau LINUX de 35Mo. La pile réseau supporte les WLANs IEEE 802.15.4, Wi-Fi, BLE. Elle 14 Extended Functionality Attacks on IoT Devices: The Case of Smart Lights (Invited"}
{"pack_id": "french_pack", "section_title": "Brillo et Weave", "page": 25, "chunk_id": "french_pack_25_1", "content": "HTTP (en clair), susceptibles d'être interceptés par des malware dédiés. Brillo et Weave La plateforme IoT Weave s'appuie sur le système d'exploitation Brillo de Google, une version allégée d'Android qui comporte un noyau LINUX de 35Mo. La pile réseau supporte les WLANs IEEE 802.15.4, Wi-Fi, BLE. Elle 14 Extended Functionality Attacks on IoT Devices: The Case of Smart Lights (Invited Paper), Eyal Ronen, Adi Shamir 15 A Light Bulb Worm, Details of the Philips Hue Smart Lighting Design, Colin O’Flynn - August 1, 2016. 16 Hacking Light bulbs: Security Evaluation of The Philips Hue Personal Wireless Lighting System, Nitesh Dhanjani, 2013 Pascal Urien – Télécom Paris – Introduction à la Cyber Sécurité"}
{"pack_id": "french_pack", "section_title": "Intégrité des systèmes embarqués", "page": 26, "chunk_id": "french_pack_26_0", "content": "26 utilise un paradigme REST transporté par les protocoles HTTPS ou XMPP, avec des jetons d'autorisation OAuth 2.0 (RFC 6749) délivrés par des serveurs d'authentification (AS) Google. Intégrité des systèmes embarqués Un dispositif (\"device\" IoT) est typiquement construit à partir d’un processeur principal auquel sont reliés des capteurs et des actuateurs. Ce dernier peut réaliser également des fonctions de communication (Bluetooth, Wi-Fi); dans le cas contraire un processeur de communication SoC (\"System on Chip\") est nécessaire. Les objets connectés sont distribués par des canaux grand public ce qui rend possible la modification des logiciels embarqués (\"firmware\") par des attaques qualifiées de \"supply chain attacks17\". L’intégrité des micro-logiciels et leur mise à jour (\"update\") est un pré-requis critique pour le déploiement de l’internet des choses. A l’IETF le groupe de travail SUIT (Software Updates for Internet of Things) définit des protocoles dédiés à cet usage. Un processeur d’objet est équipé de mémoires non volatiles de type ROM (non effaçable) ou FLASH (effaçable). Plus précisément pour les mémoires ROM on utilise des technologies de type OTP (One Time Programmable) basées sur des fusibles à usage unique. La programmation de mémoire FLASH implique la mise en d’œuvre d’un programmeur et d’un protocole particulier, tel que JTAG (Joint Test Action Group), protocole parallèle (utilisant un ensemble de signaux dédiés), ou SPI (Serial Peripheral Interface). SPI est un protocole très répandu basé sur deux canaux séries et quatre signaux: SCLK (serial clock), MOSI (master out slave in), MISO (master in slave out), et SS (slave select). Lors de la production les logiciels sont chargés dans les mémoires non volatiles. Afin de permettre des mises à jour logicielles un composant particulier le bootloader constitue le premier élément d’une chaîne de chargement. Par exemple le bootloader comporte 17 Voir par exemple https://docs.microsoft.com/en-us/windows/security/threat- protection/intelligence/supply-chain-malware Pascal Urien – Télécom Paris– Introduction à la Cyber Sécurité"}
{"pack_id": "french_pack", "section_title": "FLASH Disk", "page": 27, "chunk_id": "french_pack_27_0", "content": "27 un pilote USB et un interpréteur de commande; il peut également intégrer des procédures de sécurité permettant la vérification de signature avec une clé publique ou le déchiffrement de données avec une clé symétrique (par exemple selon l’algorithme AES-CCM). Selon les capacités du processeur le bootloader est logé en ROM ou en FLASH. Voici quelques cas pratiques qui illustrent les attaques par défaut d’intégrité. FLASH Disk Les disques FLASH (\"clés USB\") sont basés sur des contrôleurs dédiés (FLASH Controller) dont les spécifications ne sont généralement pas publiques. Par exemple le contrôleur PS2251-33 de Phison Electronics Corporation, illustré par la figure ci-dessous comporte une ROM interne et ROM externe qui stockent un bootloader. Des sites dédiés (flashboot.ru, www.usbdev.ru...) gèrent des bases de données relatives aux micrologiciels des clés USB et fournissent les outils nécessaires à leur chargement. Le contenu des mémoires peut être protégé par un mot de passe utilisateur18 selon une procédure gérée par le micrologiciel. En 2014 une équipe de chercheurs19 à démontré à la conférence Black Hat des modifications de micrologiciel réalisant l’émulation de clavier (attaque Key Loger) ou de cartes réseau (attaque Proxy). Les sites20 21 détaillent des mises en œuvre telles attaques. 18 Jago, D., 2018, Security analysis of USB drive, Master’s thesis report, 19 Nohl, K., KriBler, S., Lell, J. 2014. \"BadUSB - On Accessories that Turn Evil\", Blackhat 2014 USA 20 https://github.com/brandonlw/Psychson 21 https://www.pentestingshop.com/recover-a-usb-stick Pascal Urien – Télécom Paris – Introduction à la Cyber Sécurité"}
{"pack_id": "french_pack", "section_title": "Dongle Wi-Fi", "page": 28, "chunk_id": "french_pack_28_0", "content": "28 Dongle Bluetooth La famille de jetons bluetooth HC05/HC06 est basée sur le SoC BlueCoreTM-External (CSR BC417143), produit par la société Cambridge Silicon Radio rachetée en 2015 par Qualcomm. Le SoC est associé à une mémoire FLASH externe, dont le contenu peut lu ou chargé avec le logiciel Blue Flash Software version 2.62, qui nécessite un adaptateur USB dédié. La documentation du SoC indique qu’une interface SPI permet de programmer le premier Mbit de mémoire FLASH, et suggère de mettre en œuvre un bootloader. Ce dernier assure par la suite le chargement de l’espace mémoire. La référence22 commente un reverse engineering du logiciel Blue Flash, et propose une bibliothèque permettant le chargement et la lecture du micro-logiciel. SoC CSR BC417143 (à gauche) et dispositif de chargement du firmware (à droite) Dongle Wi-Fi La puce ESP8266 est un SoC Wi-Fi de faible coût, fabriqué par la société Espressif Systems. Il est basé sur un microprocesseur RISC 32 bits de la société Tensilica, fonctionnant à 80 MHz. 22 Willem, F., 2016, CSR BlueCore USB SPI programmer/debugger, https://github.com/lorf/csr-spi-ftdi Pascal Urien – Télécom Paris– Introduction à la Cyber Sécurité"}
{"pack_id": "french_pack", "section_title": "AVR", "page": 29, "chunk_id": "french_pack_29_0", "content": "29 Aucune spécification détaillée n'est disponible publiquement. Néanmoins, certains sites Web fournissent des informations sur les mémoires physiques. Le SoC intègre une ROM de 64 Ko, un ensemble de RAM (environ 80 Ko, y compris le cache des instructions), 80 Ko de mémoire DRAM pour les données utilisateur et une mémoire FLASH externe (jusqu'à 16 Mo). Certains ESP8266 supportent un boot sécurisé, c’est-à-dire que le micrologiciel stocké dans la FLASH est chiffré par une clé AES, gravée dans une mémoire OTP. La ROM contient un bootloader qui réalise à l’aide d’une fonction UART et d’un logiciel dédié (ESP FLASH Download Tool) le chargement du micrologiciel. Espressif Systems fournit un kit de développement logiciel sans OS (SDK NONOS) comportant des bibliothèques compilées (notamment une pile TCP/IP) et des codes sources ouverts. La plupart des modules ESP8266 sont fabriqués par la société Ai-Thinker sous la marque \"ESP-xx\". AVR AVR est une famille de microcontrôleurs 8 bits RISC commercialisés par la société ATMEL rachetée en 2016 par Microchip Technology. L’architecture AVR a été conçue en 1992 par deux étudiants du Norwegian Institute of Technology (NTH), Alf-Egil Bogen et Vegard Wollan. Ces processeurs, en particulier utilisés par l’environnement Arduino, sont équipés de mémoires FLASH, RAM, et EEPROM. ATMEL a développé un bootloader associé au protocole DFU (Device Firmware Upgrade) et mis en œuvre par le logiciel ATMEL FLIP. Pascal Urien – Télécom Paris – Introduction à la Cyber Sécurité"}
{"pack_id": "french_pack", "section_title": "SCADA", "page": 30, "chunk_id": "french_pack_30_0", "content": "30 La sécurité des puces AVR est assurée par deux types de registres: les verrous (locks) et les fusibles (fuses). Les verrous sont réinitialisés grâce aux commandes envoyées via des interfaces de programmation telles que SPI. Ils gèrent la politique d'accès à la mémoire FLASH (opérations de lecture et d'écriture), la politique de sécurité des fusibles (lecture et écriture), et l'utilisation optionnelle d’un bootloader. Les fusibles ne sont pas effacés par la commande de réinitialisation (reset) SPI; ils sont modifiés par des commandes dédiées. Ils contrôlent certaines fonctionnalités de programmation telles que l'utilisation de la broche RESET ou du protocole SPI, ainsi que d'autres paramètres physiques relatifs aux horloges et tensions logiques. En l’absence de ROM, il n’est pas possible de désactiver définitivement les opérations d’écriture FLASH. En d'autres termes, il est toujours possible d'effacer et de télécharger du code dans la mémoire FLASH. Des outils ouverts telles que AvrDude (AVR Downloader/UploaDEr) ou gratuits (Atmel Studio) sont dédiés à la programmation des processeurs AVR. Sécurité des Systèmes Industriels SCADA L'industrie, en particulier le contrôle des processus industriels (usines...) utilise également des technologies connectées. Par exemple le système de contrôle et d'acquisition de données SCADA23 24(Supervisory Control And Data Acquisition), comporte des dispositifs de contrôle tels que PLC (programmable logic controller) ou RTU (remote telemetry unit) communiquant via les protocoles MODBUS ou DNP3, fonctionnant en mode Master/Slave (sur des liaisons séries RS-232, RS-485) ou Client/Server (TCP/IP). 23 http://www.schneider- electric.com/solutions/ww/fr/med/20340568/application/pdf/1485_se-whitepaper- letter-scadaoverview-v005.pdf 24 Practical Modern SCADA Protocols: DNP3, 60870.5 and Related Systems, ISBN 07506 7995 Pascal Urien – Télécom Paris– Introduction à la Cyber Sécurité"}
{"pack_id": "french_pack", "section_title": "STUXNET, une arme logicielle", "page": 31, "chunk_id": "french_pack_31_0", "content": "31 START ADDRESS FUNCTION DATA LRC END CHECK 1 octet 2 octets 2 octets N octets 2 octets CR LF Structure d'un message MODBUS (pas d'éléments de sécurité) Exemple de système SCADA. STUXNET, une arme logicielle Le vers informatique Stuxnet découvert en 2010 a permis25 la destruction de machines industrielles (un millier de centrifugeuses...) en attaquant la 25 Dissecting Stuxnet, Stanford University, https://www.youtube.com/watch?v=DDH4m6M-ZIU Pascal Urien – Télécom Paris – Introduction à la Cyber Sécurité"}
{"pack_id": "french_pack", "section_title": "Car Hacking.", "page": 32, "chunk_id": "french_pack_32_0", "content": "32 plateforme SCADA WinCC/PCS7 de Siemens et en reprogrammant des PLCs (automates S7), depuis des machines Windows préalablement corrompues (des serveurs winCC). Le cœur de l'attaque s'appuie sur des défauts Zero-Days Windows et sur la mise à jour logicielle non sécurisée du PLC S7-300. Car Hacking. Une automobile moderne comporte un ensemble de modules électroniques (une cinquantaine) dénommés Electronic Control Units (ECUs) connectés en réseau et destinés au contrôle et à la gestion du véhicule (freins, direction, pneus, ...). Exemple de CAN-bus reliant trois ECUs Les ECU sont reliés à un ou plusieurs bus conformes au standard Controller Area Network (CAN), ISO 11898. Un paquet CAN Data (1 octet de donnée) Un paquet CAN comporte un identifiant (11 ou 29 bits, mais généralement 11bits), un champ longueur de données, des données (de 0 à 8 octets) et un CRC de 15 bits. Les paquets sont émis en diffusion sur les bus CAN, ils sont traités ou ignorés par les ECUs en fonction de la valeur de leur identifiant. Le débit usuel du CAN bus est de 500 Kbit/s (soit 2µs par bit). Pascal Urien – Télécom Paris– Introduction à la Cyber Sécurité"}
{"pack_id": "french_pack", "section_title": "Car Hacking.", "page": 33, "chunk_id": "french_pack_33_0", "content": "33 Les deux types principaux de paquets CAN sont les trames DATA, et les trames REQUEST. Ces dernières sont une requête d'émission pour un ID particulier, le champ longueur indique dans ce cas la taille des données attendues, et le bit RTR (Remote Transmission Request) est positionné. Les données sont codées selon un format propriétaire ou en conformité avec des standards tels que ISO-TP ou OBD-II (On Board Diagnostics). Des paquets de diagnostic sont utilisés uniquement à des fins de maintenance. Conformément aux normes ISO-TP (ISO 15765-2) l'entête des données (un ou deux octets) indique le type de trame (trame unique, première trame d'un bloc, trame d'un bloc, gestion de flux) et la longueur des informations. Le premier octet d'information est l'identifiant de service (Service ID) défini par le standard for ISO 14229. Par exemple Security Access (0x27) est une procédure de contrôle d'accès basée sur un mécanisme de défi/réponse utilisant un secret partagé (mot de passe...) utilisée pour les opérations de maintenance. Cependant il est important de remarquer que les échanges fonctionnels ne sont pas sécurisés (pas de chiffrement ni contrôle d’intégrité). Mécanisme de segmentation selon le standard ISO_TP La norme OBD-II (standard SAE J/1979) date des années 1990; elle est obligatoire en Californie depuis 1996. Elle permet la lecture des Diagnostic Trouble Codes (DTC) standardisés ou propriétaires, ainsi que les informations temps réel en provenance de capteurs connectés aux calculateurs de bord. Elle s'appuie sur des trames CAN et le standard ISO-TP. Le protocole comporte des messages de requête et de réponse. Le premier octet d'une requête indique par le mode (01 par exemple) et le deuxième l'identifiant de protocole (PID). En cas de succès la réponse débute par l'octet mode+0x40, Pascal Urien – Télécom Paris – Introduction à la Cyber Sécurité"}
{"pack_id": "french_pack", "section_title": "Attaques récentes sur les voitures connectées", "page": 34, "chunk_id": "french_pack_34_0", "content": "34 suivi de l'octet PID, et de données. La collecte du régime moteur (tr/mn) est illustrée ci dessus: Requête: 7DF 08 02 01 0C [6 padding bytes] Réponse: 7E8 08 04 41 0C 11 42 [3 padding bytes] Le CAN-ID 7DF est une adresse de diffusion, le mode 01 signifie \"Show current data\" , le PID 0C désigne le régime moteur. L'ECU qui possède l'information (CAN-ID = 7E8) délivre une réponse avec le mode 41 (0x40 + 1) et le PID de la requête, les deux derniers représentent l'information demandée. Attaques récentes sur les voitures connectées L'article26 décrit des attaques par injection de paquets en mode maintenance ou fonctionnel; ces dernières permettent de contrôler entre autres, les freins, la direction, ou le régime moteur. Exemple d'injection de paquet CAN depuis une prise OBD-II. En 2015 l'article27 décrit une attaque via le réseau cellulaire SPRINT visant une Jeep Cherokee. Le véhicule comporte un dispositif multimédia 26 Chris Valasek, Charlie Miller \"Adventures in Automotive Networks and Control Units\", 2014 27 Charlie Miller, Chris Valasek \"Remote Exploitation of an Unaltered Passenger Vehicle\", 2015 Pascal Urien – Télécom Paris– Introduction à la Cyber Sécurité"}
{"pack_id": "french_pack", "section_title": "Attaques récentes sur les voitures connectées", "page": 35, "chunk_id": "french_pack_35_0", "content": "35 (auto radio, bluetooth, ...) nommé UCONNECT équipé d'un processeur Texas Instruments OMAP-DM3730, intégrant un système d'exploitation QNX. Cet équipement est connecté au bus CAN à l'aide d'un processeur Renesas V850; il possède également un port TCP 6667 ouvert sur le réseau cellulaire réalisant un service D-Bus destiné aux communications inter processus (IPC) et à l'appel de procédures distantes (RPC). L'exploit consiste à injecter un firmware modifié pour le coprocesseur V850 en exploitant une faille de type \"buffer overflow\". Par la suite il devient possible d'injecter à distance des paquets CAN à partir du port TCP 6667. Les deux causes de cette attaque sont d'une part l'existence d'un Buffer Overflow et d'autre part un mécanisme de mise à jour logicielle non sécurisé. L’article28 détaille des attaques réalisées à l’aide d’une sonde CAN réalisée à partir d’un Arduino et d’un contrôleur CAN bus MCP2515. Illustration d’une sonde CAN Cette sonde permet d’afficher des informations erronées sur le tableau de bord (vitesse,…), de modifier le compteur kilométrique, de couper l’injection de carburant dans le moteur (vitesse < 20Km/h), de différer le freinage de 1,5s pour de faible vitesse (< 2Km/h), et d’initialiser la programmation de l’ECU (moteur à l’arrêt) ce qui empêche le véhicule de démarrer. 28 Pascal Urien, \"Designing Attacks Against Automotive Control Area Network Bus and Electronic Control Units\", 2019 16th IEEE Annual Consumer Communications & Networking Conference (CCNC) Pascal Urien – Télécom Paris – Introduction à la Cyber Sécurité"}
{"pack_id": "french_pack", "section_title": "Surface d’attaque du véhicule connecté autonome", "page": 36, "chunk_id": "french_pack_36_0", "content": "36 De manière plus générale le rapport29 du sénateur Américain Edward J. Markey met en évidence les failles de sécurité des points d'entrée des communications sans fil (Wireless Entry Points) dans les véhicules du marché, et les risques d'intrusion associés. \"In a 2013 study that was funded by the Defense Advanced Research Projects Agency (DARPA), two researchers demonstrated their ability to connect a laptop to two different vehicles’ computer systems using a cable, send commands to different ECUs through the CAN, and thereby control the engine, brakes, steering and other critical vehicle components.\" Surface d’attaque du véhicule connecté autonome Un véhicule de nouvelle génération propose un ensemble de fonctionnalités, telles que: - Contrôle du véhicule via les messages CAN - Contrôle d’accès physique (clés) - Diagnostiques OBDII - Recharge des batteries - Mises à jour logicielles - Advanced Driver Assistance System – ADAS - Conduite autonome (SAE J3016) : 6 niveaux de 0 à 5 - V2X services (V2C Vehicule to Vehicule, V2I Vehicule to Infrastructure) Un véhicule de nouvelle génération possède de multiples interfaces réseaux: - CAN Bus & ECU (Electronic Control Units) - LAN (Local Area Network): Ethernet - WLAN (Wireless Area Network): Wi-Fi - Dedicated Short-Range Communications (DSRC) pour les services V2X - LPAN (Local Area Network): Bluetooth 29 Senator Edward J. Markey, \"Tracking & Hacking:Security & Privacy Gaps Put American Drivers at Risk\", 2015 Pascal Urien – Télécom Paris– Introduction à la Cyber Sécurité"}
{"pack_id": "french_pack", "section_title": "Exemple d’architecture de communication d’une TESLA", "page": 37, "chunk_id": "french_pack_37_0", "content": "37 - Radio Low Frequency (~150KHz) et Ultra High Frequency (~400MHz) - LTE (Long Term Evolution) 4G, 5G - Internet - GPS (Global Positioning System) Exemple d’architecture de communication d’une TESLA L’infrastructure de communication d’une TELSA se décompose schématiquement en trois niveaux: - Le réseau internet et le data center du constructeur (Mothership) qui gère la flotte de véhicule. Chaque véhicule, identifié par un VIN (Vehicule Identification Number), possède un certificat, qui permet d’établir au terme d’une procédure de mutuelle authentification un VPN avec les serveurs distants) - Un réseau local Ethernet Infotainment (Information +Entertainment). Ce dernier gère des interfaces pour Internet (Wi-Fi, réseau cellulaire), Bluetooth et CAN-Bus. Il comporte trois nœuds, CID (Center Information Display, Unix) , IC (Instrument Coaster, Unix), et passerelle CAN-BUS (RTOS). - Un réseau CAN-BUS. Un système Autopilot réalise les services Full Self Driving (FSD); ce dernier directement connecté aux radars et cameras; il gère également un lien Ethernet Gigabit avec la passerelle. Pascal Urien – Télécom Paris – Introduction à la Cyber Sécurité"}
{"pack_id": "french_pack", "section_title": "Méthodes de défense", "page": 38, "chunk_id": "french_pack_38_0", "content": "38 Types d’attaques30 Méthodes de défense31 30 Adi Karahasanovic & All, \"Adapting Threat Modeling Methods for the Automotive Industry\" - 15th ESCAR Conference, Berlin 2017 31 Mahdi Dibaei & All, \"Attacks and defences on intelligent connected vehicles: A survey\", 2020 Pascal Urien – Télécom Paris– Introduction à la Cyber Sécurité"}
{"pack_id": "french_pack", "section_title": "Introduction aux techniques Deep Learning (DL)", "page": 39, "chunk_id": "french_pack_39_0", "content": "39 Deep Learning & Attaques Introduction aux techniques Deep Learning (DL) In 1943, Warren McCulloch and Walter Pitts ont conçu32 le premier réseau de neurones, par analogie avec le cerveau humain. L’approximation d’un neurone (j) s’écrit Yj = f(∑ Wij Xi – θj), Xi étant les entrées (n entrées), θj le seuil, et f la fonction de d’activation. La sortie de f varie entre -1/0 et 1, par exemple c’est la fonction de Heaviside H(x), ReLU(x), ou la fonction sigmoïde. 32 Warren S. McCulloch and Walter Pitts, Walter \"A logical calculus of the ideas immanent in nervous activity\" The bulletin of mathematical biophysics, 5(4), 115- 133, (1943) Pascal Urien – Télécom Paris – Introduction à la Cyber Sécurité"}
{"pack_id": "french_pack", "section_title": "Introduction aux techniques Deep Learning (DL)", "page": 40, "chunk_id": "french_pack_40_0", "content": "40 Dans un espace affine euclidien à N dimensions, le neurone définit deux zones séparées par un hyperplan (P), P:{M, OM n= θ }, n=(W ,…,W ) 1 n-1 Le neurone de McCulloch & Pitts peut réaliser les fonctions AND ou OR, mais pas le ou exclusif (XOR). Frank Rosenblatt a proposé33 en 1958 un algorithme d’apprentissage supervisé (le Perceptron), implémenté pour la reconnaissance d’image. En 1986, l’article34 décrit le premier algorithme concept d’apprentissage par un algorithme de rétro propagation d’erreur (qui deviendra par la suite la méthode ‘apprentissage par descente de gradient). L’article35 a démontré en 1989, qu’un réseau de neurones à trois couches (input layer, hidden layer, output layer) peut approximer toute fonction Y=F(X,W). 33 Frank Rosenblatt \"The Perceptron: A Probabilistic Model for Information Storage and Organization in the Brain,\" Psychological Review, 65(6), 386-408. 1958 34 Rumelhart, D.E., Hinton, G.E. and Williams, R.J. \"Learning representations by back-propagating errors,\" Nature, 323, 533-536., 1986 35 Kurt Hornik, Maxwell Stinchcombe, Halbert White, \"Multilayer feedforward networks are universal approximators” Neural Networks, 2(5), 359-366, 1989 Pascal Urien – Télécom Paris– Introduction à la Cyber Sécurité"}
{"pack_id": "french_pack", "section_title": "Attaques des systèmes Deep Learning", "page": 41, "chunk_id": "french_pack_41_0", "content": "41 Un réseau à N couches Y=F(X,W) possède E entrées (X) et S sorties (Y) Yj= Fj(X,W) et W poids (Wk). Les données d’’apprentissage (training data) sont un ensemble de m vecteurs (X,Y). Un algorithme (la descente de gradient) produit les poids W du modèle, en minimisant les erreurs selon une fonction de coût, par exemple ∑ ∑ (Yj,i - Fj(Xi,W))2 Les réseaux CNN (Convolutional Neural Network) sont inspirés des travaux David H. Hubel and Torsten N. Wiesel (prix Nobel en Physiologie ou Médecine en 1981), relatifs au traitement de l’image par le cerveau humain, selon un réseau de neurones organisé en trois couches, V1, V2, V4. Par exemple le réseau LeNet536, dédié à la reconnaissance de caractères, publié en 1998, comportait 60.850 paramètres d’apprentissage et 340.918 connections. Attaques des systèmes Deep Learning Le modèle Y=F(X,W) est réalisé par des processeurs GPU ou des circuits intégrés dédiés. 36 Lecun, Y.; Bottou, L.; Bengio, Y.; Haffner, P., \"Gradient-based learning applied to document recognition\", Proceedings of the IEEE. 86 (11): 2278–2324, 1998 Pascal Urien – Télécom Paris – Introduction à la Cyber Sécurité"}
{"pack_id": "french_pack", "section_title": "Attaques des systèmes Deep Learning", "page": 42, "chunk_id": "french_pack_42_0", "content": "42 L’article37 présente quelques attaques utilisant des techniques Deep Learning, en boîte blanche ou boîte noires. Il propose la classification suivante : - Les attaques par empoisonnement, (poisoning attack), des données malveillantes sont introduites dans les données d’apprentissage - Les attaques par évasion (evasion attack), des données malveillantes sont présentées aux entrées du réseau -Les attaques par inversion (inversion attack) visent à reconstruire les données d’apprentissage à partir du modèle -Le vol des données d’apprentissage (data set) ou du modèle 37 Ho Bae, Jaehee Jang, Dahuin Jung, Hyemi Jang, Heonseok Ha, Hyungyu Lee, and Sungroh Yoon, \"Security and Privacy Issues in Deep Learning\", 2020 Pascal Urien – Télécom Paris– Introduction à la Cyber Sécurité"}
{"pack_id": "french_pack", "section_title": "Bitcoin", "page": 43, "chunk_id": "french_pack_43_0", "content": "43 L’émergence des Crypto-Monnaies, Blockchain, Smart Contracts La blockchain est un concept très novateur qui permet de partager des informations sans tiers de confiance. Elle s’appuie sur un réseau P2P utilisant des protocoles dédiés. Des transactions signées sont collectées par les nœuds du réseau, qui vérifient leur authenticité et leur cohérence, et les rassemblent dans un bloc. Ce bloc est lié au précédent selon un mécanisme de consensus tel PoW (Proof of Work) ou PoS (Proof of Stake). Bitcoin Les principes de la crypto monnaie Bitcoin38 ont été définis en 2008 par l'article39 écrit sous le pseudonyme de Satoshi Nakamoto. Cette monnaie numérique repose sur trois piliers, 1) l'émission de valeur basée sur un investissement en matériel informatique et sur la consommation d'énergie, 2) la gestion de transactions (transfert de valeurs) authentifiées par des signatures cryptographiques , 3) la publication des transactions dans des listes de blocs chainés (la blockchain) certifiés par les mineurs grâce à un mécanisme de Proof of Work (PoW), impliquant une dépense de temps CPU et d'énergie électrique. Dans le monde bancaire classique Bob possède un compte. Lors d'une transaction par carte bancaire avec Alice, il est identifié/authentifié par sa carte, un cryptogramme est acheminé via le réseau des cartes bancaires vers sa banque (issuer) qui délivre une autorisation. Dans un contexte blockchain bitcoin Bob possède une clé privée (un nombre de 32 octets -x-) et un identifiant (dénommé adresse, @bob) dérivé de sa clé publique (sur la courbe elliptique secp256k1, gx). Les transactions sont publiques et enregistrées/publiées dans un livre de compte (ledger) instancié par une série de blocs (la blockchain). Le crédit de @Bob et les transactions sont publiques et certifiés par la blockchain. Un avoir de @Bob est identifié par un montant, le hash (identifiant) d'une précédente transaction de versement, nommé UTXO (Unspent Transaction Output), et l’index du versement dans cette transaction. Bob réalise un transfert d'UTXO au bénéfice d'Alice identifiée par son adresse @Alice; il peut (doit) attribuer un pourboire (fee) au mineur, qui est déduit de l'UTXO. Il signe la transaction et la transfère au système blockchain. 38 Andreas M. Antonopoulos,"}
{"pack_id": "french_pack", "section_title": "Bitcoin", "page": 43, "chunk_id": "french_pack_43_1", "content": "hash (identifiant) d'une précédente transaction de versement, nommé UTXO (Unspent Transaction Output), et l’index du versement dans cette transaction. Bob réalise un transfert d'UTXO au bénéfice d'Alice identifiée par son adresse @Alice; il peut (doit) attribuer un pourboire (fee) au mineur, qui est déduit de l'UTXO. Il signe la transaction et la transfère au système blockchain. 38 Andreas M. Antonopoulos, \"Mastering Bitcoin\", O'REILLY, 2015 39 Satoshi Nakamoto, \"Bitcoin: A Peer-to-Peer Electronic Cash System.\", 2008 Pascal Urien – Télécom Paris – Introduction à la Cyber Sécurité"}
{"pack_id": "french_pack", "section_title": "Bitcoin", "page": 44, "chunk_id": "french_pack_44_0", "content": "44 Toutes les 10 minutes (en moyenne) les transactions sont assemblées dans un nouveau bloc (soit 144 blocs par jour environ). Un entête bloc (header) comporte entre autre le hash du bloc précédent, la racine d'un arbre de Merkle assemblé à partir des transactions, et un nombre aléatoire (nonce) qui réalise une solution à un problème difficile de hash. Soit H la fonction H(x)=sha256((sha256)(x)). Le mineur résout le problème : H(nonce, header) < (65535 << 208) / difficulty L'entropie du calcul est voisine de 32+log (difficulty), soit 75 bits en 2019. 2 La difficulté est ajustée tous les 2016 blocs, soit environ toutes les deux semaines (2016/144). La probabilité ∆p de miner un bloc en temps ∆t selon une difficulté D (nombre de calculs) et un hash rate h(t) (nombre de calculs par seconde) s’écrit: ∆p = ∆t x h(t)/D Il en résulte que la densité de probabilité de minage d’un bloc est une fonction exponentielle: En particulier la probabilité de miner un bloc en un temps inférieur à t s’écrit Cette relation illustre les attaques à 51% dans lesquelles deux puissances de minage s’affrontent λ1 = h1(t)/D et λ2= h2(t)/D, si λ1 est associée à la puissance de minage honnête, on obtient pour λ1 >= λ2, p1(t) >= p2(t). Un mineur utilise une machine spécialisée (le rig) pour accomplir cette opération. En 2021 le système ASIC AntMiner S17 réalise 73 TH/s (73000 milliards de calculs H(x) par seconde), pour un prix de 2000$, et une consommation électrique de 2920 Watts, soit environ 0,04 Joule/Gh/s Une difficulté de 276 (en avril 2021) toutes les 10 minutes (#29 secondes) implique un hash rate d'environ 150 106 TH/s (267). La consommation électrique journalière est de l'ordre de 0,16 TWh (60TWh / an, la production française d’énergie est de 540 TWh / an) pour un cout de 24 Million€ (avec Pascal Urien – Télécom Paris– Introduction à la Cyber Sécurité"}
{"pack_id": "french_pack", "section_title": "Ethereum et smart contract", "page": 45, "chunk_id": "french_pack_45_0", "content": "45 un prix de 0,15€/KW/h). Le mineur reçoit une prime (reward) lorsqu'il gagne la compétition du minage, cette prime est de 6,25 BTC en 2021, soit 900 BTC par jour, 54 Million€ pour un cours de 60000 $/BTC. Le parc de rig est d’environ 2,4 million d’unités. La première transaction d’un bloc (le coinbase) indique l’adresse à laquelle est versée la prime de minage. L'idée de création de monnaie du bitcoin s'inspire de l'image d'une mine d'or. Les blocs sont minés à un rythme constant (144/jour), et associés à une prime (la richesse du minerai) qui est divisée par deux (le minerai devient moins riche en fonction de la profondeur) tous les 210,000 blocs (soit 4 ans). La prime initiale en 2009 était de 50 BTC. Le bitcoin est divisé en 108 satoshis. Pour ces raisons le nombre de Bitcoin émis en 33 ans est limité à 21 millions (210,000 x 50 x 2), dont la moitié (10,5 millions) ont été crées au terme des quatre premières années de vie du système (soit fin 2012). Exemple d’une transaction Bitcoin Ethereum et smart contract Le concept de la blockchain Ethereum a été introduit40 par Vitalik Buterin in 2013. Par la suite le projet s'est développé dans une société suisse (Ethereum Switzerland GmbH), et une fondation à but non lucratif (Stiftung Ethereum). Le système est opérationnel depuis le 30 juillet 2015. Cette blockchain est associé à une crypto monnaie, l'Ether (1 Ether=2000 $ en avril 2021), qui est divisé en 1018 Weis. Dans le minage du bitcoin les machines 40 Vitalik Buterin, \"A Next-Generation Smart Contract and Decentralized Application Platform\", 2013; https://github.com/ethereum/wiki/wiki/White-Paper Pascal Urien – Télécom Paris – Introduction à la Cyber Sécurité"}
{"pack_id": "french_pack", "section_title": "Ethereum et smart contract", "page": 46, "chunk_id": "french_pack_46_0", "content": "46 rigs interprètent des scripts de signature du payeur et d'identification de la clé publique du payé. Le langage utilisé n'est pas Turing complet, car il ne possède pas de boucles. Ethereum41 introduit un langage Turing complet, basé sur des instructions identifiées par un octet. Ce langage permet d'intégrer à des transactions l'exécution (appels) de programmes nommés Smart Contracts. De manière similaire au bitcoin les utilisateurs sont identifiés par une adresse dérivée d'une clé publique (courbe elliptique secp256k1), et possèdent une clé privée utilisée pour la signature des transactions. Les blocs sont minés toutes les 14,0 secondes, gratifiés d'une prime (reward) de 2 Ethers (auparavant 5 puis 3 ethers), à laquelle s'ajoute la notion d'oncle (une prime de (7-rang) x reward/8 d'Ether, avec rang >=0). La production de monnaie est donc constante (6172 blocs/jour, 12,344 Ethers/jour). Contrairement au bitcoin, Ethereum stocke les transactions dans la blockchain. Ethereum utilise un Proof of Work (PoW) basé sur la résolution d'un problème difficile (Ethash, dérivé de la procédure sha3-512), mais propose comme alternative à la consommation d'énergie, un algorithme de consensus nommé Proof of Stake. Ethereum revendique la définition d'un algorithme PoW difficile à intégrer dans des ASICs, afin de maintenir un hash rate modeste (620 TH/s en 2021). Une machine Radeon RX 480, d'un prix de 540$, consomme 165W et produit 30MH/s; soit une consommation électrique totale journalière de 71,000,000 KWh pour un cout de 10,7 Million€. F8 6B // list length= 107 bytes 80 // nonce = null (zero value) 85 04E3B29200 // gazPrice= 21,000,000,000 Wei) 82 9C40 // gazLimit= 40,000 Wei 94 777A07BAB1C119D74545B82A8BE72BEAFF4D447B //Recipient 87 2386F26FC10000 // value= 10,000,000,000,000,000 Wei 80 // data = null 1C // signature recovery parameter = 28 A0 F1DD7D3B245D75368B467B06CAD61002 // r value 67031935B7474ACB5C74FE7D8C904097 // 32 bytes A0 772D65407480D7C45C7E22F84211CB1A // s value DF9B3F36046A2F93149135CADBB9385D // 32 bytes Exemple de transaction Ethereum Les contrats sont stockés par des adresses dédiées. Chaque instruction de la machine virtuelle est facturée 1 Gas. La côte proposée du Gas en Ether 41 \"Ethereum: A Secure Decentralised Generalised Transaction Ledger\", août 2015 - Yellow Paper Pascal Urien – Télécom Paris– Introduction à la"}
{"pack_id": "french_pack", "section_title": "Ethereum et smart contract", "page": 46, "chunk_id": "french_pack_46_1", "content": "bytes A0 772D65407480D7C45C7E22F84211CB1A // s value DF9B3F36046A2F93149135CADBB9385D // 32 bytes Exemple de transaction Ethereum Les contrats sont stockés par des adresses dédiées. Chaque instruction de la machine virtuelle est facturée 1 Gas. La côte proposée du Gas en Ether 41 \"Ethereum: A Secure Decentralised Generalised Transaction Ledger\", août 2015 - Yellow Paper Pascal Urien – Télécom Paris– Introduction à la Cyber Sécurité"}
{"pack_id": "french_pack", "section_title": "Exemple de contrats: les jetons ERC20", "page": 47, "chunk_id": "french_pack_47_0", "content": "47 (Gas Price) est insérée dans la transaction, ainsi que le coût maximum de l'exécution du contrat (Start Gas). Exemple de contrats: les jetons ERC20 Selon la recommandation ERC20 un jeton est associé à une adresse de contrat implémentant l’interface ERC20. Lors de la création le nombre de décimal (n) est défini, soit 1 jeton = 10n unités. function name() public view returns (string) function symbol() public view returns (string) function decimals() public view returns (uint8) function totalSupply() public view returns (uint256) function balanceOf(address _owner) public view returns (uint256 balance) function transfer(address _to, uint256 _value) public returns (bool success) function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) function approve(address _spender, uint256 _value) public returns (bool success) function allowance(address _owner, address _spender) public view returns (uint256 remaining) event Transfer(address indexed _from, address indexed _to, uint256 _value) event Approval(address indexed _owner, address indexed _spender, uint256 _value) Les transferts de jeton sont réalisés par des procédures dédiées dont l’image binaire est insérée dans le champ data de la transaction, dont l’adresse de destination est celle du contrat ERC20, par exemple: a9059cbb 00000000000000000000000005a8e2728f64618c2119a8fd78078a9ade19abe8 0000000000000000000000000000000000000000000000000de0b6b3a7640000 Function: transfer(address to, uint256 tokens) MethodID: 0xa9059cbb = sha3[\"transfer(address,uint256)\"] MethodID: A9059CBB [0]: 00000000000000000000000005a8e2728f64618c2119a8fd78078a9ade19abe8 [1]: 0000000000000000000000000000000000000000000000000de0b6b3a7640000 Dans cet exemple la procédure la transaction invoque la méthode transfer() d’un contrat ERC20, le premier paramètre est l’adresse du bénéficiaire, le deuxième paramètre est la valeur du token soit 1.000.000.000.000.000.000 (18 décimales). Pascal Urien – Télécom Paris – Introduction à la Cyber Sécurité"}
{"pack_id": "french_pack", "section_title": "Sécurité des protocoles de communication et des réseaux", "page": 48, "chunk_id": "french_pack_48_0", "content": "48 Sécurité des Applications Distribuées, Emergence de la Cyber Sécurité La sécurité globale s’appuie le triptyque: 1) La sécurité des applications clientes et serveurs, 2) La sécurité des plateformes informatiques qui exécutent ces applications, et qui comportent deux composants: - Le système d'exploitation - Le hardware 3) la sécurité des protocoles de communication et du réseau qui transportent les messages d'applications Sécurité des applications Une application est une suite d'instructions (consommation de temps CPU) associée à contexte mémoire, qui s'appuie sur des ressources fournies par le système d'exploitation. Au sens TCP/IP les applications réalisent des services clients/serveurs, par exemple WEB (réseaux sociaux...) ou courrier électronique. Elles définissent généralement des modèles d'identités permettant d'établir une politique de contrôle d'accès et des canaux sécurisés. Elles accèdent aux ressources du système d'exploitation partagées par différentes entités logicielles telles que fichiers, bases de données, bibliothèques réseaux ou cryptographiques. Le WEB utilise typiquement un mécanisme d'authentification multimodale, certificat et protocole TLS côté serveur et HTTP et mot de passe côté client. Même si l'on peut concevoir des applications gérant intégralement leur sécurité, le maintien d'un secret incassable (non extractible) dans un logiciel reste en 2021 sans solution éprouvée; les tentatives infructueuses de développement des techniques WBC (White Box Cryptography) en sont une illustration. Sécurité des protocoles de communication et des réseaux Les piles réseau supportent des protocoles de sécurité par exemple IPSEC, SSH pour des couches TCP/UDP/IP ou IEEE 802.11i, IEEE 802.1x, RADIUS, PPTP pour les infrastructures LAN ou WLAN. Des procédures cryptographiques associées fréquemment à des preuves de protocole réalisent la confidentialité et l'intégrité des informations transportées. Les couches réseau s'appuient classiquement sur des ressources gérées par le système d'exploitation, telles que des bibliothèques cryptographiques ou des Pascal Urien – Télécom Paris– Introduction à la Cyber Sécurité"}
{"pack_id": "french_pack", "section_title": "existe de nombreux systèmes d'exploitation, importés de l'informatique", "page": 49, "chunk_id": "french_pack_49_0", "content": "49 pilotes de circuit de communication. Elles offrent une surface d'attaque au niveau MAC ou TCP/IP, mais dont les défauts sont corrigés au fil du temps en particulier grâce à une standardisation d'usage des piles logicielles réseau. Des systèmes d'exploitation tels que Windows ou Android supportent une politique d'accès à ces ressources selon une granularité plus ou moins fine, sous forme de firewall d'applications ou d'autorisations. La gestion des identités et le confinement des secrets cryptographiques associés, sont les piliers sécuritaires de l'établissement d'échanges sécurisés. Les architectures réseaux réalisent également des concepts d'isolation physique et de cloisonnement, basés sur des nœuds intégrant des fonctions de firewall, de routage ou d'analyse de trafic (Deep Packet Inspection, DPI) Sécurité du système d'exploitation Le système d'exploitation organise l'isolation des processus et des données, par exemple à l'aide de mécanismes sandbox, et grâce à la définition d'une politique de contrôle d'accès aux fichiers DAC (Discretionary Access Control), MAC (Mandatory Access Control) mis en œuvre par SELinux (Security Enhanced Linux), ou RBAC (Role Base Access Control) utilisé par Windows et Unix. L'intégrité du système d'exploitation, c'est à dire la résistance à une modification non souhaitée de son code, typiquement chargé en mémoire au démarrage du système (boot) est un problème critique. Il est partiellement solutionné avec des technologies dites de Secure Boot, basées sur des puces électroniques TPM (Trusted Platform Module). La réalisation des politiques d'accès s'appuie sur un système d'identité basé sur des tuples login/password ou certificat/clé-privé. La protection des données stockées par des mémoires secondaires (disques, flash...) implique la définition de système de gestion de fichiers chiffré dont la clé maitre est protégée par un mot de passe (typiquement celui de l'administrateur de la machine). Le stockage sécurisé d'un mot de passe est vulnérable à des attaques par force brute. De manière générale le contenu des mémoires primaires (SRAM, DRAM...) est en clair et peut stocker des informations sensibles (mots de passe...) collectées par divers procédés. Sécurité Hardware Le hardware classique s'appuie sur des portes logiques CMOS, des bus d'interconnexion, et implicitement sur des lois physiques conformes aux équations de Maxwell, qui sont"}
{"pack_id": "french_pack", "section_title": "existe de nombreux systèmes d'exploitation, importés de l'informatique", "page": 49, "chunk_id": "french_pack_49_1", "content": "vulnérable à des attaques par force brute. De manière générale le contenu des mémoires primaires (SRAM, DRAM...) est en clair et peut stocker des informations sensibles (mots de passe...) collectées par divers procédés. Sécurité Hardware Le hardware classique s'appuie sur des portes logiques CMOS, des bus d'interconnexion, et implicitement sur des lois physiques conformes aux équations de Maxwell, qui sont sensibles à des attaques par canaux cachés (SPA, DPA...). Dans ces conditions le stockage de secrets (Key Caching) est très difficile. Des circuits électroniques équipés de contre mesures physiques et logiques (TPM, carte à puce, Secure Element, Secure MCU...) sont de plus Pascal Urien – Télécom Paris – Introduction à la Cyber Sécurité"}
{"pack_id": "french_pack", "section_title": "Heuristiques de défense: placebo, vaccin, défense immunitaire", "page": 50, "chunk_id": "french_pack_50_0", "content": "50 en plus présents dans les systèmes informatiques, par exemple pour la restitution d'une clé maître de chiffrement de fichiers, liée à un mot de passe. Le confinement dans un espace sûr (tamper resistant) évite/limite les attaques par force brute (grâce à l'absence de vecteurs d'attaque, par exemple empreinte du mot de passe), il impose également un accès physique à la puce de sécurité, et peut impliquer des temps d'accès \"importants\" qui rendent inefficaces les attaques force brute. De surcroit le blocage fonctionnel de la puce au terme d'un nombre fini de présentation du mot de passe (PIN code) peut entrainer la non fonctionnalité permanente de la plate forme informatique. Quelques paradigmes de sécurité Classification des types d’attaques On peut classer42 les attaquants d’un système en trois catégories: - Classe I - (clever outsiders):. L’attaque accidentelle. Un utilisateur constate de manière fortuite un défaut du système. - Classe II - (knowledgeable insiders). L’attaque individuelle ou par de petites communautés (hackers), mais avec des moyens limités. L’attaquant réalise un investissement modeste, mais espère un gain financier ou de notoriété. - Classe III - (funded organisations). L’attaque par des organisations (Etats, …) disposant de moyens importants. La logique financière n’est pas forcément un but. Heuristiques de défense: placebo, vaccin, défense immunitaire - Le placebo. Une défense utopique mais parfois efficace, est utilisée pour parer une attaque inconnue. Par exemple la saignée, l’emploi hasardeux d’antibiotique ou de vaccin. - Le vaccin. Une réponse connue et efficace à une attaque identifiée. 42 DG Abraham, GM Dolan, GP Double, JV Stevens, “Transaction Security System\", in IBM Systems Journal v 30 no 2 (1991) pp 206 229 Pascal Urien – Télécom Paris– Introduction à la Cyber Sécurité"}
{"pack_id": "french_pack", "section_title": "Une Méthodologie de Cyber Attaque: Empreinte, Collecte, Inventaire", "page": 51, "chunk_id": "french_pack_51_0", "content": "51 - La défense immunitaire. Une réponse efficace, est spontanément générée, pour lutter contre une attaque inconnue. La légende d’Hans Brinker est une illustration de ce principe. Facteurs de Vulnérabilité: Complexité, Extensibilité, Connectivité Trois facteurs43 (ou Trinité) amplifient les failles des systèmes informatiques modernes, - La complexité. Les logiciels sont complexes, les développeurs ne maîtrisent pas les bugs et les comportements non désirés. - L’extensibilité. La configuration d’une plateforme informatique se modifie tout au long de sa durée de vie. - La connectivité. Les vulnérabilités des logiciels sont exploitables à distance. Une Méthodologie de Cyber Attaque: Empreinte, Collecte, Inventaire Dans les différentes éditions du best seller44 \"Hacking Exposed\" les auteurs distinguent les trois phases suivantes pour la préparation d'une cyber attaque: - Le footprinting, c'est à dire la collecte d'informations publiques sur les composants du système, via internet ou des services tels que WHOIS, DNS ou TRACEROUTE. Dans cette première phase le but est d'identifier les serveurs, leurs adresses IP, la structure du réseau, mais aussi les sites géographiques. - Le scanning réalisant la collecte d'informations relatives aux systèmes d'exploitation, et aux ports TCP et UDP ouverts. - L'inventaire (enumeration) consiste à obtenir des informations précises sur les services disponibles et leur version, collectées à l'aide de sessions actives. 43 S. Ravi, A. Raghunathan, P. Kocher, and S. Hattangady, \"Security in Embedded Systems: Design Challenges\", 2004. 44 \"Hacking Exposed\", Stuart McClure, Joel Scambray, George Kurtz, Mac graw Hill Pascal Urien – Télécom Paris – Introduction à la Cyber Sécurité"}
{"pack_id": "french_pack", "section_title": "Authentification", "page": 52, "chunk_id": "french_pack_52_0", "content": "52 Systèmes Embarqués Les attaques sur les environnements SCADA, CAN, ou de manière plus générale sur les objets connectés, mettent en évidence les trois principes de sécurité suivants : - Communications Sécurisées (intégrité, chiffrement...), avec mutuelle authentification forte. Cela implique la disponibilité de clés symétriques ou asymétriques, et la définition d'un système d'identité (basé sur des numéros de série ou des certificats par exemple) - Stockage Sécurisé, par exemple pour les secrets nécessaires aux communications, mais plus généralement pour des informations sensibles. - Intégrité des Nœuds, mécanismes d'isolation logicielle (par exemple multi processeurs pour la résistance aux malwares, SandBox pour l'intégrité du système d'exploitation), mise à jour/chargement de logiciels sécurisée (signature des logiciels), prévention détection des intrusions et comportements suspects, prévention des attaques par rebond. Principes de sécurité. Classiquement la sécurité s’appuie sur cinq concepts de base, l'identification, l'authentification, la confidentialité, l'intégrité, et la non répudiation. La disponibilité est également importante. Identification L’identification (identity). L’utilisateur d’un système ou de ressources diverses possède une identité (une sorte de clé primaire d’une base de données) qui détermine ses lettres de crédits (credential) et ses autorisations d’usage. Cette dernière peut être déclinée de multiples manières, compte utilisateur (login) d’un système d’exploitation ou techniques biométriques empreinte digitale, empreinte vocale, schéma rétinien… Authentification L’authentification (authentication). Cette opération consiste à faire la preuve de son identité. Par exemple on peut utiliser un mot de passe, ou une méthode de défi basée sur une fonction cryptographique et un secret partagé. L’authentification est simple ou mutuelle selon les contraintes de l’environnement. Pascal Urien – Télécom Paris– Introduction à la Cyber Sécurité"}
{"pack_id": "french_pack", "section_title": "Au sujet de la confiance", "page": 53, "chunk_id": "french_pack_53_0", "content": "53 Confidentialité La confidentialité (privacy). C’est la garantie que les données échangées ne sont compréhensibles que pour les deux entités qui partagent un même secret souvent appelé association de sécurité (SA). Cette propriété implique la mise en œuvre d’algorithmes de chiffrement soit en mode flux (octet par octet, comme par exemple dans RC4, AES-CTR) soit en mode bloc (par exemple une série de 8 octets dans le cas du DES, 16 octets pour l'AES). Intégrité L’intégrité des données (MAC, Message AuthentiCation). Le chiffrement évite les écoutes indiscrètes, mais il ne protège pas contre la modification des informations par un intervenant mal intentionné. Des fonctions à sens unique (encore dénommées empreintes) telles que MD5 (16 octets) ou SHA1 (20 octets), SHA2, SHA3 réalisent ce service. Le MAC peut être associé à une clé secrète, telle la procédure HMAC(Clé, Message), Keyed-Hashing for Message AuthentiCation. Le chiffrement et l'intégrité peuvent être combinés dans un seul algorithme AEAD (Authenticated Encryption with Associated Data), par exemple AES-CCM, AES-GCM. Non-répudiation La non-répudiation. Elle consiste à prouver l’origine des données. Généralement cette opération utilise une signature asymétrique en chiffrant l’empreinte du message avec la clé privée de son auteur (par exemple RSA(Empreinte(Message))). Disponibilité On cite fréquemment un sixième attribut relatif à aux notions de sûreté de fonctionnement, disponibilité, et résilience du système. Au sujet de la confiance Remarquons également que la sécurité implique le partage de confiance entre les différents acteurs de la chaîne. Pour partager un secret il faut avoir confiance dans les capacités des parties concernées à ne pas le divulguer. Ainsi les infrastructures à clés publiques (PKI) supposent que l’on fasse confiance aux entités qui produisent les clés privées, et les signatures des certificats. La confiance est une relation sans propriétés particulières. Pascal Urien – Télécom Paris – Introduction à la Cyber Sécurité"}
{"pack_id": "french_pack", "section_title": "Sécurité des Réseaux", "page": 54, "chunk_id": "french_pack_54_0", "content": "54 Réflexivité, ai-je confiance en moi-même (pas dans tous domaines). Symétrie, je fais confiance au pilote de l’avion ou au chirurgien, la réciproque n’est pas forcément vraie. Transitivité, j’ai confiance dans le président, le président a confiance en la présidente, je n’ai pas obligatoirement confiance dans la présidente. Les infrastructures PKI supposent une transitivité de la relation de confiance. Le client du réseau et un serveur d’authentification partagent une même autorité de certification (CA), qui crée une classe de confiance basée sur une relation R (R signifiant= «fait confiance à»). (Client R CA) ET (Serveur R CA) => (Client R Serveur) Sécurité des Réseaux Un réseau assure le transport des messages échangés entre deux applications distantes. Dans le modèle OSI les services déployés par le réseau sont classés en sept couches, physique, données, réseau, transport, session, présentation et application. Le modèle classique des réseaux TCP/IP ne comporte que 5 couches, physique (PMD+PHY), données (MAC+LLC), réseau (IP), transport (UDP+TCP) et applications. Dans cette section nous ne prendrons en compte que ce dernier modèle, qui est aujourd’hui le standard de facto pour l’échange d’informations numériques. Application Application UDP/TCP UDP/TCP IP IP IP IP LLC LLC LLC LLC MAC MAC MAC MAC PHY PHY PHY PHY PMD PMD PMD PMD Des mécanismes tels que confidentialité ou intégrité des données peuvent être intégrés à tous les niveaux et sur les différents tronçons (arcs) qui composent le réseau. La gestion des clés cryptographiques sera par exemple réalisée manuellement. L’identification l’authentification la non répudiation les autorisations sont des procédures mises en œuvre dans le réseau d’accès Pascal Urien – Télécom Paris– Introduction à la Cyber Sécurité"}
{"pack_id": "french_pack", "section_title": "Sécurité au niveau réseau/transport", "page": 55, "chunk_id": "french_pack_55_0", "content": "55 (sans fil par exemple), le réseau de transport (IP), le réseau de destination (intranet …). De même ces services peuvent également être offerts au niveau applicatif. Appli Appli 4 4 3 3 3 3 3 3 2 2 2 2 2 2 1 1 1 1 1 1 Routeur Routeur Schématiquement nous classerons les infrastructures de sécurité des réseaux en cinq catégories, dédiés aux couches OSI physique, MAC, TCP/IP, application, ou intégré entre transport et application. Sécurité au niveau physique Le chiffrement au niveau physique sur des liaisons point à point. Par exemple cryptographie quantique (PMD), saut de fréquences pseudo aléatoire, ou chiffrement 3xDES du flux octets (une méthode couramment déployée par les banques). Dans ces différentes procédures les clés sont distribuées manuellement. Sécurité au niveau MAC Confidentialité, intégrité de données, signature de trames MAC. C’est la technique choisie par les réseaux sans fil 802.11. La distribution des clés est réalisée dans un plan particulier (décrit par la norme IEEE 802.1x). Dans ce cas on introduit la notion de contrôle d’accès au réseau LAN, c’est à dire à la porte de communication avec la toile d’araignée mondiale. C’est une notion juridique importante, le but est d’interdire le transport des informations à des individus non authentifiés (et donc potentiellement malveillants…). Sécurité au niveau réseau/transport Confidentialité, intégrité de données, signature des paquets IP et/ou TCP. C’est typiquement la technologie IPSEC en mode tunnel. Un paquet IP chiffré et signé est encapsulé dans un paquet IP non protégé. En effet le routage à travers l’Internet implique l’analyse de l’entête IP, par les Pascal Urien – Télécom Paris – Introduction à la Cyber Sécurité"}
{"pack_id": "french_pack", "section_title": "Sécurité au niveau application", "page": 56, "chunk_id": "french_pack_56_0", "content": "56 passerelles traversées. IPSEC crée un tunnel sécurisé entre le réseau d’accès et le domaine du fournisseur de service. On peut déployer une gestion manuelle des clés ou des protocoles de distribution automatisés tels que ISAKMP et IKE. La philosophie de ce protocole s’appuie sur la libre utilisation du réseau d’accès ce qui n’est pas sans soulever des problèmes juridiques. Par exemple des pirates protègent leurs échanges de données, il est impossible aux réseaux traversés de détecter leur complicité dans le transport d’informations illégales. Couche de Sécurité entre transport et application Insertion d’une couche de sécurité additive assurant la protection d’application telles que navigateurs WEB ou messageries électroniques. Par exemple le protocole SSL/TLS basé sur la cryptographie asymétrique réalise cette fonction. Généralement ce dernier conduit une simple authentification entre serveur et client. Il utilise un secret partagé (Master Secret) à partir duquel on dérive des clés de chiffrements utilisées par l’algorithme négocié entre les deux parties. Par exemple dans le cas d’une session entre un navigateur et un serveur bancaire, le client authentifie son service bancaire. Une fois le tunnel sécurisé établit le client s’authentifie à l’aide d’un login et d’un mot de passe. Il obtient alors une identité temporaire associée à un simple cookie. Sécurité au niveau application Gestion de la sécurité par l’application elle-même. Ainsi le protocole S- MIME réalise la confidentialité, l’intégrité et la signature des contenus critiques d’un message électronique. Pascal Urien – Télécom Paris– Introduction à la Cyber Sécurité"}
{"pack_id": "french_pack", "section_title": "Authentification - Autorisation", "page": 57, "chunk_id": "french_pack_57_0", "content": "57 Eléments de Sécurité Authentification - Autorisation RESEAU ENTITE B ENTITE A HOSTILE R IDT A A R IDT B B K = F(R , R , K [IDT ,IDT ]) K , K = G(R ,R , K ) M A B S, A B C I A B M Canal de Transmission Sécurisé {M}K HMAC(M, K) C I La procédure d’authentification d’une paire d’entités informatique, parfois dénommée phase d’autorisation, consiste typiquement à échanger les identités (IDT et IDT ) d’un couple d’interlocuteurs (appelés client/serveur A B ou initiateur/répondeur), deux nombres aléatoires (R , R ) formant un A B identifiant unique de la session (RA||RB), puis d’effectuer un calcul cryptographique (F, une fonction de type Pseudo Random Function - PRF). Ce dernier produit, à l’aide d’une valeur secrète (K , un secret à long terme) S un secret maître (K ), à partir duquel on déduit (à l’aide d’une fonction G, M de type Key Data Function - KDF) des clés de chiffrement (K ) et d’intégrité C (K) permettant de créer un canal sécurisé (keying). I Dans un contexte de cryptographie symétrique la clé K est statique et S distribuée manuellement; dans un contexte de cryptographie asymétrique la clé K sera par exemple générée par A, mais chiffrée par la clé publique (e,n) S de B ( Ke mod n ), ou bien déduit d’un échange de Diffie-Hellman (K=gxy) s s La protection de l’identité est une préoccupation croissante avec l’émergence des technologies sans fil. Il existe divers mécanismes permettant d’obtenir cette propriété avec des degrés de confiance différents, par exemple grâce à la mise en œuvre de pseudonymes (tel que le TIMSI du GSM), du protocole de Diffie-Hellman, ou du chiffrement de certificats à l’aide la clé publique du serveur. Pascal Urien – Télécom Paris – Introduction à la Cyber Sécurité"}
{"pack_id": "french_pack", "section_title": "Sécurité du canal", "page": 58, "chunk_id": "french_pack_58_0", "content": "58 Sécurité du canal Un schéma cryptographique assurant à la fois intégrité et confidentialité garantit la sécurité contre les attaques à chiffrés choisis IND-CCA (Chosen- Ciphertext Attack). Deux propriétés sont nécessaires : - IND-CPA= Chosen Plaintext Attack - INT-CTXT= Integrity of CipherTeXT En d’autres termes il faut chiffrer les données et vérifier leur intégrité avec un MAC (Message Authentification Code). Plusieurs méthodes sont possibles pour ces opérations: quel niveau de sécurité peut on espérer45 ?. L’algorithme MAC-And-Encrypt, soit E(M) || MAC(M), n’est pas sûr. Le MAC du message (M) est calculé avant chiffrement, le paquet est la concaténation du MAC et du message chiffré. L’algorithme MAC-Then-Encrypt, soit E( M || MAC(M) ) n’est pas génériquement sûr, mais en pratique on peut construire des schémas sûrs (avec des preuves de sécurité), tels que AES-CCM. Les versions TLS 1 et 2 utilisent ce schéma, un HMAC est ajouté au message, avec des octets de padding optionnels, puis l’ensemble est chiffré E( M || HMAC(M) || Padding_Bytes). Des attaques telles que Lucky Thirteen s’appuient sur le fait que les octets de padding ne sont pas pris en compte dans le calcul HMAC. 45 http://www.di.ens.fr/~fouque/mpri/MAC.pdf Pascal Urien – Télécom Paris– Introduction à la Cyber Sécurité"}
{"pack_id": "french_pack", "section_title": "Sécurité des échanges de Diffie Hellman", "page": 59, "chunk_id": "french_pack_59_0", "content": "59 Une ancienne version du keystore Android protégeait les clés symétriques par un procédé MAC-Then-Encrypt tel que: - AES-CBC ( MD5(Header || Key) || (Header || Key) ) L’article46 décrit une attaque qui forge des petites clés, basée sur la coïncidence de taille (16 octets) du calcul MD5 et des blocs AES. L’algorithme Encrypt-Then-MAC, soit E(M) || MAC(E(M)) est sûr, si le mode de chiffrement est sûr, et que le MAC réalise l’intégrité. Après une série d’attaques liées à l’usage du mode cryptographique de chiffrement CBC et de l’usage de l’algorithme MAC-Then-Encrypt, le protocole TLS 1.3 a adopté des algorithmes Authenticated Encryption with Associated Data (AEAD) tels que AES-CCM, qui utilisent généralement des CMAC (block-cipher-based MAC). Sécurité des échanges de Diffie Hellman Considérons un échange de Diffie Hellman (DH) dans Z/pZ*, avec p premier, soit (gx)y mod p, gx est une clé publique (p ), y une clé privée, et g k un générateur d’ordre p-1. D’après le théorème de Sylow, si l’ordre N d’un groupe se décompose en facteurs premier (qi), N= ∏ qiki, il existe des sous groupes d’ordre qki. La décomposition en facteurs premier de N= p-1 nous montre donc l’existence de sous groupes d’ordre qki. De surcroit les sous groupes d’un groupe cyclique (monogène) sont cycliques. Dans Z/pZ* il existe des générateurs d’ordre p-1, mais aussi des générateurs pour des sous groupes plus petits dont l’ordre divise p-1. Une attaque possible dans les échanges DH est de proposer une clé publique p = k g x utilisant un générateur dont l’ordre d divise p-1 (d | p-1). d 46 Mohamed Sabt, Jacques Traoré, \"Breaking Into the KeyStore: A Practical Forgery Attack Against Android KeyStore\", ESORICS 2016 . Pascal Urien – Télécom Paris – Introduction à la Cyber Sécurité"}
{"pack_id": "french_pack", "section_title": "Attaque DH et contre mesure", "page": 60, "chunk_id": "french_pack_60_0", "content": "60 Comment trouver des générateurs dans Z/pZ* Il existe ϕ(p-1) générateurs (ϕ étant le nombre d’Euler), le nombre maximum de générateurs est (p-1)/2, c’est à dire le nombre d’entiers impairs inférieurs à p. Si p est de la forme p=1+2n, ϕ(p-1)= ϕ(2n)= 2n-1= (p-1)/2. Une méthode consiste à trouver des générateurs g d’ordre qiki (il existe ki ϕ(qiki) = (qi-1).qki-1 générateurs d’ordre qiki ) puis d’en réaliser le produit. Il existe ϕ(p-1) générateurs soit ϕ(p-1)= ∏ ϕ(qiki)= ∏ (qi-1).qi(ki-1). Safe Prime Un Safe Prime p est de la forme p=2q + 1 avec q premier, q est le Sophie Germain prime de p. On en déduit p-1 = 2q , et ϕ(p-1)= q-1. Il existe un générateur d’ordre 2 (p-1, puisque (p-1)2=1 mod p) et q-1 générateurs d’ordre q. Si p = 7 mod 8 (voir RFC 7919), p est un diviseur du nombre de Mersenne Mq = 2q−1, on en déduit que 2 est un générateur d’ordre q. Par la suite 2k avec k є [1, q-1] est un générateur d’ordre q. Les générateurs d’ordre p-1 sont obtenus par les produits (p-1) 2k mod p. Attaque DH et contre mesure Considérons un groupe d’ordre N= ∏ qiki. H un sous groupe d’ordre q premier (q|n), g est un générateur de H d’ordre q= qi; par exemple le plus q grand qi. Soit d un diviseur de N, g un générateur d’ordre d < q. Par exemple d dans Z/pZ d | (p-1). p = g x x є [1, d] une clé publique malicieuse, (g x)d = 1, il existe d secrets k d d partagés DH = g xy y є [1, q] d p = g x une clé publique bien formée, c’est à dire un générateur de H k q d’ordre q, (g x)q = 1 il existe q secrets partagés DH. q Le test p q =1 (implémenté par exemple dans OPENSSL) identifie une clé k publique bien formée d’ordre q. Une clé publique malicieuse dont l’ordre d ne divise pas q est détectée par ce test. Pascal Urien – Télécom Paris– Introduction à la"}
{"pack_id": "french_pack", "section_title": "Attaque DH et contre mesure", "page": 60, "chunk_id": "french_pack_60_1", "content": "de H k q d’ordre q, (g x)q = 1 il existe q secrets partagés DH. q Le test p q =1 (implémenté par exemple dans OPENSSL) identifie une clé k publique bien formée d’ordre q. Une clé publique malicieuse dont l’ordre d ne divise pas q est détectée par ce test. Pascal Urien – Télécom Paris– Introduction à la Cyber Sécurité"}
{"pack_id": "french_pack", "section_title": "Mise à jour des clés cryptographiques", "page": 61, "chunk_id": "french_pack_61_0", "content": "61 Mise à jour des clés cryptographiques Claude Shannon a défini la notion d’entropie de l’information. H = - ∑ p(x) log p(x), soit log (n) pour n symboles équiprobables, pour i 2 i 2 n=2p l’entropie est de p bits. L’entropie conditionnelle de X sachant Y s’écrit: H(X,Y) = - ∑ p(X=x,Y=y) log p(X=x,Y=y) 2 H(X,Y) = H(X) + H(Y|X), H(Y|X)= H(X,Y) - H(X) Un système cryptographique parfait au sens de Shannon est tel que: H(M|C) = H(M), M le message en clair et C le message chiffré. Par exemple une clé K constituée par une suite d’octets aléatoires R ,R ,….,R réalise un système cryptographique parfait (Ci = R exor M, M = 1 2 i i i i Ri exor C), c’est le code de Vernam. i H(C)= p p(X=M,Y=C) = p(X=M) x 1/n = 1/n2 i j i D’où H(M,C) = 2p, H(M) = H(C) En particulier lorsque tous les messages en clair sont équiprobables la taille de la clé doit être au moins aussi grande que la taille des messages en clair. Un algorithme de chiffrement utilisant une clé de taille finie, cette dernière doit être modifiée de temps à autre. Pascal Urien – Télécom Paris – Introduction à la Cyber Sécurité"}
{"pack_id": "french_pack", "section_title": "Identité et Organisations", "page": 62, "chunk_id": "french_pack_62_0", "content": "62 Identité et Organisations L’identité détermine les autorisations et/ou la localisation d’une personne, d’un objet (parfois intelligent), ou des deux, relativement à une organisation (étatique, privée…). L’authentification est la procédure qui consiste à faire la preuve d’une identité. On peut utiliser divers moyens : - Ce qui je suis, méthodes biométriques, éventuellement multi modales (passeport électronique…) - Ce que je connais, mot de passe, …. - Ce que je possède, carte à puce, jeton USB… Voici quelques exemples d’organisations gérant des d’identités : -Les états (identité des citoyens et des visiteurs). Les identités utilisent par exemple la biométrie (programme US-Visit), les passeports électroniques, les cartes d’identité munies de puces (CNIE). - Le WEB (Applications WEB). Il existe de multiples infrastructures d’identités telles que, Single Sign On (SSO), Microsoft Passport, Liberty Alliance, OPENID, FIDO,… - L’industrie (localisation, inventaire…). L’identité des objets est associée à des étiquettes (code barre, code 2D) ou des RFIDs. - Les services informatiques gèrent des ordinateurs personnels. L’identité d’une machine est par exemple assurée par un Trusted Platform Module (TPM). - Les réseaux bancaires réalisent des opérations de paiement associées à des cartes BO’ ou EMV. - Les réseaux de communication réalisent des échanges de données, et mettent en œuvre différentes identités : couple login mot de passe, carte SIM ou USIM, Wi-Fi et EAP-ID, jetons divers (tels que RSA SecurID, FIDO, Titan Key…) Google Titan Key Pascal Urien – Télécom Paris– Introduction à la Cyber Sécurité"}
{"pack_id": "french_pack", "section_title": "Mécanismes symétriques: mot de passe, pre-shared key, provisionning", "page": 63, "chunk_id": "french_pack_63_0", "content": "63 Taxonomie des méthodes d’authentification Nous classons les méthodes d’authentification en trois catégories, symétriques (secrets partagés), asymétriques (basées sur RSA ou ECC en règle générale) et tunnels. Mécanismes symétriques: mot de passe, pre-shared key, provisionning Nous divisons les méthodes symétriques en trois classes - Les mots de passe. Un mot de passe est une suite de caractères qui peut être facilement mémorisée par un être humain. Il ne s’agit pas d’un nombre aléatoire mais au contraire d’une concaténation de mots, de chiffres et de signes. De tels secrets peuvent être devinés à l’aide d’une attaque par dictionnaire, c’est à dire un programme utilisant une base de données pour la génération de ces valeurs. Ainsi les méthodes EAP-MSCHAPv2 ou LEAP reposent sur la clé NT, c’est à dire l’empreinte MD4 (soit 16 octets) d’un mot de passe. Dans les anciens systèmes UNIX la liste des empreintes des mots de passe est stockée dans le ficher /etc/passwd. Le fichier /etc/shadow lisible uniquement en mode root est aujourd’hui préféré. Un mot de passe est par exemple une chaîne d’au plus 8 caractères ASCII, convertie en une clé DES de 56 bits (8 x 7bits). La fonction crypt(key, salt) réalise dans ce cas 25 chiffrements DES consécutifs (avec une valeur initiale IV=0), dont chacun comporte une permutation choisie parmi 4096 possible (soit 12 bits, c’est le paramètre salt, deux caractères choisis parmi 64 valeurs possibles a-z A-Z 0-9 . /). D’autres algorithmes de génération d’empreinte sont supportés, tels que la fonction MD5. IV=0 Dans l’univers Microsoft la sécurité d’un ordinateur personnel est fortement corrélée au mot de passe de son utilisateur. Ce dernier n’est jamais stocké en clair dans la mémoire de la machine. A partir d’un mot de passe Pascal Urien – Télécom Paris – Introduction à la Cyber Sécurité"}
{"pack_id": "french_pack", "section_title": "Mécanismes symétriques: mot de passe, pre-shared key, provisionning", "page": 64, "chunk_id": "french_pack_64_0", "content": "64 on calcule une empreinte MD4 de 16 octets, mémorisée par le système hôte. Cette valeur, parfois nommée clé NT ou NtPasswordHash est complétée par cinq octets nuls. On obtient ainsi 21 octets interprétés comme une suite de trois clés DES (de 56 bits chacune). MD4 Mot de Passe random 8 octets Clé NT DES (r), DES (r), DES (r) 3x7 = 16 octets + 5 nuls Key1 Key2 Key3 = {Key1, Key2, Key3} La méthode MSCHAPv1 est une authentification simple, le serveur d’authentification produit un nombre aléatoire de 8 octets, l’authentifié utilise ses trois clés DES pour chiffrer cet aléa, ce qui génère une réponse de 24 octets. MSCHAPv2 est une extension du protocole précédent, le serveur d’authentification délivre un nombre aléatoire de 16 octets (AuthenticatorChallenge), le client calcule un nombre 8 octets à partir de cette valeur, d’un aléa (PeerChallenge) qu’il génère et du nom de l’utilisateur (login). Ce paramètre est chiffré de manière analogue à MSCHAPv1 par la clé NT et l’on obtient une valeur de 21 octets. Dans une plateforme Microsoft un annuaire stocke le nom des utilisateurs et leur clé NT. PeerChallenge AuthenticatorChallenge F (SHA1) r= 8 octets DES1(r), DES2(r), DES3(r) Sous Windows le SAM (Security Account Manager) est la base de données qui contient les informations sur les comptes utilisateurs (login, mot de passe). L'image du SAM est stockée dans le fichier C:\\Windows\\System32\\config et également dans la base de registre HKEY_LOCAL_MACHINE\\SAM. Cependant ces informations ne sont pas accessibles au runtime. On obtient un copie du SAM en démarrant la machine sous un autre système d'exploitation (typiquement linux), mais aussi à l'aide d'utilitaires de hacking tels que fgdump.exe (exécuté en mode Pascal Urien – Télécom Paris– Introduction à la Cyber Sécurité"}
{"pack_id": "french_pack", "section_title": "Les tunnels", "page": 65, "chunk_id": "french_pack_65_0", "content": "65 administrateur). Selon47 dans la méthode LM Hash le mot de passe d'un compte utilisateur est complété à 14 octets à l'aide d'octets nuls, puis transformé en une deux clés DES distinctes réalisant le chiffrement de la valeur ASCII KGS!@#$% (soit 2x8 octets). La procédure NTLM Hash stocke l'image MD4 (16 octets) du mot de passe. Des programmes tels que CAIN ou Windows Password Recovery réalisent des attaques par force brute, dictionnaire ou rainbow tables. - Les secrets partagés (PSK, Pre-Shared-Key). Il s’agit en fait d’un nombre aléatoire, dont la taille est l’ordre de 128 à 160 bits. Un cerveau humain éprouve beaucoup de difficultés à mémoriser ces informations. Le stockage sécurisé du secret est réalisé par exemple par le système d’exploitation d’un ordinateur personnel ou par une carte à puce. - Le mode provisioning. Dans les réseaux GSM, 3G, 4G, 5G une base de données centralisée (Host Location Register) gère les comptes utilisateurs, en particulier leur PSK. Afin d’éviter des interrogations fréquentes les méthodes d’authentification (A3/A8, Milenage) sont conçues de telle manière que le site central puisse produire des vecteurs d’authentification (triplets GSM ou quadruplets UMTS), réutilisables par des agents de confiance (tels que les Visitor Location Register par exemple). Mécanismes Asymétriques Ces procédures sont basées sur des algorithmes tels que ECC, RSA ou Diffie-Hellman. Le protocole SSL/TLS est généralement utilisé pour le transport de ces échanges. Les tunnels Ainsi que nous l’avons souligné précédemment les méthodes d’authentification basées sur des mots de passe, sont sujettes à des attaques par dictionnaire. Ainsi le protocole MSCHAP assure une protection jugée raisonnable dans des environnements sûrs (par exemple des intranets ou des connexions par modem), mais n’est plus adapté lors d’une mise en œuvre dans un milieu hostile, tel que IP sans fil, abritant potentiellement de nombreuses oreilles électroniques indiscrètes. Les tunnels, s’appuyant fréquemment sur la technologie SSL/TLS, protègent un dialogue d’authentification grâce au chiffrement des données échangées. Il existe aujourd’hui de multiples standards devenus nécessaires, 47 https://technet.microsoft.com/en-us/library/cc875839.aspx, \"Selecting Secure Passwords\" Pascal Urien – Télécom Paris – Introduction à la Cyber Sécurité"}
{"pack_id": "french_pack", "section_title": "Les faiblesses du protocole IP", "page": 66, "chunk_id": "french_pack_66_0", "content": "66 en raison des nombreux logiciels disponibles sur le WEB qui cassent les protocoles à base de mot de passe. Les faiblesses du protocole IP Par nature un réseau est sensible au déni de service, au niveau physique (brouillage divers…) ou logique (destruction/modification des paquets ou des trames). Le protocole ARP (Address Resolution Protocol) réalise une correspondance entre une adresse MAC et une adresse IP. Dans l’attaque dite ARP spoofing l’attaquant forge une trame de réponse (ARP.response) erronée. Il en résulte un détournement du trafic IP. Un paquet IP comporte typiquement un en tête de 20 octets démuni d’attributs cryptographiques de sécurité. La confidentialité et l’intégrité des données transportées ne sont donc pas assurées. Le mécanisme de segmentation est difficilement analysable par les pare- feu. En effet, seul le premier segment IP contient l’entête du protocole supérieur transporté, par exemple TCP ou UDP. De même le réassemblage peut entraîner un problème de déni de service pour la machine de réception (la taille maximale d’un paquet IP est de 65535 octets et le temps de réception des fragments est indéterminé). La correspondance adresse IP nom de machine est typiquement réalisée par le protocole DNS qui n’offre aucun service d’authentification ou d’intégrité. Lorsqu’un pare-feu autorise les paquets ICMP, il s’expose à de possibles canaux cachés, utilisés par exemple pour dialoguer avec des chevaux de Troie, dont les informations sont transportées par des paquets ICMP.response. Le protocole TCP ne propose aucune authentification du serveur lors de l’ouverture d’une session (paquets SYN et ACK+SYN). Le SYN-Flooding est une technique d’attaque de déni de service qui consiste à générer en grand nombre de paquets TCP-SYN. L’analyse des ports TCP (en mode serveur) ouverts d’un nœud IP (port scan) repose sur la possibilité de forger librement des paquets TCP-SYN. Il est possible de mettre fin à une session TCP à l’aide de paquets TCP- RESET. Connaissant l’adresse IP du client en supposant une fenêtre de Pascal Urien – Télécom Paris– Introduction à la Cyber Sécurité"}
{"pack_id": "french_pack", "section_title": "IPSEC", "page": 67, "chunk_id": "french_pack_67_0", "content": "67 réception (RWIN) de 214 et une plage de ports éphémères de 210 le nombre de paquets nécessaire est de l’ordre de 232/214*210 = 228. De nombreux protocoles (PPP, POP, FTP,…) mettent en œuvre des mots de passe transmis en clair sur le réseau. Certaines messageries ne supportent pas un transport sécurisé par SSL/TLS. Globalement le modèle Internet présente une insécurité quasi globale, notamment au niveau de la messagerie…., et pourtant il fonctionne quotidiennement. Les solutions sécurisées IP classiques: VPN, TLS, Kerberos, SSH IPSEC IPSEC assure l’intégrité, l’authentification et la confidentialité des charges transportées par le protocole IP. Les ressources cryptographiques sont déduite d’une association de sécurité (SA) basée sur un secret partagé entre les deux entités de la session sécurisée IP. La difficulté de déploiement du protocole IPSEC est liée au mécanisme d’établissement d’un SA, à l’aide du protocole IKE (Internet Key exchange, qui réalise un premier tunnel sécurisé à l’aide d’un protocole de Diffie-Hellman). Bien que l’usage de certificats soit possible, c’est généralement une clé pré définie (PreShareKey) qui permet l’authentification des deux extrémités de la communication. Pascal Urien – Télécom Paris – Introduction à la Cyber Sécurité"}
{"pack_id": "french_pack", "section_title": "IPSEC", "page": 68, "chunk_id": "french_pack_68_0", "content": "68 Initiator Responder ----------- ----------- Echange HDR, SA --> Chiffré <-- HDR, SA HDR, KE, Ni --> <-- HDR, KE, Nr HDR*, IDii, [ CERT, ] SIG_I --> <-- HDR*, IDir, [ CERT, ] SIG_R For pre-shared keys: SKEYID = prf(pre-shared-key, Ni_b | Nr_b) The result of either Main Mode or Aggressive Mode is three groups of authenticated keying material: SKEYID_d = prf(SKEYID, g^xy | CKY-I | CKY-R | 0) SKEYID_a = prf(SKEYID, SKEYID_d | g^xy | CKY-I | CKY-R | 1) SKEYID_e = prf(SKEYID, SKEYID_a | g^xy | CKY-I | CKY-R | 2) and agreed upon policy to protect further communications. The values of 0, 1, and 2 above are represented by a single octet. The key used for encryption is derived from SKEYID_e in an algorithm-specific manner. To authenticate either exchange the initiator of the protocol generates HASH_I(SIG_I) and the responder generates HASH_R(SIG_R) where: HASH_I = prf(SKEYID, g^xi | g^xr | CKY-I | CKY-R | SAi_b | IDii_b ) HASH_R = prf(SKEYID, g^xr | g^xi | CKY-R | CKY-I | SAi_b | IDir_b ) SAi_b is the entire body of the SA payload (minus the ISAKMP generic header), all proposals and all transforms offered by the Initiator. CKY-I and CKY-R are the Initiator's cookie and the Responder's cookie, respectively, from the ISAKMP header. g^xi and g^xr are the Diffie-Hellman public values of the initiator and responder respectively. Protection d’identité et calcul de clé dans le protocole IKE, en phase 1, preshared key main mode. Pascal Urien – Télécom Paris– Introduction à la Cyber Sécurité"}
{"pack_id": "french_pack", "section_title": "TLS/SSL", "page": 69, "chunk_id": "french_pack_69_0", "content": "69 Mode Transport et Tunnel dans le protocole ESP, IPSEC En tête du protocole ESP. TLS/SSL Le protocole SSL/TLS délivre des services analogues à IPSEC, mais au niveau applicatif. Cependant le mécanisme d’établissement du secret partagé maître repose généralement sur des clés RSA et des certificats X509. De manière classique le certificat du serveur est vérifié relativement à une chaîne de confiance (suite de certificats délivrés à partir d’un certificat racine). Côté client les points critiques sont l’installation d’un nouveau Pascal Urien – Télécom Paris – Introduction à la Cyber Sécurité"}
{"pack_id": "french_pack", "section_title": "TLS/SSL", "page": 70, "chunk_id": "french_pack_70_0", "content": "70 certificat d’une autorité de certification, et la vérification des certificats serveurs. Client Server Client hello (ClientRandom) Server Hello (ServerRandom) Server CA Certificate KPubS KPubCA [CertificateRequest] ServerHelloDone Client [Certificate] KPubC ClientKeyExchange {PreMasterSecret}K PubS [CertificateVerify] {MessagesDigest} K PrivC ChangeCipherSpec (Encrypted+Signed MessagesDigest) Finished ChangeCipherSpec (Encrypted+Signed MessagesDigest) Finished MasterSecret= PRF(PreMasterSecret,\"master secret\", ClientRandom|ServerRandom) Clés = PRF(MasterSecret, Etiquette,ServerRandom|ClientRandom) Ouverture d’une session TLS 1.0, 1.1, 1.2 Pascal Urien – Télécom Paris– Introduction à la Cyber Sécurité"}
{"pack_id": "french_pack", "section_title": "TLS1.3", "page": 71, "chunk_id": "french_pack_71_0", "content": "71 TLS1.3 TLS 1.3 gère trois modes d'échange de clés: - (EC)DHE: Echange Diffie-Hellman (DH) dans des corps finis ou des courbes elliptiques - Pre-Shared-Key (PSK) uniquement: clé pré-partagée sans échange DH - Pre-Shared-Key (PSK) avec (EC)DHE: clé pré-partagée et échange DH Il existe deux alternatives pour authentifier les serveurs: - L’usage d’un certificat (message Certificate) serveur et d’une clé privée associée, qui calcule une signature (message CertificateVerify) permettant d’authentifier l’échange DH. _ La mise œuvre d’un secret pré-partagé (PSK) utilisé dans les procédures de calculs des clés. Les deux messages en clair sont ClientHello et ServerHello, chacun comportant une clé publique (aG, bG) permettant de calculer un secret DH abG (en notation additive). Un premier canal sécurisé est établi pour les messages handshake. Un deuxième canal est mis en place pour les données applicatives. TLS1.3 utilise des canaux sécurisés de type Authenticated Encryption with Associated Data (AEAD), tels que AES-CCM ou AES-CGM. L’entête du paquet record en clair (soit 5 octets) constitue les données associées authentifiées, la charge est chiffrée et authentifiée. Pascal Urien – Télécom Paris – Introduction à la Cyber Sécurité"}
{"pack_id": "french_pack", "section_title": "TLS1.3", "page": 72, "chunk_id": "french_pack_72_0", "content": "72 PSK -> HKDF-Extract = Early Secret | +-----> Derive-Secret(., \"ext binder\" | \"res binder\", \"\") | = binder_key | +-----> Derive-Secret(., \"c e traffic\", ClientHello) | = client_early_traffic_secret | +-----> Derive-Secret(., \"e exp master\", ClientHello) | = early_exporter_master_secret v Derive-Secret(., \"derived\", \"\") | v (EC)DHE -> HKDF-Extract = Handshake Secret | +-----> Derive-Secret(., \"c hs traffic\", | ClientHello...ServerHello) | = client_handshake_traffic_secret | +-----> Derive-Secret(., \"s hs traffic\", | ClientHello...ServerHello) | = server_handshake_traffic_secret v Derive-Secret(., \"derived\", \"\") | v 0 -> HKDF-Extract = Master Secret | +-----> Derive-Secret(., \"c ap traffic\", | ClientHello...server Finished) | = client_application_traffic_secret_0 | +-----> Derive-Secret(., \"s ap traffic\", | ClientHello...server Finished) | = server _application_traffic_secret_0 Pascal Urien – Télécom Paris– Introduction à la Cyber Sécurité"}
{"pack_id": "french_pack", "section_title": "Kerberos", "page": 73, "chunk_id": "french_pack_73_0", "content": "73 Au sujet du Phishing L’apparition des attaques dites de Phishing, dont le but est de collecter des numéros de carte bancaire ou des informations permettant d’accéder à des comptes bancaires résulte de deux faiblesses clés de l’Internet: 1) La difficulté à authentifier au niveau TCP/IP les serveurs distants (DNS non sécurisé, paquet IP non authentifié, détournement de session TCP…), et 2) La difficulté de la vérification des certificats serveurs. Kerberos Kerberos est un protocole développé par le MIT (Massachusetts Institute of Technology) dont les deux versions majeures sont v4 et v5. La version 4 s’appuie sur l’algorithme cryptographique DES; La version 5 supporte 3xDES et AES. C’est un standard IETF, RFC 1510 (kerberos v5, 1993). Kerberos utilise un paradigme à base de tickets établissant une preuve d’identité entre deux entités (un utilisateur et un service). Le système comporte trois classes de composants, le client, le KDC (Key Distribution Center), et des serveurs d’applications. Le KDC regroupe un serveur d’authentification (AS), un serveur de tickets (TGS, Ticket Granting Service) et une base de données clients. Les messages sont codés selon la syntaxe ASN.1 Le Realm est un nom de domaine lié (example.com) à une autorité d’authentification. Un utilisateur appartient à un domaine lorsqu’ il partage un mot de passe ou une clé cryptographique avec ce dernier. Le Principal est la clé d’identification dans la base de données client. Le Ticket est une donnée délivrée par le serveur d’authentification qui comprend: - Une zone d’information chiffrée avec la clé de l’utilisateur, comportant une date de validité du ticket et une clé de session du service. - Une zone d’information chiffrée avec la clé du service, incluant une date de validité et une clé de session du service; La base de données du KDC stocke toutes les informations associées à un principal (mot de passe, clé, etc…). Pascal Urien – Télécom Paris – Introduction à la Cyber Sécurité"}
{"pack_id": "french_pack", "section_title": "PPTP-EAP", "page": 74, "chunk_id": "french_pack_74_0", "content": "74 Le serveur d’authentification réalise l’authentification d’un utilisateur à l’aide de son mot de passe; il délivre un ticket d’authentification, Ticket Granting Ticket, ou TGT, identifié par un principal. Le Ticket Granting Server (TGS) génère des tickets de service pour un utilisateur authentifié, c’est-à- dire muni d’un TGT. La clé de session (Session Key) est dans le cas d’un utilisateur du KDC une clé cryptographique (DES, 3xDES, AES) déduite de son mot de passe; et dans le cas d’un service elle est générée par le KDC. Un authenticator est une structure d’authentification comportant l’identité de l’utilisateur et une date chiffrée avec la clé de session service. Un authenticator lié à un ticket de service évite la duplication illicite de ticket. La présence d’un authenticator «frais» prouve la connaissance de la clé de session de service. PPTP-EAP Le protocole PPTP (Point To Point Tunneling Protocol) est d’origine Microsoft, il est détaillé par la RFC 2637. Une trame PPP (Point To Point Protocol) est transportée sur IP à l’aide du protocole GRE (Generic Routing Encapsulation) développé par CISCO. Le protocole PPP utilise par exemple EAP (Extensible Authentication Protocol) pour l’authentification la génération de clés de chiffrement. La double procédure EAP PEAP/MSCHAPv2 soit l’établissement d’un premier tunnel TLS, puis un échange de messages selon MSCHAPv2 protégeant un mot de passe est largement utilisée dans ce contexte. Pascal Urien – Télécom Paris– Introduction à la Cyber Sécurité"}
{"pack_id": "french_pack", "section_title": "SSH", "page": 75, "chunk_id": "french_pack_75_0", "content": "75 SSH La première version de SSH (SSH-1) fut conçue par Tatu Ylönen, à Espoo, en Finlande en 1995. La version suivante a été nommée SSH-2. Le groupe de recherche de l'IETF secsh a défini en janvier 2006 le standard Internet SSH-2, par un jeu de RFCs RFC 4251, Secure Shell (SSH) Protocol Architecture RFC 4253, The Secure Shell (SSH) Transport Layer Protocol RFC 4252, The Secure Shell (SSH) Authentication Protocol RFC 4254, The Secure Shell (SSH) Connection Protocol Le document \"Protocol Architecture\" (RFC 4251) décrit les différents éléments de SSH: - Les messages SSH sont transportés par des paquets TLP (Transport Layer Protocol). TLP réalise l’authentification du serveur, la confidentialité et l’intégrité des messages SSH. Le calcul des clés est basé sur un échange Diffie-Hellman, dont les paramètres sont certifiés par une signature DSA généré par le serveur. - Le bloc User Authentication Protocol, est en charge de l’authentification du client, généralement grâce à un couple login/password, mais il est possible d'utiliser un certificat et la clé privé associée. Les messages sont acheminés via le canal sécurisé mis en place par TLP. - Le Connection Protocol, multiplexe plusieurs canaux logiques (Shell X11...) dans le tunnel sécurisé. Les messages sont transportés par le User Authentication Protocol. Pascal Urien – Télécom Paris – Introduction à la Cyber Sécurité"}
{"pack_id": "french_pack", "section_title": "Limitation des protections offertes par les pare-feu.", "page": 76, "chunk_id": "french_pack_76_0", "content": "76 Limitation des protections offertes par les pare-feu. Filtre Interne Bastion Filtre DMZ Externe Un pare-feu48 filtre les paquets IP échangés avec un intranet en analysant l’entête d’un paquet IP, celui du protocole transporté, et parfois certains paramètres de l’application (mode proxy ou à états). Il y a un compromis entre la sévérité du filtrage (paquets IP fragmentés, paquets ICMP ou UDP) et le degré de fonctionnalité/convivialité que l’on veut obtenir. Cependant un pare-feu ne protège pas des attaques internes, par exemple un cheval de Troie peut utiliser une session TCP pour échanger de l’information par émission de données à l’extérieur des fenêtres de réception du destinataire, ou par réémissions de segments déjà acquittés. De manière analogue aux forteresses médiévales, on peut créer une zone démilitarisée (DMZ) entre deux pare-feu, la DMZ accueille les serveurs 48 Chuck Semeria, “Internet Firewalls and Security”, 1996 Pascal Urien – Télécom Paris– Introduction à la Cyber Sécurité"}
{"pack_id": "french_pack", "section_title": "Au sujet des normes Critères Communs (CC)", "page": 77, "chunk_id": "french_pack_77_0", "content": "77 d’information de l’entreprise et un Bastion, un serveur spécialement sécurisé pour la gestion d’information critiques accessibles depuis l’extérieur. Les réseaux externe et externe accèdent au Bastion et au serveur d’information. Le Bastion peut par exemple gérer le NAT du réseau interne. Au sujet des normes Critères Communs (CC) Les normes ISO 15408 dénommées Critères Communs visent à qualifier la sécurité de produits tels que microcontrôleurs sécurisés, cartes à puce ou firewalls. Elles sont organisées en trois parties, introduction (partie 1), exigences fonctionnelles de sécurité (partie 2) et exigences d’assurances de sécurité (partie 3). Une évaluation CC est une procédure qui décerne un EAL (Evaluation Assurance Level) selon un document de référence, la cible de sécurité (Security Target). La cible de sécurité liste les exigences fonctionnelles de sécurité (CC partie 2, par exemple identification et authentification - classe FIA) et les exigences d’assurance de qualité (CC partie 3, par exemple les tests – classe ATE) du produit, c’est-à-dire le TOE (Target Of Evaluation) dans la terminologie CC. Les exigences fonctionnelles et d’assurances sont classées selon une hiérarchie à trois niveaux: classe-famille-composants. De manière optionnelle le TOE peut être décrit dans un Protection Profile (ou PP) qui est commun à un ensemble de produits dont les fonctionnalités et les exigences de sécurité sont similaires. Pascal Urien – Télécom Paris – Introduction à la Cyber Sécurité"}
{"pack_id": "french_pack", "section_title": "Au sujet des normes Critères Communs (CC)", "page": 78, "chunk_id": "french_pack_78_0", "content": "78 Les niveaux EAL se répartissent en sept catégories - EAL 7 conception formelle vérifiée et produit testé - EAL 6 conception semi-formelle vérifiée et produit testé - EAL 5 produit conçu de façon semi-formelle et testé - EAL 4 produit conçu, testé, revu de façon méthodique - EAL 3 produit testé et vérifié de façon méthodique - EAL 2 produit testé structurellement - EAL 1 produit testé fonctionnellement Le niveau augmenté (noté +) indique que lors de l’évaluation des informations complémentaires, telles que les codes sources, sont connues. Les niveaux de produit bancaire sont par exemple EAL4+ ou EAL5, des composants logiciels complexes EAL1. Pascal Urien – Télécom Paris– Introduction à la Cyber Sécurité"}
{"pack_id": "french_pack", "section_title": "Programmes Malveillants, Virus, Vers", "page": 79, "chunk_id": "french_pack_79_0", "content": "79 Heuristiques d'Attaque L’intrusion. L’intrusion consiste à obtenir des autorisations (privilèges) illicites sur un système informatique afin d’accéder à des ressources (fichiers) ou de contrôler certaines ressources (accès réseaux…). Elle peut être menée par un utilisateur licite d’un système ou à l’aide de sessions réseaux. L’intrusion non autorisée de logiciel peut prendre la forme d’un virus, d’un ver, ou d’un cheval de Troie. James P. Anderson49 a proposé dans les années 80 une classification à trois niveaux: - La mascarade. Exploitation illégitime d’un compte utilisateur (cassage de mot de passe …) - L’usurpation. Un utilisateur légitime qui étend ses privilèges. - L’usage clandestin. Le contournement des barrières de sécurité, la prise de contrôle du système. La détection des intrusions est basée sur des collectes d’informations (audit, sondes réseaux…), sur la détection d’anomalies statistiques (moyenne, écart type, filtres bayésien…) ou la corrélation d’évènements (signature des attaques réseaux à l’aide de formules booléennes…). Programmes Malveillants, Virus, Vers Les programmes malveillants sont de multiples natures, portes dérobées (backdoors, fonctionnalisées cachées), bombes logiques, chevaux de Troie, Virus, Vers. Un virus est un programme qui se duplique, on distingue classiquement quatre phases : la phase dormante, la propagation, le déclenchement, l’exécution. Il se caractérise par un code spécifique et un comportement (actions) typique sur un système informatique. 49 James P. Anderson, Computer Security Threat Monitoring and Surveillance, James P. Anderson Co, Fort Washington, PA (1980). Pascal Urien – Télécom Paris – Introduction à la Cyber Sécurité"}
{"pack_id": "french_pack", "section_title": "Programmes Malveillants, Virus, Vers", "page": 80, "chunk_id": "french_pack_80_0", "content": "80 Les virus sont répartis50 selon quatre catégories principales, les virus systèmes, les virus programmes, les virus interprétés, et les vers. Les virus systèmes sont dominants au début des années 90. Ils s'installent dans les secteurs de BOOT des disquettes ou dans les MBR (Master Boot Record) des disques durs. Les virus programmes sont stockés dans des fichiers exécutables et se propagent dans de multiples fichiers. Les virus interprétés se propagent dans des macros (par exemple utilisés dans Microsoft Office) ou des scripts (par exemple JavaScript ou VBSript). Un vers est un programme malveillant qui se propage à travers le réseau. Les anti-virus mettent en œuvre des méthodes de détections basées sur : - la recherche de signature (un ensemble d'instructions, c'est une méthode peu efficace avec des virus polymorphes) - la recherche générique (recherche de sous ensembles d'instructions) - la recherche heuristique (ensemble d'instructions singulières et suspectes) - le monitoring d'un programme (détection d'opérations non autorisées ou suspectes) Le premier vers (IBM Christmas Tree) a été écrit par un étudiant Ouest Allemand en 1987 et diffusé sur la messagerie VNET. Un courrier comportait un programme attaché christma.exec qui affichait des vœux et rediffusait le message à l'ensemble du carnet d'adresse du poste client. 50 Vers et Virus, François Paget, DUNOD 2005 Pascal Urien – Télécom Paris– Introduction à la Cyber Sécurité"}
{"pack_id": "french_pack", "section_title": "Au sujet des botnets", "page": 81, "chunk_id": "french_pack_81_0", "content": "81 Exemple le ver Blaster (2003) Principe du vers «Blaster» (2003) Au sujet des botnets Le terme botnet51 est la contraction des mots \"roBOT\" et \" NETwork\", soit littéralement réseau de robots. Un robot est un programme effectuant des actions automatiques sur un serveur. Les premiers robots ont vu le jour dans le monde des opérateurs IRC. La dérive fut d’utiliser ces outils d’administration afin de prendre l’avantage lors de compétition pour le contrôle d’un canal IRC. Le plus connu de ces outils est Eggdrop, apparu en 1993. Le premier botnet W32/Pretty.worm ciblait des systèmes Windows dans les années 2000. Un botnet contamine un parc de systèmes informatiques, qualifiés de zombies. Le nombre de machines impliqués peut être de l’ordre de plusieurs millions, par exemple pour le botnet Zeus. Il se propage selon différentes techniques telles failles logicielles de systèmes d’exploitation, scripts ou programmes malveillants. Il utilise des canaux de commandes variés par exemple réseaux P2P ou échanges HTTP. Les botnets sont utilisés pour générer des SPAMs ou des attaques de type dénis de service (DDOS). 51 F. Ducrot, M. Danho, X. Marronnier, SÉCURITÉ INFORMATIQUE, numéro 61, CNRS, octobre 2007 Pascal Urien – Télécom Paris – Introduction à la Cyber Sécurité"}
{"pack_id": "french_pack", "section_title": "Le buffer overflow", "page": 82, "chunk_id": "french_pack_82_0", "content": "82 Au sujet des rootkits Un rootkit est un logiciel malveillant furtif, c’est-à-dire qu’il masque son activité dans un système d’exploitation (logs, liste des processus actifs, communications réseaux …). Il peut s'installer au sein d'un autre logiciel, une bibliothèque ou dans le noyau d'un système d'exploitation. Les premiers rootkits sont apparus en 1994 sur Linux et SunOS4; en 1998, sous Windows, (Back Orifice) et en 2004 sous Mac OS (X, WeaponX5). Le buffer overflow Le buffer overflow consiste à modifier malicieusement la mémoire d’un programme, typiquement lors de l’écriture d’une information localisée dans un paramètre d’appel du programme, ou lors de l’écriture de données reçues via le réseau (c’est-à-dire à l’aide des bibliothèques de sockets). Le langage C utilise des chaines (char[]) de caractères dont la marque de fin est un octet nul. Les fonctions qui manipulent ces chaines (notées avec un préfixe s, par exemple strcpy,…), peuvent modifier une plage mémoire supérieure à la taille allouée par le concepteur du programme. Par exemple char name[12] ; char *information; // la marque de fin est un octet nul strcpy(name, information) ; Si la taille de information dépasse 12 octets, la mémoire allouée pour name est insuffisante, en conséquence une partie du contenu du pointeur information modifie la mémoire du programme de manière imprévue. Les effets espérés par les buffer overflow dans la pile d’exécution sont répartis en trois classes principales - La modification d’une variable mémoire, proche de la zone mémoire occupée par le buffer, par exemple pour l'exploitation de \"use-after-free vulnerabilities\". - la modification de l’adresse de retour du programme localisée dans la pile, le but étant l’exécution d’un code malveillant contenu dans un paramètre d’appel ou dans une information reçue via le réseau. - la modification d’un pointeur de fonction afin d’exécuter un code préalablement injecté. Les effets des buffer overflow dans la zone mémoire dite heap (ou tas) sont différents, car cette dernière est utilisée par les fonctions de type malloc réalisant les allocations dynamiques de mémoire. Pascal Urien – Télécom Paris– Introduction à la Cyber Sécurité"}
{"pack_id": "french_pack", "section_title": "Le buffer overflow", "page": 83, "chunk_id": "french_pack_83_0", "content": "83 Le format ELF (Executable Linking Format), utilisé par de nombreux systèmes UNIX, (et Windows) est un exemple de l'architecture dite de Von Neumann dans laquelle le code et les données sont logés dans une mémoire commune. Il existe un autre concept, l'architecture d'Harvard, dans lequel le code et les données sont stockés dans des mémoires distinctes; cette dernière approche est usuelle dans les environnements de type microcontrôleurs. Le format ELF définit cinq zones de mémoires virtuelles pour un programme, text pour le code, data pour les données initialisées, bss pour les données non initialisées, la pile (stack) et le tas (heap) qui est la zone mémoire restante intercalée entre pile et données. Le shellcode désigne un programme qui exécute un ensemble de commandes du shell. Il est possible d’exécuter un shell dans un programme, à l’aide d’un appel système spécifique; un code malicieux exploite cette fonctionnalité. Une attaque consiste dans ce cas à injecter un shellcode puis à l’exécuter via des techniques de buffers overflow. En 1988, un étudiant du MIT, Robert Tappan Morris, réalisa la première mise en œuvre offensive sur internet des techniques buffer overflow, nommée Morris worm. L'ouvrage52 \"Techniques de Hacking\", de Jon Erickson, détaille les techniques d'exploitation de buffer overflow et l'injection de code en particulier de Shell Code. La zone de données écrite à partir de l'adresse de base du buffer comporte un code malicieux (sans octet nul) et une série d'instructions NOP (no operation) qui écrasent l'adresse de retour du compteur programme (PC) mémorisé dans la pile. Ce code tente une escalade de privilège (via la procédure setresuid()), afin d'exécuter un shell (tel que /bin/sh) en mode superviseur (root). Le Return-Oriented Programming (ROP) est une technique d'attaque mettant à profit des fragments de code se terminant par l'instruction return. 52 \"Techniques de Hacking\", Jon Erickson, Pearson, 2009-2012 Pascal Urien – Télécom Paris – Introduction à la Cyber Sécurité"}
{"pack_id": "french_pack", "section_title": "Stratégie de défense du système Windows (2005)", "page": 84, "chunk_id": "french_pack_84_0", "content": "84 Le Fuzzing On peut également citer les techniques fuzzing d’attaques de protocoles réseaux dont le principe est d’injecter des données aléatoires dans les logiciels de traitement des piles (stack) de communication. L'injection SQL L’injection SQL consiste à importer des données qui sont des instructions du langage de requêtes SQL. Par exemple un script PHP intègre directement dans une requête SQL, un login et un mot de passe renseignés dans un formulaire (HTML). Puisque ces paramètres sont des éléments du langage, ils peuvent modifier malicieusement la requête; il devient en conséquence possible de valider un mot de passe erroné. Le Cross Site Scripting CSS Le Cross Site Scripting (XSS) consiste à injecter un script (javascript, applet, object) dans un formulaire HTML, dans un contexte ou l’application WEB affiche des contenus interactifs (blogs, etc…) pour ses utilisateurs. Le script posté par l’attaquant sera par la suite téléchargé puis exécuté par les navigateurs des clients (victimes) de l’application WEB. Cross Site Request Forgery CSRF Une attaque CSRF force le navigateur d'une victime authentifiée à envoyer une requête HTTP forgée, comprenant le cookie de session de la victime, ainsi que toute autre information automatiquement inclue, à une application web vulnérable. Autour de la Sécurité des Systèmes d'Exploitation Stratégie de défense du système Windows (2005) Voici un bref résumé de la stratégie de sécurité d’un grand éditeur de logiciels (Microsoft, RSA Security 2005). - Conception de systèmes d’exploitation résistant aux attaques (resilency), en particulier en introduisant la notion de comportements (behavior) basés sur des politiques d’usage de services. - Usage généralisé d’IPSEC et des VPNs pour les liens inter-entreprises. Pascal Urien – Télécom Paris– Introduction à la Cyber Sécurité"}
{"pack_id": "french_pack", "section_title": "Principes de sécurité du système Android", "page": 85, "chunk_id": "french_pack_85_0", "content": "85 - Introduction des critères communs (quality) pour la conception de programme (Safe Programming).! - Généralisation de l’usage des pare-feu applicatifs. - Lutte contre le SPAM (?) - Concept du SD3+C (Secure by Design, Default, Deployment, Communications) - Authentification à deux facteurs des utilisateurs, à l’aide de cartes à puce ou de jetons. - Participation des utilisateurs à la politique de sécurité grâce à l’éducation ou à la répression. Principes de sécurité du système Android Android est un système d’exploitation crée par la société Android Inc. rachetée en 2005 par GOOGLE. Il est aujourd’hui largement déployé dans les mobiles. Le système Android s’appuie sur un noyau UNIX. L’image binaire du système nommée ROM, contient le noyau, les librairies natives, l’environnement de la Dalvik Virtual Machine (DVM), le framework Java (JNI), et les applications. Une application Android comporte au plus quatre composants : l’activité, le service, le fournisseur de contenu et le receveur de broadcast. Les composants peuvent être déclarés publics ou privés. Les composants activités, services, et broadcast receivers, sont activés par un message asynchrone dénommé Intent. La sécurité android repose sur quatre piliers : - Les SANDBOXs Unix, associés aux processus - Les permissions. - La signature des applications - le chiffrement des fichiers. Un SANDBOX est un environnement logiciel qui contrôle les accès d’une application aux ressources d’un système informatique géré par un système d’exploitation. Pour le noyau Linux associé à Android, une application possède un user- id, un id de groupe et un id de groupe secondaire. Chaque application Pascal Urien – Télécom Paris – Introduction à la Cyber Sécurité"}
{"pack_id": "french_pack", "section_title": "Intégrité du code, obfuscation, TPM", "page": 86, "chunk_id": "french_pack_86_0", "content": "86 possède des droits d’accès en lecture, écriture et exécution. C’est une politique de contrôle d’accès discrétionnaire (DAC). Le système Unix possède un compte root dont le user-id est 0, et qui possède tous les droits. Chaque Application possède sa propre instance de Dalvik Virtual Machine (DVM). Deux applications signées par une même clé privée peuvent partager un Sandbox identique. Le fichier Manifest.xml définit la structure d’une application, c’est-à-dire la liste de ses composants. Il contient également les demandes de permission d’accès aux ressources du mobile et décrit les Intents traités par l’application. C’est le gestionnaire de la politique de sécurité de l’application. Chaque application (.apk) doit être signée. Sous Eclipse on utilise les outils Keytool pour la génération de clés RSA dans un magasin de certificats (keystore), et Jarsigner pour la signature d’une application. Un certificat peut être auto-signé. Intégrité du code, obfuscation, TPM Certaines attaques intrusives sont liées à la possibilité de modifier le code d’un programme soit avant son exécution (modification du fichier exécutable) soit au cours de son exécution (point d’arrêts en mode debug, modification de certaines zones mémoire, pose de bretelles….). L’analyse d’un code lors de son exécution révèle la clé associée à un algorithme cryptographique. Cependant des techniques d’embrouillage de code (obfuscation) ou de WBC (White Box Cryptography) peuvent rendre ces attaques plus difficiles. Le groupe Trusted Computing Group (TCG) a défini une architecture sécurisée pour les ordinateurs personnels basés sur un module hardware sécurisé le TPM (Trusted Platform Module). Dans ce modèle l’intégrité du système (bibliothèques essentielles du système d’exploitation,…) est mesurée (integrity measurement) par une empreinte (SHA-1, 160 bits) stockée dans une puce de silicium résistante aux attaques (tamper resistant). L’accès à ce dispositif est contrôlé par des secrets partagés symétriques. Le TPM s’appuie sur un arbre de clés RSA, dont l’accès à chaque nœud est protégé par une clé symétrique. Remarquons à ce propos qu’une clé RSA de modulo N peut chiffrer les paramètres d’une autre clé RSA de modulo n=pq et d’exposants public et privé d,e tels que p<N, q<N, d<N, e<N. L’intégration du TPM dans le système d’exploitation Windows"}
{"pack_id": "french_pack", "section_title": "Intégrité du code, obfuscation, TPM", "page": 86, "chunk_id": "french_pack_86_1", "content": "TPM s’appuie sur un arbre de clés RSA, dont l’accès à chaque nœud est protégé par une clé symétrique. Remarquons à ce propos qu’une clé RSA de modulo N peut chiffrer les paramètres d’une autre clé RSA de modulo n=pq et d’exposants public et privé d,e tels que p<N, q<N, d<N, e<N. L’intégration du TPM dans le système d’exploitation Windows s’applique aux trois points suivants: Pascal Urien – Télécom Paris– Introduction à la Cyber Sécurité"}
{"pack_id": "french_pack", "section_title": "Cas d'usage: la sécurité des consoles de jeu XBOX (2002)", "page": 87, "chunk_id": "french_pack_87_0", "content": "87 - Le Secure Boot. Le premier programme amorce est stocké dans le TPM. Le boot est une succession de programme Pi tels que Po est contenu dans le TPM, chaque Pi est associé à une empreinte Hi enregistrée dans le TPM, le programme Pi-1 charge Pi et vérifie son empreinte Hi. - Le chiffrement du contenu du disque dur (bitlockerTM) à l’aide d’une clé maître (VEK, Volume Encryption Key) stockée dans le TPM. - Le contrôle de l’intégrité des PCs au moment de leur connexion réseau (NAP, Network Access Protection). Cas d'usage: la sécurité des consoles de jeu XBOX (2002) Secure Boot, XBOX 1.1 Andrew Huang a publié53 en 2002 le reverse engineering de la sécurité de la console de jeu XBOX 1.0. Une ROM de faible capacité (512 octets) loge un code RC4, un interpréteur de commande, et réalise le déchiffrement et le calcul du hash d'un code de boot de 2ième niveau stocké dans une mémoire flash. Il est important de noter d'un part que lorsque la valeur d'un hash de référence est contenue dans la ROM, le contenu du boot de 2ième niveau ne 53 Hacking the Xbox An Introduction to Reverse Engineering HACKING THE XBOX Andrew \"bunnie\" Huang, 2002 Pascal Urien – Télécom Paris – Introduction à la Cyber Sécurité"}
{"pack_id": "french_pack", "section_title": "Exemple de classification des attaques pour les systèmes embarqués.", "page": 88, "chunk_id": "french_pack_88_0", "content": "88 peut être modifié, et d'autre part que le stockage de la clé cryptographique (RC4) est problème critique. En octobre 2002 Andy Green a publié une analyse de la sécurité de la console de jeu XBOX 1.1. La ROM stocke et vérifie le hash d'un code stocké en mémoire flash. Ce dernier loge une clé publique et les ressources logicielles nécessaires pour la vérification de signature RSA; il déchiffre et exécute un code de boot de 2ième niveau , dont il vérifie l'intégrité. De manière générale un secure boot consiste en une succession d'exécution de blocs logiciels, optionnellement chiffrés, après vérification de leur intégrité. Exemple de classification des attaques pour les systèmes embarqués. S. Ravi et al, 2004 Pascal Urien – Télécom Paris– Introduction à la Cyber Sécurité"}
{"pack_id": "french_pack", "section_title": "Secure Elements", "page": 89, "chunk_id": "french_pack_89_0", "content": "89 Secure Elements Un secure element est un microcontrôleur sécurisé54 55 (de surface inférieure à 5x5 mm2), muni d’une interface de communication (série, USB,…) qui résiste à des attaques physiques et logiques. Bien que des composants de 16 ou 32 bits existent, le CPU le plus fréquemment utilisé est basé sur une architecture 8 bits (par exemple le 6502, microprocesseur de l’Apple II). La taille des mémoires embarquées est de l’ordre d’une dizaine de KB pour la RAM, 100KB pour la FLASH qui contient le code des applications, et quelques centaines de 100Ko pour la ROM qui stocke un système d’exploitation. Scalable EEPROM RAM Hidden Event Register Clock UART 400 KB 16 KB ROM Code/Data 80KB Voltage/Filter Voltage 32 bits CPU Clock With Reset Memory Temperature 32 bits bus Management And Protection Unit Voltage 16-bit Crypto DES Random Regulator Timers Accelerator Accelerator Number RSA 1408 bit Generator Les attaques physiques comprennent;  La pose de microsondes à la surface du circuit. L’attaquant désire obtenir les secrets stockés dans la mémoire non volatile, par exemple en l’isolant la mémoire du reste de la puce sécurisé, et en produisant les signaux électriques nécessaires à sa lecture;  Le reverse engineering, reconstruction du layout de la puce, visualisation du code ROM, et plus généralement identification des contres mesures;  L’injection de faute. Grâce à des interactions physiques (coupure d’alimentation, glitches de tension, injection laser, etc..) on perturbe le fonctionnement normal du microcontrôleur, dans le but de produire des 54 Smart Cards - The developer’s Kit. Timothy M. Jurgensen, Scott B. Guthery. Editions Prentice Hall 55 Smart Card handbook. W. ERankl , W. Effing. Editions Willey Pascal Urien – Télécom Paris – Introduction à la Cyber Sécurité"}
{"pack_id": "french_pack", "section_title": "Secure Elements", "page": 90, "chunk_id": "french_pack_90_0", "content": "90 erreurs permettant de déduire la clé d’un algorithme cryptographique ou de contourner certaines procédures logicielles (code PIN,…). Les contre mesures physiques intègrent le chiffrement du bus système, le chiffrement des mémoires, la détection de paramètres de fonctionnement (température, alimentation, fréquence) anormaux, la perte d’intégrité physique (treilli métallique actif), l’absence de rayonnement radio (plan de masse métallique), un design désordonné (fuzzing design) pour masquer les structures fonctionnelles (mémoires,…) Structure d’un système d’exploitation de secure element56 Les attaques logiques comprennent  Les attaques temporelles (moyenne, écart type). Certaines implémentations d’algorithmes présentent des temps de calcul différents en fonction des valeurs d’entrée et de la clé utilisée.  Les attaques par corrélation statistique, telles que Simple Power Attack (SPA) ou Differential Power Analysis (DPA). Un processeur réalise un algorithme à l’aide d’une suite d’opérations nécessairement différentes en fonction de la clé. Ainsi un algorithme utilisant une clé parmi 2p possibles, traite au moins p informations différentes pour une clé particulière. Il produit donc des signaux électriques (par exemple puissance consommée) ou radioélectriques qui sont corrélés à la clé opérationnelle. Beaucoup de secure elements intègrent57 une machine virtuelle java (JVM) qui exécute des applications écrites en javacard. Les applications sont 56 MASSC: a generic architecture for multi application smart cards. IEEE Micro 19(5): 52-61 (1999) Pascal Urien – Télécom Paris– Introduction à la Cyber Sécurité"}
{"pack_id": "french_pack", "section_title": "3 Tim Berners-Lee. \"The World Wide Web\", Poster, ACM Hypertext", "page": 91, "chunk_id": "french_pack_91_0", "content": "91 chargées via un canal sécurisé (Secure Channel), normalisé par les standards Global Platform. Trusted Execution Environment Un processeur TEE, par exemple TrustZone58 de la société ARM, réalise la virtualisation d’un processeur permettant la création de deux espaces de traitement de l’information le \"Normal Word\" et le \"Secure World\". Chacun de ces modes de fonctionnement possède un banc de registres séparé et des mécanismes d’interruption différents. Cependant le CPU et les mémoires internes (ROM, SRAM) sont communs aux deux mondes. Une troisième entité, le Monitor gère les changements de contexte entre le \"Normal Word\" - NW- et le \"Secure World\" -SW- à l’aide d’instructions spécifiques (Secure Monitor Call, SMC); elle se comporte de fait comme un hyperviseur qui réalise grâce à la technique de virtualisation, une isolation des espaces dits normaux ou sécurisés. Les tailles mémoire internes sont de l’ordre de 10 Ko pour la ROM et 128 Ko pour la SRAM. Ces capacités limitées expliquent la compétence native des industriels de la carte à puce pour la conception de systèmes d’exploitation sécurisés compatibles avec ces modestes ressources. D’un point de vue physique, et contrairement aux Secure Elements, le processeur n’implémente pas de contremesures matérielles. (\"Hardware techniques and processes used for smartcards are impractical for standard Soc designs…\"). La technologie SoC permet cependant d’intégrer des blocs cryptographiques démunis cependant de protections hardware. 57 Java CardTM Technology for Smart Cards. Zhiqun Chen. Editions Addison Wesley 58 ARM Security Technology, Building a Secure System using TrustZone® Technology\", 2009, http://infocenter.arm.com/help/topic/com.arm.doc.prd29-genc- 009492c/PRD29-GENC-009492C_trustzone_security_whitepaper.pdf Pascal Urien – Télécom Paris – Introduction à la Cyber Sécurité"}
{"pack_id": "french_pack", "section_title": "Hardware Secure Module (HSM)", "page": 92, "chunk_id": "french_pack_92_0", "content": "92 Les mémoires externes non volatiles (ROM, FLASH) ou volatiles (DRAM…) sont partagées par les deux mondes. Une entité MMU (Memory Management Unit) réalise les partitions nécessaires à leur virtualisation; des protections cryptographiques (chiffrement et intégrité) sont nécessaires pour la sécurité des informations stockées par le \"Secure World\". Le MMU assure également les partitions mémoires internes au SoC. La référence59 détaille une injection de code arbitraire dans l'environnement de confiance QSEE, exploitant une faille de type buffer overflow détectée dans le trustlet Widevine. Hardware Secure Module (HSM) Un Hardware Secure Module est un système informatique \"durci\", qui résiste à des attaques physiques, avec des assurances de sécurité de EAL1 à EAL4, selon une échelle Critère Commun (CC) qui comporte 7 niveaux. Sa fonction est d’exécuter des algorithmes cryptographiques symétriques ou asymétriques. Il est conçu par exemple pour effacer les clés cryptographiques lors d’une intrusion physique. Typiquement son démarrage nécessite une carte à puce qui contient les clés nécessaires au déchiffrement des mémoires stockant les secrets. Le standard FIPS 140-2 définit quatre niveaux de sécurité pour les HSM Le niveau 1 utilise un algorithme cryptographique normalisé, exécuté sur un système d’exploitation standard. Une carte de chiffrement peut être mise en œuvre. 59 https://bits-please.blogspot.fr/2016/05/qsee-privilege-escalation- vulnerability.html Pascal Urien – Télécom Paris– Introduction à la Cyber Sécurité"}
{"pack_id": "french_pack", "section_title": "Intel SGX", "page": 93, "chunk_id": "french_pack_93_0", "content": "93 Le niveau 2 utilise un boitier physique fermé et sécurisé (notion de tamper resistance). Il met en œuvre un contrôle d'accès au module cryptographique, basé sur les rôles (Role-Based Access Control - RBAC) ; il est exécuté sur un système informatique classique dont le système d'exploitation répond aux exigences fonctionnelles spécifiées dans les profils de protection (PP) critères communs (CC). Il est associé à un profile de protection EAL2. Le niveau 3 implémente la détection des intrusions physiques, impliquant l’effacement des secrets. Il met en œuvre une authentification des rôles basée sur l’identité. Des interfaces d’entrée/sortie dédiées doivent être disponibles pour l’administration. Il est associé à un profile de protection EAL3. Le niveau 4 réalise la détection d’intrusion logique et physique renforcée, par exemple il identifie les paramètres fonctionnels (température, alimentation, horloge …) anormaux, et implémente des contremesures. Il est associé à un profile de protection EAL4. Intel SGX La technologie SGX60 61 62 63 est une exécution isolée dans un processeur INTEL multi-cœurs, selon la notion d’enclave. Elle est conçue pour résister aux malwares présents au niveau du système d’exploitation. Un logiciel (ISV) crée une enclave à partir d’instructions dédiées SGX. L’identité de l’enclave (\"Enclave Identity\") est l’empreinte mémoire (hash) du logiciel et d’autres données. Le \"Sealing Identity\" est un certificat émis par le \"Sealing Authority\" pour certifier \"Enclave Identity\", ainsi que d’autres informations, par exemple un identifiant de produit. L'attestation logicielle prouve à un ordinateur distant qu'il communique avec un conteneur sécurisé (son image mémoire est chiffrée,) spécifique 60 Victor Costan and Srinivas Devadas, Intel SGX Explained, 2016 61 JP Aumasson, Luis Merino, SGX Secure Enclaves in Practice Security and Crypto Review, Blackhat 2016 62 https://software.intel.com/content/www/us/en/develop/articles/innovative- technology-for-cpu-based-attestation-and-sealing.html 63 https://sgx101.gitbook.io/sgx101/sgx-bootstrap/overview Pascal Urien – Télécom Paris – Introduction à la Cyber Sécurité"}
{"pack_id": "french_pack", "section_title": "Intel SGX", "page": 94, "chunk_id": "french_pack_94_0", "content": "94 hébergé par une plate-forme de confiance. La preuve est une signature d’attestation produite par la clé d’attestation secrète de la plate-forme. La signature couvre l’état initial du conteneur, un nonce de défi produit par l’ordinateur distant et un message produit par le conteneur. En phase de production deux secrets hardware sont générés : - Le root provisioning key - Le root seal key , qui n’est pas connu d’INTEL Le root seal key est utilisé pour calculer des seal keys pour les enclaves L’Attestation prouve l’intégrité d’une enclave - Une enclave particulière Quoting Enclave (QE) génère une clé de signature asymétrique EPID. - QE mesure l’intégrité d’une enclave et délivre une attestation de vérification. Notion de Sealed storage - Après la création d’une enclave les données internes de l’enclave sont protégées au runtime par une clé Seal Key - Des secrets peuvent être crées par l’enclave et stockés à l’extérieure de l’enclave selon un mécanisme dit Encrypted blob. Pascal Urien – Télécom Paris– Introduction à la Cyber Sécurité"}
{"pack_id": "french_pack", "section_title": "Obfuscation", "page": 95, "chunk_id": "french_pack_95_0", "content": "95 Obfuscation L'objectif des techniques d'obfuscation logicielle (soit P un programme, note O(P) sa forme après obfuscation) est de rendre difficile l'analyse d'un programme (selon64 \"Code obfuscation is the practice of making code unintelligible, or at the very least, hard to understand\"). Selon le classique paradigme de programmation procédurale, un programme est un ensemble de procédures, d'instructions, de branchements (jump), et de données. Le graphe CFG (Control Flow Graph) est une représentation de la structure des appels de procédures et des instructions de saut. Rendre un programme inintelligible consiste à rendre très difficile son analyse (reverse engineering) et en particulier l'extraction d'un CFG (voir par exemple la référence65). Un mécanisme deobfuscation (soit retrouver P à partir de O(P)) peut être un problème NP complet. Exemple de graphe CFG (Control Flow Graph) Les virus utilisent des techniques polymorphes ou métamorphes. - Dans le cas du polymorphisme, une clé modifiée à chaque instanciation du programme déchiffre des sous ensembles, qui sont chiffrés ultérieurement avec une nouvelle clé. -Dans le cas du métamorphisme, le programme polymorphe modifie tout ou partie de son code, qui est recompilé par la suite. L'obfuscation et la sécurité sont cependant deux notions distinctes. Ainsi après obfuscation, un algorithme cryptographique (DES par exemple) reste 64 A. Balakrishnan and C. Schulze, \"Code Obfuscation Literature Survey\", http://pages.cs.wisc.edu/~arinib/writeup.pdf, 2005. 65 Emmanuel Fleury, \"Binary Program Analysis: Theory and Practice (what you code is not what you execute)\" http://www-verimag.imag.fr/~async/CCIS/talk_13/Fleury.pdf Pascal Urien – Télécom Paris – Introduction à la Cyber Sécurité"}
{"pack_id": "french_pack", "section_title": "Obfuscation", "page": 96, "chunk_id": "french_pack_96_0", "content": "96 exposé aux attaques par injections de faute, SPA (Single Power Analysis) ou DPA (Differential Power Analysis). Le document66 \"Code Obfuscation Literature Survey\" résume les différentes techniques pouvant être mises en œuvre: - Modification du flux de control du programme (suite de blocs d'instructions en mémoire sans saut, et appels de procédures), répartition aléatoire de blocs d'instructions en mémoire, instructions de saut opacifiées à l'aide de prédicats (par exemple un appel de procédure remplace une instruction jump); -Modification des abstractions du logiciel, telles que relations d'héritage ou tableaux de données; - Mise en œuvre d'une machine virtuelle (interpréteur) par le programme, exécutant ses propres instructions (et donc différentes de celles du processeur exécutant le programme); - Insertion et destruction de code en mémoire au runtime (inline and outline method); - séparation de variables; - concaténation de variables; - conversion de variables en procédures. L'analyse de programme se décompose en deux classes fonctionnelles: - L'analyse statique qui examine le code source du programme afin d'en extraire un CFG et certaines informations (des clés cryptographiques par exemple). En code assembleur (binaire) cette opération peut être rendue difficile par l'insertion de zones de données dans le code. En java le code et les données sont séparés dans des zones distinctes du fichier .class. La Dalvik Virtual Machine (DVM) d'Android est similaire à la machine virtuelle Java (JVM), des outils libres publiques (\"désassembleur\") permettent la transformation de code DVM en JVM, et donc l'analyse statique d'un fichier Android PacKage (APK). Cependant il est possible d'inclure du code C dans une application Android, compilée pour un processeur spécifique (et donc un modèle de mobile donné) grâce aux interfaces JNI (Java Native Interface). - L'analyse dynamique, réalisée lors de l'exécution du programme (run time). 66 A. Balakrishnan and C. Schulze, \"Code Obfuscation Literature Survey\", http://pages.cs.wisc.edu/~arinib/writeup.pdf, 2005. Pascal Urien – Télécom Paris– Introduction à la Cyber Sécurité"}
{"pack_id": "french_pack", "section_title": "White-Box Cryptography (WBC)", "page": 97, "chunk_id": "french_pack_97_0", "content": "97 Indistinguishability Obfuscation L'idée intuitive de l'obfuscation67 est de construire une boite noire (Black Box) qui ne délivre aucune information au cours de son fonctionnement. En 2001 le célèbre article68 \"On the (Im)possibility of Obfuscating Programs\" a démontré que le concept de boite noire n'est pas universel, c'est à dire qu'il est toujours possible, quelque soit le procédé d'obfuscation, d'extraire de l'information de certaines fonctions, similaires à des procédures à sens unique (fonction de hash). Cependant le même article introduit la notion d'obfuscation non distinguable (Indistinguishability Obfuscation, iO) telle que les obfuscations iO(P1) et iO(P2) de deux variantes fonctionnellement équivalentes d'un programme (par exemple P1= !a + !b, et P2= !a.b) soient indiscernables. Selon une approche circuit, un algorithme (C1) conçu sous la forme canonique conjonctive (ensemble de AND de termes comprenant des OU de variable logique et de leur négation NOT) serait indiscernable d'une instanciation équivalente C2= iO(C1). Par la suite l'extraction d'information (soit l'obtention de la forme canonique C1 à partir de C2) est impossible en raison du problème bien connu SAT, qui est NP complet. Les algorithmes cryptographiques basés sur le principe iO, sont potentiellement capables de dissimiler certaines informations (clés) mais en sont encore au stade de la recherche. White-Box Cryptography (WBC) 67 Marc Beunardeau ; Aisling Connolly ; Remi Geraud ; David Naccache, \"Cdoe Obofsucaitn: Securing Software from Within\", IEEE Security & Privacy Issue 3 • May-June 2016 68 B. Barak et al., \"On the (Im)possibility of Obfuscating Programs,\" Proc. 21st Ann. Int’l Cryptology Conf. (CRYPTO 01), LNCS 2139, Springer, 2001, pp. 1–18 Pascal Urien – Télécom Paris – Introduction à la Cyber Sécurité"}
{"pack_id": "french_pack", "section_title": "White-Box Cryptography (WBC)", "page": 98, "chunk_id": "french_pack_98_0", "content": "98 La technique de White Box a été proposée en 200269. Son objectif70 est de réaliser l'obfuscation logicielle d'une clé associée à un algorithme cryptographique par exemple DES ou AES. Le code implémentant l'algorithme peut être cloné, mais l'extraction de la clé est présumée impossible. L'algorithme de chiffrement est transformé en un réseau de tables (lookup table) liées à la clé (S-Box modifiées). Une table S établit une relation entre un index (6 bits pour le DES) et une sortie (4 bits pour le DES), index = K exor E (K est une sous clé DES de 6 bits), Y = 6 6 6 6 4 S(index). Soit un index ’ = index exor K , on obtient une table Y = S(index ’). En 6 6 6 4 6 appliquant la relation index ’ exor E on retrouve index , et donc Y = S(index ’ exor 6 6 6 4 6 E ). Le code est par la suite embrouillé selon des techniques d'obfuscation. 6 Les implémentations DES et AES en white box ont été cassées71 par des attaques dites DCA (Differential Computation Analysis). Lors de la conférence BlackHat une série d'attaques72 (injection de fautes et analyse Differential Fault Analysis - DFA) a été démontrée sur des implémentations commerciales. Le WhibOx challenge est une compétition WBC (https://whibox- contest.github.io/ ), appliquée à l'algorithme AES. Son objectif est la réalisation d'un programme en C, qui calcule un chiffrement AES avec une clé de 128 bits. Le code comporte la fonction : AES_128_encrypt(ciphertext, plaintext) Les attaquants disposent du code source et tentent de casser le programme, c'est à dire d'obtenir la clé secrète AES, par tous les moyens disponibles. En 2017 la grande majorité des programmes ont été cassés en moins d'une heure; quelques implémentations ont résistées plus de 10 jours, et le record est d'environ un mois. En 2019 plusieurs implémentations ont résisté pendant la durée du concours 69 Stanley Chow & All. \"A white-box DES implementation for DRM applications\", in Proceedings of the ACM Workshop on Security and Privacy in Digital Rights Management (DRM 2002), volume 2696 of Lecture"}
{"pack_id": "french_pack", "section_title": "White-Box Cryptography (WBC)", "page": 98, "chunk_id": "french_pack_98_1", "content": "d'une heure; quelques implémentations ont résistées plus de 10 jours, et le record est d'environ un mois. En 2019 plusieurs implémentations ont résisté pendant la durée du concours 69 Stanley Chow & All. \"A white-box DES implementation for DRM applications\", in Proceedings of the ACM Workshop on Security and Privacy in Digital Rights Management (DRM 2002), volume 2696 of Lecture Notes in Computer Science, pages 1–15. Springer, 2002. 70 Brecht Wyseur, Nagra Kudelski, \"White-Box Cryptography: Hiding Keys In Software\", MISC 2012. 71 Joppe W. Bos, et Al, \"Differential Computation Analysis: Hiding your White- Box Designs is Not Enough\"; 2016. 72 Eloi Sanfelix, Cristofaro Mune, Job de Haas, \"Unboxing the White Box\", BlackHat 2016 Pascal Urien – Télécom Paris– Introduction à la Cyber Sécurité"}
{"pack_id": "french_pack", "section_title": "Les implants matériels", "page": 99, "chunk_id": "french_pack_99_0", "content": "99 Intégrité physique et logicielle L’intégrité physique et logicielle est un enjeu majeur pour la cybersécurité. Comment avoir une certaine assurance sur l’absence de malware dans un logiciel embarqué, et sur la conformité du hardware (carte électronique et composants) associés. Intégrité physique Les implants matériels Un implant est une puce (chip) insérée dans un système électronique, dans le but de réaliser des fonctions malicieuses. Le 8 octobre 2018 la revue Bloomberg Business week a publié un article intitulé \"The Big Hack: How China Used a Tiny Chip to Infiltrate U.S. Companies\", lequel s’est avéré par la suite totalement infondé. L’article décrit une puce électronique (un implant) de la taille d’une pointe de crayon, soudée sur une carte mère destinée à des environnements cloud, et embarquant des ressources réseau Cependant en 2020 lors de la conférence CS3sthlm73 le chercheur Monta Elkins a présenté dans sa communication \"Nation- State Supply Chain Attacks for Dummies and You Too\" un implant basé sur le processeur ATTINY85 (8Ko FLASH, 512 octets EEPROM, 512-octets SRAM,). Ce boitier de petite taille (4x4x0.8mm) monté sur un module (DigiSpark) coute 1$ il est programmable avec l’IDE Arduino. L’implant est soudé sur la carte mère du routeur CISCO ASA5505. Le principe de l’attaque consiste à injecter lors du boot, des commandes sur l’interface série disponible pour l’administration du dispositif. Le micro logiciel crée un compte SSH permettant l’accès au routeur à distance et signale cette opportunité par une série de ping sur un serveur de l’attaquant. D’autres idées d’implant visent les claviers, par exemple le projet Haunted USB Cable74) (2010) utilise une puce ATTINY45 insérée dans une prise USB, qui réalise l’émulation d’un clavier USB HID (Human Interface Device). Le micro logiciel modifie de manière aléatoire les modes CapsLock, 73 https://www.youtube.com/watch?v=WTncGSYSbNY 74 http://imakeprojects.com/Projects/haunted-usb-cable Pascal Urien – Télécom Paris – Introduction à la Cyber Sécurité"}
{"pack_id": "french_pack", "section_title": "Les relais", "page": 100, "chunk_id": "french_pack_100_0", "content": "100 Insert, et NumLock, et injecte des caractères espace, backspace, tab, or delete. En 2016 le projet75 a adapté le micro logiciel Haunted USB pour un processeur ATTINY85. La même année un autre projet76 a développé une variante logicielle qui injecte une série de caractères après trois pressions de la touche CapsLocks. Les claviers sont équipés de trois voyants indiquant l’activation des modes scroll lock, caps lock et insert. Le système d’exploitation envoie des messages USB HID pour synchroniser les affichages de plusieurs claviers. La séquence d’échange est la suivante: 1) la touche caps lock est pressée; 2) le micro logiciel du clavier notifie cet évènement dans un \"input report\"; 3) le PC diffuse un message \"output report\" pour l’activation de la LED correspondante; 4) le micrologiciel active la LED. Sous Windows des API dédiées permettent la gestion des différents modes d’un clavier. Il est donc possible d’établir un canal caché avec un malware HID USB. Certains modules Arduino, par exemple basés sur le processeur ATMEGA32u4 supportent des librairies HID réalisant des interfaces clavier et souris. L’ajout d’un SoC de communication, tel que Bluetooth ou Wi-Fi, permet d’injecter des messages indiquant le déplacement du curseur ou la frappe de touche. Typiquement l’attaque consiste à démarrer un shell pour exécuter des commandes. Les relais Les attaques par relais (Relay Attack) s’appuient sur une technique de type MIM (Man In the Middle) dont le but est d’étendre la distance de fonctionnement, et/ou de transmettre partiellement les informations reçues. Par exemple on peut relayer des signaux radio; des attaques SARA (Signal Amplification Relay Attacks) sont été constatées pour le vol de voiture équipées de systèmes RKS (Remote Keyless System). Une clé électronique détecte en permanence les signaux émis à courte portée par les véhicules, qui sont déverrouillés au terme d’un échange d’authentification. 75 https://github.com/whiteneon/haunted-usb-1.0 76 https://github.com/Uxio0/usbAspKeyboard Pascal Urien – Télécom Paris– Introduction à la Cyber Sécurité"}
{"pack_id": "french_pack", "section_title": "Les relais", "page": 101, "chunk_id": "french_pack_101_0", "content": "101 En 2005 un article de Gerhard Hancke77 démontrait l’usage à distance de carte MIFARE largement déployé pour le contrôle d’accès. Le relais transporte le contenu de trames MAC à travers internet. Les temps de réponse sont plus importants, ce qui est détectable par des contre mesures. Selon le même principe, des attaques sont possibles entre un terminal de paiement et une carte bancaire sans contact, au moyen d’un relais des commandes ISO7816, dites APDUs. En 2010 une équipe de chercheurs78 de l’Université College London et de l’université de Cambridge ont démontré une faille de sécurité dans le protocole EMV. L’évènement \"Code PIN non renseigné\" n’est pas mémorisé dans le cryptogramme de paiement, ce qui rend possible une attaque par relais. Ils ont développé un système électronique qui transmet toutes les commandes ISO7816 à la puce EMV authentique, sauf la commande VerifyPIN, pour laquelle le relais délivre la réponse ISO7816 0x9000 (soit PIN OK). Cette faille rend possible l’usage de cartes volées. En mai 2011, le GIE Cartes Bancaires a constaté qu'une dizaine de cartes EMV, volées en France quelques mois auparavant, étaient utilisées en Belgique. Une enquête policière a été ouverte, des cartes frauduleuses ont été saisies et expertisées. L’article79 présente les résultats de cette expertise mettant en évidence l’usage d’un système relais nommée FUN, comportant une mémoire EEPROM 8Ko série (AT24C64), et le processeur AT90S8515A (512o EEPROM, 512o RAM). FUN est une version très intégrée du prototype de l’équipe anglaise; c’est un en fait un implant collé sur le module EMV authentique. 77 Gerhard Hancke \"A Practical Relay Attack on ISO 14443 Proximity Cards”, 2005 78 Steven J. Murdoch, Saar Drimer, Ross Anderson, Mike Bond, \"Chip and PIN is Broken\", 2010 IEEE Symposium on Security and Privacy. 79 Houda Ferradi, Rémi Géraud, David Naccache, and Assia Tria, \"When Organized Crime Applies Academic Results A Forensic Analysis of an In-Card Listening Device\", October 2015, Journal of Cryptographic Engineering. Pascal Urien – Télécom Paris – Introduction à la Cyber Sécurité"}
{"pack_id": "french_pack", "section_title": "Anti clonage de processeur : techniques SRAM PUF", "page": 102, "chunk_id": "french_pack_102_0", "content": "102 Anti clonage de processeur : techniques SRAM PUF Une puce électronique peut être remplacée par un clone aux fonctionnalités identiques, ou par un système réalisant son émulation. Les techniques PUF80 (physical unclonable function) permettent d’identifier une mémoire SRAM de manière pseudo unique. Un microcontrôleur (MCU) comporte une unité arithmétique et logique (ALU) des mémoires non volatiles (EEPROM, FLASH) et éphémères (SRAM). Le rapport de surface entre mémoire FLASH et SRAM est d’environ 4 (?). Une cellule SRAM classique est réalisée par 6 transistors CMOS, réalisant deux inverseurs connectés en série afin de provoquer un état bistable. Idéalement pour des faibles valeurs de tension d’alimentation VDD les sorties des inverseurs restent proches de VDD/2, avec un gain croissant. Si les inverseurs sont parfaitement symétriques, la tension de sortie suit VDD/2, et bascule de manière aléatoire (avec une probabilité de 50%) vers 0 ou VDD. Cependant en fonction de dissymétries géométriques ou électriques des transistors CMOS, une cellule mémoire peut prendre une valeur fixe (0 ou 1) de manière reproductible (avec une probabilité très proche de 1). Cet effet peut être mis à profit pour identifier une mémoire SRAM intégrée dans un MCU. 80 Charles Herder, Meng-Day Yu, Arinaz Koushanfar, Rinivas Devadas, \"Physical Unclonable Functions and Applications: A Tutorial\", in IEEE Volume 102, Issue: 8, Aug. 2014. Pascal Urien – Télécom Paris– Introduction à la Cyber Sécurité"}
{"pack_id": "french_pack", "section_title": "Anti clonage de processeur : techniques SRAM PUF", "page": 103, "chunk_id": "french_pack_103_0", "content": "103 La figure ci-dessus monte l’état d’une mémoire SRAM pour deux MCUs ATMEGA8 (à gauche et à droite) après 250 mises en tension. Les carrés blancs indiquent les cellules mémoires bruitées (c'est-à-dire observées avec des valeurs de sorties différentes). Au centre elle montre une image mémoire pour une mise en tension unique. La figure ci-dessus montre les contenus de cellules mémoires différents (en rouge) pour deux processeurs (les points bruités en blanc sont ignorés); elle démontre l’authentification (statique) de SRAM par un procédé PUF. On peut utiliser des cellules SRAM avec des contenus invariants, et protégées d’éventuelles erreurs par des codes auto correcteurs, comme des clés privées, par exemple de taille 256 bits. Cependant les calculs cryptographiques associés permettent de récupérer ces clés, si des techniques de canaux cachés sont pertinentes. Pascal Urien – Télécom Paris – Introduction à la Cyber Sécurité"}
{"pack_id": "french_pack", "section_title": "Attestation distante (remote attestation)", "page": 104, "chunk_id": "french_pack_104_0", "content": "104 Attestation distante (remote attestation) L'attestation81 est une procédure consistant à affirmer (à un évaluateur) une propriété (claim) d’une cible, à l’aide de preuves démontrant cette propriété. L'attestation à distance82 est un mécanisme qui permet à un évaluateur (Verifier) de vérifier l'intégrité d'un système hôte (distant) qui est dans un état connu, selon un mécanisme de défi-réponse. Les principales entités d’un tel protocole sont le Prover (P) et le Verifier (V). Typiquement le Verifier produit un nombre aléatoire (nv), le Prover génère des données d’attestation (att_data(nv)) et retourne cette information optionnellement munie d’une signature cryptographique. On distingue trois classes d’attestation: (1) Attestation logicielle, le mécanisme d'attestation repose sur des mesures de temps strictes. (2) Attestation matérielle, la procédure d’attestation utilise un composant matériel durci (\"tamper-resistant\", tel que TPM par exemple). (3) Attestation hybride, la procédure d'attestation utilise des ressources logicielles et matérielles. Par exemple un code stocké dans une mémoire ROM réalise le Prover. 81 George Coker, Joshua Guttman, Peter Loscocco1, Amy Herzog,Jonathan Millen, Brian O'Hanlon, John Ramsdell,Ariel Segall, Justin Sheehy, and Brian Sniffen, \"Principles of Remote Attestation\" 82 IOANNIS SFYRAKIS and THOMAS GROSS,\"A Survey on Hardware Approaches for Remote Attestation in Network Infrastructures\" Pascal Urien – Télécom Paris– Introduction à la Cyber Sécurité"}
{"pack_id": "french_pack", "section_title": "Intégrité logicielle pour un système embarqué", "page": 105, "chunk_id": "french_pack_105_0", "content": "105 Les attaques83 logicielles possibles sont par exemples 1. Le pré-calcul de tous les résultats d'attestation, indépendamment du défi. 2. Le rejeu d’un résultat, ou la réponse d’un autre dispositif. 3. La copie mémoire totale (Memory Copy). 4. La substitution de données (copie partielle). 5. La Compression. 6. L’usurpation d'identité, envoi d’une réponse invalide ou l’usage de dispositifs valides. 7. La technique ROP (Return Oriented Programming). Exécution de fragment de code. Des attaques matérielles peuvent effacer un dispositif authentique, utiliser un dispositif authentique localement (implant) ou à distance (relais). Intégrité logicielle pour un système embarqué Un logiciel peut il prouver son intégrité dans un contexte de système embarqué ? Considérons un microcontrôleur équipé de mémoires non volatile et éphémères. On peut remplir la mémoire d’instructions non utilisée par un content pseudo aléatoire pour éviter les attaques de type \"memory copy\", et de même pour la mémoire SRAM non utilisée pour les données. L’utilisation de procédure de compression/décompression augmente le temps de calcul. L’idéal serait de concevoir un algorithme optimal en termes de taille mémoire et de temps d’exécution84. Les invariants mis en œuvre sont la taille finie des mémoires et le temps. Voici deux exemples illustrant la preuve d’intégrité de logiciel. 83 Sigurd Frej Joel Jorgensen Ankergard, Edlira Dushku and Nicola Dragoni, State-of-the-Art Software-Based Remote Attestation:Opportunities and Open Issues for Internet of Things 84 Asokan, N. et al. \"ASSURED: Architecture for Secure Software Update of Realistic Embedded Devices.\". IEEE Transactions on Computer-Aided Design of Integrated Circuits and Systems 37.11 (2018): 2290-2300. Pascal Urien – Télécom Paris – Introduction à la Cyber Sécurité"}
{"pack_id": "french_pack", "section_title": "Bijective MAC, BMAC", "page": 106, "chunk_id": "french_pack_106_0", "content": "106 Remote Attestation L'attestation à distance (\"remote attestation\") est un processus dans lequel une entité de confiance (\"verifier\") mesure à distance l'état interne d'un système potentiellement compromis, à l’aide d’un programme dit \"prover\". L’idée est de réaliser un checksum ou un hash sur les mémoires du système, dans un ordre pseudo aléatoire, fixé par une permutation. Par exemple l’article85 utilise une permutation86 P dans Z/2n, c'est-à-dire pour un espace d’adresses de 2n cellules. Les bits 0 et 3 de C doivent être à 1, soit C = 5 v X mod 2n L’opération carré est réalisé par un multiplicateur câblé, ce qui garanti un temps d’exécution minimal. L’algorithme Prover calcule un checksum des mémoires du système, le nombre d’itération étant aléatoirement fixé par le vérificateur, à l’aide d’une implémentation supposée optimale en temps d’exécution. Bijective MAC, BMAC L’algorithme BMAC87 réalise une empreinte avec une fonction à sens unique (SHA2, SHA3…) sur un espace mémoire de taille m, et en utilisant une permutation P. 85 Seshadri, A. et al. \"SCUBA: Secure Code Update By Attestation in sensor networks.\", in Radha Poovendran & Ari Juels, ed., \"'Workshop on Wireless Security\" , ACM, , pp. 85-94 (2006). 86 A. Klimov, and A. Shamir. \"A New Class of Invertible Mappings.\", . CHES, volume 2523 of Lecture Notes in Computer Science, page 470-483. Springer, (2002) Pascal Urien – Télécom Paris– Introduction à la Cyber Sécurité"}
{"pack_id": "french_pack", "section_title": "Bijective MAC, BMAC", "page": 107, "chunk_id": "french_pack_107_0", "content": "107 Soit un nombre premier p >m, la permutation P(y) = F(1+y) -1 est basée sur des générateurs deux générateurs (g1, g2) et un éléments (s1) dans Z/pZ*. Lorsque l’implémentation de F(x) utilise l’algorithme square & multiply, on observe une distribution normale pour les temps de calcul. 87 P. Urien, \"Time Stamped Bijective MAC and Dynamic PUF Authentication New Directions For IoT Security : Invited Paper,\" 2020 Sixth International Conference on Mobile And Secure Services (MobiSecServ), Miami Beach, FL, USA, 2020 Pascal Urien – Télécom Paris – Introduction à la Cyber Sécurité"}
{"pack_id": "french_pack", "section_title": "Differential Power Analysis", "page": 108, "chunk_id": "french_pack_108_0", "content": "108 Les Canaux Cachés. Bien que les algorithmes cryptographiques tels que RSA ou DES soient considérés comme sûrs d’un point de vue mathématiques, il est possible d’extraire les clés à partir des temps d’exécution ou des ondes rayonnées par le processeur qui réalise ces fonctions. Nous donnons ici deux exemples de telles attaques (SPA - Simple Power Analysis & DPA – Differential Power Analysis, Paul Kocher). Single Power Analysis Un calcul RSA consiste à élever un nombre M (le message en clair) à la puissance e en modulo m (le couple e et m constituant la clé privé), soit encore C(forme chiffrée) = Me modulo m = M x M x ….x M (e fois) En exprimant e sous forme binaire soit, e = e0.20 + e1.21 + e2.22 + e3. 23 + e4.24 +...+ ei.2i +...+ ep-1.2p-1, ou ei a pour valeur 0 ou 1. La forme chiffrée s’exprime sous forme d’un produit de p termes mi, C = m0. m1 m2…mi… mp-1 modulo m, avec - mi= 1, si ei=0, - mi= Mi modulo m, si ei=1; M0 = M, Mi = Mi-1 x Mi-1 = M2^i En constate que, dans cette implémentation de l’algorithme RSA (dite square and multiply), chaque bit (ei) de la clé implique un temps calcul différent selon que sa valeur soit 0 (multiplication triviale par 1) ou 1 (multiplication par M2^i). En fonction des différences de temps calcul observées on déduit la valeur de ei (0 ou 1). Differential Power Analysis Nous avons vu précédemment que dans le cas de RSA, le calcul peut être réalisé en p étages, la taille de l’exposant privé étant de p bits. Supposons un algorithme cryptographique dont le calcul se décompose en p étages. Chaque étage k (k étant compris entre 0 et p-1) prend comme argument d’entrée une valeur d'entré Mk,i et calcule la valeur de sortie Mk+1,i. M0 , i est un message en clair i, et Mp,i sa forme chiffrée. Pascal Urien – Télécom Paris– Introduction à la Cyber Sécurité"}
{"pack_id": "french_pack", "section_title": "Differential Power Analysis", "page": 109, "chunk_id": "french_pack_109_0", "content": "109 Un microprocesseur qui exécute un calcul induit des effets physiques variés, par exemple l’énergie consommée ou l’émission d’ondes radio. Nous désignons par Sk , i(t) un effet physique produit par l’étage de calcul k relativement au message i. De surcroît nous imposons que chaque étage k utilise une clé Kk , j dont la taille est de nk bits (j est une valeur comprise entre 0 et 2nk - 1). Par exemple dans le cas de l’algorithme DES chaque étage utilise une (sous) clé de 6 bits (nk = 6). L’algorithme travaille avec une clé globale de 56 bits, mais cette dernière est appliquée sur différents blocs de calcul associés à des clés de 6 bits. Nous supposons l’existence pour chaque étage k d’une fonction gk , j(Mk , i) que nous nommons estimateur, telle que pour chaque clé Kk , j ,la moyenne des valeurs d’entrée (Mk,i ) est nulle, c’est à dire que pour toute clé j (j compris entre 0 et 2nk-1): 1/N x ∑ gk , j(Mk , i) = 0 pour N très grand 0<i<N-1 Pour fixer les idées nous enregistrons par exemple la puissance consommée Sk , i(t) par le microprocesseur au cours du calcul de l’étage k pour une valeur d’entrée Mk , i. Nous calculons pour chaque relevé l’ensemble des 2nk produits Pk , j , i(t) Pk , j , i (t) = Sk , i(t) gk , j(Mk , i) On obtient 2nk courbes variant dans le temps, pour chaque étage k et pour chaque message i. Si l’on admet que pour les mauvaises clés les fonctions Sk , i(t) et gk , j(Mk , i) ne sont pas corrélées au sens statistique du terme, alors la moyenne de leur produit est égal au produit des moyennes, et donc est proche de 0. 1/N ∑ Pk , j , i (t) = 0(t) pour N très grand et j mauvaise clé 0<i<N-1 En revanche si l’on admet que pour la bonne clé les fonctions Sk , i(t) et gk , j(Mk , i) sont corrélées au sens statistique du"}
{"pack_id": "french_pack", "section_title": "Differential Power Analysis", "page": 109, "chunk_id": "french_pack_109_1", "content": "leur produit est égal au produit des moyennes, et donc est proche de 0. 1/N ∑ Pk , j , i (t) = 0(t) pour N très grand et j mauvaise clé 0<i<N-1 En revanche si l’on admet que pour la bonne clé les fonctions Sk , i(t) et gk , j(Mk , i) sont corrélées au sens statistique du terme, alors la moyenne de leur produit n’est pas égale au produit des moyennes, et donc, n’est pas nulle. 1/N ∑ Pk , j , i # 0(t), pour N très grand et j bonne clé 0<i<N-1 Pascal Urien – Télécom Paris – Introduction à la Cyber Sécurité"}
{"pack_id": "french_pack", "section_title": "Faites moi confiance ? 20 ans de bugs et heuristiques", "page": 110, "chunk_id": "french_pack_110_0", "content": "110 Faites moi confiance ? 20 ans de bugs et heuristiques Voici une liste non exhaustive de failles de sécurité. - 1995, Peter Shor88 invente un algorithme de factorisation d’un nombre N par un calculateur quantique, en un temps O((log N)3). En d’autres termes RSA est cassable par une technologie quantique. IBM a factorisé le nombre 15 (3x5) en utilisant un calculateur quantique de 7 qbits. - En juillet 1995, Damien Doligez, doctorant à l’INRIA a cassé un clé RC4 de 40 bits en une semaine, à l’aide d’une centaine de machines générant chacune de l’ordre de 10000 clés/seconde. - 1996, Lov K. Grover89 publie un algorithme quantique permettant une recherche exhaustive dans un espace à N éléments en O(√N). En particulier une clé de 128 bits peut être cassée selon une complexité de 264. En 2013 la société Google associée à la NASA a fait l'acquisition d'un ordinateur quantique (D-WAVE) de 8x8 qbits (quantum bits). - 1998, l’algorithme COMP128-1, qui assure l’authentification des abonnés du GSM (algorithme A3/A8) est craqué en 219 (0,5 million) essais par l’université de Berkeley90. - 1999, Serge Humpich casse la clé RSA privée de 320 bits des cartes bancaires, à l’aide d’un logiciel téléchargé sur le WEB. - 2001, Fluhrer & All91 cassent le WEP en environ 222 (4 millions) d’essais. 88 Peter W. Shor, \"Polynomial-Time Algorithms for Prime Factorization and Discrete Logarithms on a Quantum Computer\", 1995. 89 Lov K. Grover \"A fast quantum mechanical algorithm for database search\", 1996 90 Marc Briceno, Ian Goldberg, and David Wagner 91 S. Fluhrer, I. Mantin, and A. Shamir. “Weaknesses in the key scheduling algorithm of RC4”. In Eighth Annual Workshop on Selected Areas in Cryptography, Toronto, Canada, Aug. 2001. Pascal Urien – Télécom Paris– Introduction à la Cyber Sécurité"}
{"pack_id": "french_pack", "section_title": "Faites moi confiance ? 20 ans de bugs et heuristiques", "page": 111, "chunk_id": "french_pack_111_0", "content": "111 - 2002, trois scientifiques indiens92 Manindra Agrawal, Neeraj Kayal et Nitin Saxena publient le test de primalité AKS, qui a reçu le prix Gödel en 2006. La complexité de l'algorithme est en O((log n)12) , soit par exemple pour un nombre de 1024 bits O(2120). D'ou la difficulté dans un protocole d'avoir une preuve de la primalité d'un entier. Une variante de AKS de H. W. Lenstra, Jr. et Carl Pomerance (2005) réduit la complexité à O((log n)6) soit O(260) pour un nombre de 1024 bits. - Mai 2003, Muhammad Faisal Rauf Danka, (étudiant pakistanais) accède à tous les comptes Passport.Net, en insérant la chaîne emailpwdreset dans une URL d’accès, https://register.passport.net/emailpwdreset.srf?lc=1033&m=victim@hot mail.com&id=&cb=&prefem=attacker@attacker.com&rst=1. - Juillet 2003, Jérôme Cretaux met en évidence l’absence de confidentialité quant aux informations sensibles, stockées dans les cartes Sésame Vitale. - 2004, effondrement de la probabilité de collision de l’algorithme MD5 développé dans les années 90, et largement utilisé dans l’internet, dont la valeur théorique était de 1/280 (soit un temps d’attaque \"infini\") - Wang et al (2004) 1/239 (temps d’attaque 1 heure) - Marc Stevens (2006) 1/232 (temps d’attaque 5 mn) - 2005, premier clonage de certificats X509, utilisant des signatures MD5 (Arjen Lenstra). - En 2008, Karsten Nohl, doctorant à Virginia University casse la carte Mifare Crypto1, vendue à plus de 500 millions d’exemplaires et utilisée par exemple comme carte de transport (Oyster card Londres, OV-chipkaart Pays-Bas, Charlie card Boston). La sécurité de ce composant RFID repose sur une clé secrète de 48 bits et un registre à décalage de type Fibonacci LFSR. 92 Manindra Agrawal, Neeraj Kayal and Nitin Saxena \"PRIMES is in P\", 2002 Pascal Urien – Télécom Paris – Introduction à la Cyber Sécurité"}
{"pack_id": "french_pack", "section_title": "Faites moi confiance ? 20 ans de bugs et heuristiques", "page": 112, "chunk_id": "french_pack_112_0", "content": "112 - En 2008, Jeroen van Beek, modifie avec succès le RFID des passeports électroniques Hollandais. L’attaque repose sur deux concepts, réalisation d’un clone logiciel et exploitation d’incohérences des spécifications d’interopérabilité (une signature incorrecte est une erreur non critique, une valeur de hash erronée est un avertissement). - En 2010, un groupe de chercheurs anglais93, mettent en évidence l’absence de vérification du code PIN dans certaines cartes bancaires EMV, lors de transactions de paiement. En 2010, une présentation au 27ième Chaos Communication Congress à Berlin (\"Console Hacking 2010, PS3 Epic Fail\") décrit une attaque permettant d'obtenir la clé de signature ECDSA utilisée par les consoles SONY PS3. Cette dernière est basée sur le fait que le logiciel utilise un nombre aléatoire fixe !.... Quelques rappels sur la signature la signature ECDSA: n est l'ordre (premier) d'un groupe définit sur une courbe elliptique Soit x Є [1,n-1] une clé privé, P= xG ( G un générateur) est la clé publique k un nombre aléatoire k Є [1, n-1] kG= (x ,y ), et r = x mod n R R R size = nombre d'octets de n, size=32 pour une courbe elliptique de 256 bits. H une fonction de hash, e=H(M), M un message. Si H(M) produit plus de size octets, on choisit les size octets les plus à gauche (octets de poids fort). Le couple (r,s), avec s = k-1 (e + x r) mod n est la signature du message M. Soit deux signatures (r,s1) et (r,s2), e1=h(M1), e2=h(M2) avec le même r. La clé privée s'écrit x = (e1 s2 - e2 s1) r-1 (s1-s2)-1 mod n - en 2011 le système RSA SecurID a été victime d’une attaque dite APT (pour Advanced Persistent Threat), c'est-à-dire un malware variante du logiciel Poison Ivy. Un jeton SecurID possède un numéro de série et stocke une clé 93 Murdoch, Steven J.; Drimer, Saar; Anderson, Ross; Bond, Mike; \"Chip and PIN is Broken\", Security and Privacy (SP), 2010 IEEE Symposium on Digital Object Identifier: 10.1109/SP.2010.33 Pascal Urien – Télécom Paris– Introduction à la Cyber Sécurité"}
{"pack_id": "french_pack", "section_title": "Faites moi confiance ? 20 ans de bugs et heuristiques", "page": 113, "chunk_id": "french_pack_113_0", "content": "113 secrète de 128 bits, usuellement nommée seed. Il génère un code basé sur une fonction de hash, la date, et le seed, code=h(date||seed). L’utilisateur connait un PIN associé au jeton. Le passcode est la concaténation du code affiché par le jeton et du PIN utilisateur. Une base de données stocke les tuples seed, numéro de série ainsi que le login utilisateur. Il est possible (?) que le seed soit une fonction du numéro de série. L’attaque a (?) permis d’obtenir tout ou partie de la base de données. Un avertissement de la société indique qu’il serait possible de récupérer le seed à partir d’un seul passcode. - en 2013 Karsten Nohl a présenté lors de la conférence, Black Hat 201394, une attaque permettant de «rooter» une carte SIM à partir d’un seul SMS, c’est-à-dire d’obtenir une clé DES de 56 bits dont la connaissance permet de charger, d’activer ou de détruire des applications embarquées (dans la SIM). Cette attaque s’applique à environ 1/8 du parc des cartes SIM. Elle repose sur un «bug» logiciel. La réception d’un message contenant un CMAC DES d’authentification, dont le contenu est aléatoire, implique la génération d’un message contenant un CMAC d’authentification calculé avec une clé DES 56 bits légitime. Le craquage force brute de cette clé utilise la technique dite des \"rainbow tables\". - Fin 2013, un malware (BlackPOS) logé dans des terminaux de paiement (POS) des magasins TARGET réalise le détournement de 40 millions de cartes de crédit. - En 2013, un document publié par Edward Snowden révèle que les échanges de données entre les Data Center de la société Google ne sont pas chiffrés. 94 Karsten Nohl , \"Rooting SIM cards\", Black Hat 2013, https://media.blackhat.com/us-13/us-13-Nohl-Rooting-SIM-cards-Slides.pdf Pascal Urien – Télécom Paris – Introduction à la Cyber Sécurité"}
{"pack_id": "french_pack", "section_title": "Faites moi confiance ? 20 ans de bugs et heuristiques", "page": 114, "chunk_id": "french_pack_114_0", "content": "114 - en 2014 un groupe95 de chercheurs français publie un algorithme quasi polynomial réalisant le calcul d'un logarithme discret dans les corps finis, de complexité Pour des corps fini tels que avec k#q ou pour des corps de faibles caractéristiques (typiquement 2) soit une complexité de - En 2014 Jeff Forristal directeur technique de la société Bluebox a publié lors de la conférence96 Blackhat 2014 une attaque Android nommé \"Android Fake ID\". Le système d'exploitation utilise des chaines de certificats dont la racine est un certificat auto-signé pour la vérification des signatures. Cependant la signature des certificats à l'intérieur de la chaine n'est pas vérifiée. - En 2014 Apple a publié une faille de sécurité dans le logiciel OPENSSL utilisé dans l'iPhone, l'iPad et le Mac OS X; la signature des certificats n'est pas vérifiée. Le code source responsable du problème est listé ci dessous. 95 Razvan Barbulescu, Pierrick Gaudry, Antoine Joux, and Emmanuel Thomé, \"A quasi-polynomial algorithm for discrete logarithm in finite fields of small characteristic\". 96 https://www.blackhat.com/docs/us-14/materials/us-14-Forristal-Android- FakeID-Vulnerability-Walkthrough.pdf Pascal Urien – Télécom Paris– Introduction à la Cyber Sécurité"}
{"pack_id": "french_pack", "section_title": "Faites moi confiance ? 20 ans de bugs et heuristiques", "page": 115, "chunk_id": "french_pack_115_0", "content": "115 static OSStatus SSLVerifySignedServerKeyExchange(SSLContext *ctx, bool isRsa, SSLBuffer signedParams, uint8_t *signature, UInt16 signatureLen) { OSStatus err; ... if ((err = SSLHashSHA1.update(&hashCtx, &serverRandom)) != 0) goto fail; if ((err = SSLHashSHA1.update(&hashCtx, &signedParams)) != 0) goto fail; goto fail; if ((err = SSLHashSHA1.final(&hashCtx, &hashOut)) != 0) goto fail; ... fail: SSLFreeBuffer(&signedHashes); SSLFreeBuffer(&hashCtx); return err; } - En 2014 Karsten Nohl (& All) a démontré97 lors de la conférence BlackHat 2014 que les mises à jour de firmware des jetons USB ne sont pas sécurisées. Selon la norme USB un jeton peut comporter plusieurs fonctions par exemple stockage mais également clavier (keys logging) ou interface réseau (écoute du trafic) 97 \"BadUSB On accessories that turn evil\"; KarstenNohl; Sascha Krißler; Jakob Lell. Pascal Urien – Télécom Paris – Introduction à la Cyber Sécurité"}
{"pack_id": "french_pack", "section_title": "Faites moi confiance ? 20 ans de bugs et heuristiques", "page": 116, "chunk_id": "french_pack_116_0", "content": "116 - En 2015 l'article98 démontre une attaque nommée Logjam qui calcule un logarithme discret de p=512 bits dans Z/pZ en une minute, après une phase de pré calcul sur le groupe d'environ une semaine. La complexité de l'attaque est résumé par la relation ci dessous avec N=2p et k compris entre 1 et 2. soit exp (1 * 7,8 * 9) = 2 1,45*7,8*9 = 2 100 - En septembre 2016 le malware Mirai se loge dans 145.607 caméras de la société chinoise XiongMai Technologies,, dans plus de 100 pays, et réalise des attaques DDOS. Il génère 1 terabit/s de trafic IP, et produit environ 35,000/50,000 requêtes HTTP par secondes. Il utilise une faille de sécurité triviale des caméras (une URL permettant d'injecter du code, http://<IP_address_of_device>/DRV.htm). - En 2016 Tobias Boelter99, chercheur à l'université californienne de Berkeley, met en évidence un trou de sécurité de l'application WhatsApp100, basé sur une technique MIM (Man In the Middle) possible dans des réseaux GSM. - En 2017 un groupe de chercheurs101 casse la sécurité des ampoules connectées HUE. Ils démontrent qu’il est possible de les reprogrammer à partir d’une voiture ou d’un drone, et donc de propager un malware informatique à l’échelle d’une ville. L’attaque se déroule en deux temps. Une commande unicast de réinitialisation usine, force l’ampoule à rejoindre le réseau ZigBee de l’attaquant. Chaque mise à jour du micrologiciel est chiffrée et authentifiée par l’algorithme AES-CCM. Cependant, toutes les ampoules utilisent la même clé, qui a été récupérée par une attaque CPA (Correlation Power Analysis). 98 \"Imperfect Forward Secrecy:How Diffie-Hellman Fails in Practice\" David Adrian et Al. 99 https://tobi.rocks/2016/04/whats-app-retransmission-vulnerability/ 100 WhatsApp Encryption Overview, Technical white paper November 17 2016 101 Eyal Ronen, Colin O’Flynny, Adi Shamir and Achi-Or Weingarten, \"IoT Goes Nuclear: Creating a ZigBee Chain Reaction\", (2017) Pascal Urien – Télécom Paris– Introduction à la Cyber Sécurité"}
{"pack_id": "french_pack", "section_title": "Faites moi confiance ? 20 ans de bugs et heuristiques", "page": 117, "chunk_id": "french_pack_117_0", "content": "117 - En mai 2017 le vers WannaCry (encore dénommé WannaCrypt), a infecté plus de 300 000 ordinateurs, répartis dans plus de 150 pays. Il est considéré comme le plus grand piratage à rançon (ransonware) de l'histoire d'Internet. Le malware est basé sur la faille Microsoft \"Windows SMB Server CVE- 2017-0145 Remote Code Execution Vulnerability\", découverte le 14 mars 2017. Cette faille est associée au message SMB TREE_CONNECT Response (un buffer overflow ?) Un exploit logiciel installe le vers EternalBlue, qui télécharge par la suite un ensemble de composants logiciels. Le mécanisme de propagation réalise un scan de port TCP 445 (Server Message Block, SMB), puis la détection du bug MS17_010, et enfin l'injection de l’exploit Eternal Blue - Double Pulsar. Une URL utilisant un nom de domaine à priori non alloué, réalise une sonde (Kill Switch) de détection de machine virtuelle. Le vers génère une paire de clés RSA (en s'appuyant sur la bibliothèque Windows Crypt); des fichiers sont ensuite chiffrés à partir de la clé publique. Le ransomware utilise trois adresses Bitcoin pour collecter les paiements:  115p7UMMngoj1pMvkpHijcRdfJNXj6LrLn  12t9YDPgwueZ9NyMgw519p7AA8isjr6SMw  13AM4VW2dhxYgXeQepoHkHSQuy6NgaEb94 - En 2019 un groupe de chercheurs102 a démontré une attaque qui permet au moyen d’un laser de produire un son sur le microphone MEMS des assistants personnels. Il est possible d’utiliser des commandes vocales pour ds distances relativement importante (100m). - SIM SWAPPING 2020. Le SIM swapping consiste à usurper un numéro de mobile. Le pirate demande à activer un numéro sur une carte SIM en sa possession. Pour convaincre le service client de l’opérateur, il utilise des informations personnelles (date de naissance, adresse, numéro de client, 102 Takeshi Sugawara, Benjamin Cyr, USara Rampazzi, Daniel Genkin, Kevin Fu \"Light Commands: Laser-Based Audio Injection Attacks on Voice-Controllable Systems”, 2019 Pascal Urien – Télécom Paris – Introduction à la Cyber Sécurité"}
{"pack_id": "french_pack", "section_title": "Faites moi confiance ? 20 ans de bugs et heuristiques", "page": 118, "chunk_id": "french_pack_118_0", "content": "118 etc.), qu’il a trouvé par ailleurs. Par la suite il peut émettre des appels téléphoniques ou des SMS. - Ripple20103. L’entreprise Treck a développé à partir des années 1997 une librairie TCP/IP; par la suite elle a collaboré avec la société Elmic Systems pour de nouvelles versions de cette pile de communication. Cette dernière est intégrée dans de nombreux (de l’ordre du milliard) dispositifs électroniques par exemple dans le domaine de la santé. En 2020 le laboratoire JSOF research lab a identifié 19 vulnérabilités104 Zero-Day permettant par exemple l’exécution de shell code. - SolarWinds 2020. SolarWinds est un éditeur de logiciels (basé au Texas), dédiés à la surveillance (monitoring) de réseaux (la plateforme Orion). Ces produits sont utilisés par des grands groupes tels que: Microsoft ou Amazon mais également le Department of Homeland Security (DHS). Un cheval de Troie105 a été injecté dans une mise à jour, et détecté en décembre 2020. C’est une attaque qualifiée de Supply Chain Attack. - L’article106 présenté lors de la conférence CHESS 2019, démontre le clonage de clés électroniques utilisées par un véhicule TESLA. L’attaque met à profit les failles de sécurité de l’algorithme de signature cryptographique DST40. La clé secrète (40 bits) est extraite grâce à l’enregistrement de deux séquences défi (40bits)/signature (24 bits). 103 https://www.jsof-tech.com/wp- content/uploads/2020/06/JSOF_Ripple20_Technical_Whitepaper_June20.pdf 104 https://i.blackhat.com/USA-20/Wednesday/us-20-Oberman-Hacking-The- Supply-Chain-The-Ripple20-Vulnerabilities-Haunt-Tens-Of-Millions-Of-Critical- Devices.pdf 105https://www.microsoft.com/security/blog/2020/12/18/analyzing-solorigate- the-compromised-dll-file-that-started-a-sophisticated-cyberattack-and-how- microsoft-defender-helps-protect/ 106 Lennert Wouters, Eduard Marin, Tomer Ashur, Benedikt Gierlichs, Bart Preneel, Fast, Furious and Insecure: Passive Keyless Entry and Start Systems in Modern Supercars, CHESS Conference 2019 Pascal Urien – Télécom Paris– Introduction à la Cyber Sécurité"}
{"pack_id": "french_pack", "section_title": "Faites moi confiance ? 20 ans de bugs et heuristiques", "page": 119, "chunk_id": "french_pack_119_0", "content": "119 - L’article107 démontre la récupération d’une clé privé utilisé par les jetons FIDO U2F, Google Titan Security Key. La procédure d’authentification est une signature ECDSA sur la courbe P256. Une attaque par canaux caché (DPA) est réalisé avec succès sur l’algorithme \"comb\" qui réalise une multiplication scalaire pour un nombre de 256 bits (clé privée) en 128 opérations. - L’article108 démontre une attaque par canaux caché, de type timing attack, qui permet de récupérer la clé privée utilisée pour une échange de Diffie-Hellman. Elle suppose une clé publique (gb) fixe côté serveur avec une taille de l’ordre de 1024 bits. L’attaquant (le client) génère des clés gaxgri, impliquant la construction de secret partagé gab x gri b. Les versions de TLS 1.2 et inférieures calculent le pre-master-secret en réalisant une procédure de hash sur le secret DH. Cependant les octets nuls de poids fort sont ignorés, ce qui conduit un calcul sur un nombre binaire de longueur variable. Certaines valeurs produisent donc des temps calculs plus petits. L’article estime à 20 millions le nombre d’essais nécessaires à l’extraction d’une clé privée de 1024 bits. - TLS Raccoon Attack. Le protocole TLS1.3 peut utiliser un secret pré- partagé (pre-share-key, PSK) pour authentifier les échanges de Diffie- Hellman entre client et serveur. L’article109 démontre un nœud internet qui réalise la réflexion des paquets TLS vers l’adresse source (celle du client). Si le nœud d’origine exécute également un serveur TLS1.3 avec le même PSK, celui-ci reçoit des messages d’un client TLS1.3 PSK supposé distant (l’en tête TCP/IP n’est pas liée de manière cryptographique à la charge TLS). 107 Victor Lomne and Thomas Roche, A Side Journey to Titan Side-Channel Attack on the Google Titan Security Key (Revealing and Breaking NXP’s P5x ECDSA Implementation on the Way), Janvier 2021 108 Robert Merget, Marcus Brinkmann, Nimrod Aviram, Juraj Somorovsky, Johannes Mittmann, and Jörg Schwenk, Raccoon Attack: Finding and Exploiting Most-Significant-Bit-Oracles in TLS-DH(E), Février 2021 109 Nir Drucker and Shay Gueron, Selfie: reflections on TLS 1.3 with PSK, 2019 Pascal Urien – Télécom Paris – Introduction à la Cyber Sécurité"}
{"pack_id": "french_pack", "section_title": "Faites moi confiance ? 20 ans de bugs et heuristiques", "page": 120, "chunk_id": "french_pack_120_0", "content": "120 - Attaque EMV 2020. Les références110 111 112 démontrent la réalisation de transactions EMV sans la présentation de code PIN. L’attaque repose sur deux faiblesses cryptographiques du protocol EMV. Le kernel 3 utilisé par le standard Visa qVSDC (aussi dénommé Visa payWave), permet la négociation en fonction du montant de la transaction et du type d’application EMV, selon deux paramètres TTQ (Terminal Transaction Qualifiers, envoyé à la carte) et CTQ (Card Transaction Qualifiers, généré par la carte). Certaines applications EMV hébergées par exemple sur des smartphones Android, gèrent la présentation du PIN sur le mobile. L’échange des attributs TTQ/CTQ n’est pas protégé par des moyens cryptographiques. Une attaque de type relais (Man In the Middle) permet d’indiquer au terminal la (fausse) vérification du PIN par le mobile. La deuxième partie de l’attaque consiste à maquiller (à l’aide d’un relais) une application EMV (par exemple Mastercard) pour la présenter selon le profil Visa qVSDC. Cette opération est rendu possible par le fait que la lecture de la liste des applications hébergées dans la carte de paiement (stockée dans l’application PSE, Payment System Environment.) n’est pas protégée - Phantom of the ADAS, 2020. L’article113 décrit une attaque sur le système de conduite autonome des TESLAs (Autopilot – Full Self Driving FSD). Des images sont projetées durant une courte période (50 ms), et donc sont imperceptibles par un humain. La détection par les caméras embarquées de panneaux fantômes, tels que stop, limitation de vitesse, ou d’obstacles entrainent des arrêts rapides ou des comportements dangereux. Une contremesure est proposée basée sur un réseau à convolution. 110 David Basin, Ralf Sasse, and Jorge Toro-Pozo, The EMV Standard: Break, Fix, Verify, 42nd IEEE Symposium on Security and Privacy (S&P), 2021 111 David Basin, Ralf Sasse, and Jorge Toro-Pozo, Card Brand Mixup Attack:Bypassing the PIN in non-Visa cards by Using Them for Visa Transactions, 30th USENIX Security Symposium, 2021 112 L.A. Galloway and T. Yunusov, “First contact: New vulnerabilities incontactless payments,” in Black Hat Europe 2019 113 Ben Nassi, Yisroel Mirsky, Dudi Nassi, Raz Ben-Netanel, Oleg Drokin, Yuval Elovici, Phantom of the ADAS: Securing Advanced Driver-Assistance"}
{"pack_id": "french_pack", "section_title": "Faites moi confiance ? 20 ans de bugs et heuristiques", "page": 120, "chunk_id": "french_pack_120_1", "content": "and Jorge Toro-Pozo, Card Brand Mixup Attack:Bypassing the PIN in non-Visa cards by Using Them for Visa Transactions, 30th USENIX Security Symposium, 2021 112 L.A. Galloway and T. Yunusov, “First contact: New vulnerabilities incontactless payments,” in Black Hat Europe 2019 113 Ben Nassi, Yisroel Mirsky, Dudi Nassi, Raz Ben-Netanel, Oleg Drokin, Yuval Elovici, Phantom of the ADAS: Securing Advanced Driver-Assistance Systems from Split-Second Phantom Attacks, CCS '20: Proceedings of the 2020 ACM SIGSAC Conference on Computer and Communications Security October 2020 Pascal Urien – Télécom Paris– Introduction à la Cyber Sécurité"}
{"pack_id": "french_pack", "section_title": "Spectre et Meltdown: insécurité des processeurs", "page": 121, "chunk_id": "french_pack_121_0", "content": "121 Spectre et Meltdown: insécurité des processeurs Attaque Covert Channel liées aux Micro Architectures Publiées en 2017, Spectre114 et Meltdown115 sont deux attaques qui exploitent des canaux cachés de cache (Cache side-channel). Un cache mémoire stocke le contenu d'adresses dans une page indexée par une partie du poids faible de l'adresse (LSB); de multiples pages sont associées à un jeu de poids fort (MSB) différents. Le principe du cache side channel est la mesure de temps de lecture variable selon que la donnée soit présente dans le cache ou pas. La technique dite \"Evict+Reload\" consiste à remplir le cache avant l'exécution du programme de la victime à l'aide d'instructions de lecture mémoire. La technique dite \"Flush+Reload\", utilise une instruction spécifique pour vider le cache, avant l'insertion d'un nouveau contenu. 114 KOCHER, P., GENKIN, D., GRUSS, D., HAAS, W., HAMBURG, M., LIPP, M., MANGARD, S., PRESCHER, T., SCHWARZ, M., AND YAROM, Y. \"Spectre Attacks: Exploiting Speculative Execution\", 2017 115 LIPP, M., SCHWARZ, M., GRUSS, D., PRESCHER, T., HAAS,W., MANGARD, S., KOCHER, P., GENKIN, D., YAROM, Y.,AND HAMBURG, M. \"Meltdown\" 2018 Pascal Urien – Télécom Paris – Introduction à la Cyber Sécurité"}
{"pack_id": "french_pack", "section_title": "Spectre et Meltdown: insécurité des processeurs", "page": 122, "chunk_id": "french_pack_122_0", "content": "122 Un \"covert channel\" (canal caché) désigne tout procédé de communication permettant le transfert d'information de manière illicite. un \"cache side channel\" est donc un covert channel basé sur des temps de réponse. Les processeurs utilisent généralement une technique d'exécution d'instructions dite \"out of order\", selon un algorithme introduit R. M. Tomasulo116 en 1967. Plusieurs unités exécutent les instructions dont les résultats sont par la suite écrits dans une mémoire cache. L'exécution spéculative (Speculative Execution) est une technique utilisée par les processeurs performants qui consiste à prédire un chemin d'exécution probable. Le résultat d'une instruction de test est évalué, et en cas d'échec de cette prédiction, le processeur rétablit le contexte antérieur correct, ce qui ralentit le temps de traitement. Cependant la mémoire cache peut conserver la trace de lecture mémoire. Spectre et Meltdown sont deux procédés d'attaque mettant à profit les techniques Out of Order Execution et Speculative Execution. Spectre utilise une variable d'attaque x, l'adresse de chargement d'un élément du tableau array2, dépend de la valeur array1[x]. Si x est supérieure au nombre d'éléments du tableau array1, le contenu de l'adresse mémoire @array2 + (256+array1[x]) est transféré dans le cache. L'instruction spéculative se comporte comme une sonde permettant d'obtenir de contenu de @array1+x if (x < array1_size) y = array2[array1[x] * 256]; 116 Tomasulo, R. M. An efficient algorithm for exploiting multiple arithmetic units. IBM Journal of research and Development 11, 1 (1967), 25–33. Pascal Urien – Télécom Paris– Introduction à la Cyber Sécurité"}
{"pack_id": "french_pack", "section_title": "Attaques récentes sur le Wi-Fi", "page": 123, "chunk_id": "french_pack_123_0", "content": "123 Escalade de privilège dans Meltdown Meltdown met à profit un bug Intel relatif à une escalade de privilège. L'exécution spéculative d'une exception permet de basculer du mode user vers le mode superviseur. Le mode superviseur accède à toute la mémoire du système, une sonde permet de lire une adresse liée à la valeur d'une donnée par exemple @probe_array + data*4096 Attaques récentes sur le Wi-Fi La norme 802.11 (1999) définit un protocole de sécurité radio, le WEP . Son principe consiste à chiffrer les trames à l’aide de l’algorithme RC4 et d’une clé, obtenue par la concaténation d’un secret partagé (de 40 ou 104 bits) et d’un index transporté en clair dans chaque paquet (un champ de 24 bits, noté IV). RC4 réalise le chiffrement des données en mode flux octets (stream cipher), à partir d’une clé de longueur comprise entre 8 et 2048 bits il génère (à l’aide d’un Pseudo Random Number Generator PRNG) une suite d’octets pseudo aléatoire nommée KeyStream. Cette série d’octets (Ksi) est utilisée pour chiffrer un message en clair (Mi) à l’aide d’un classique protocole de Vernam, réalisant un ou exclusif (xor) entre Ksi et Mi (Ci = Ksi xor Mi). L’intégrité des trames est assurée par le chiffrement du CRC. Cette fonction étant linéaire par rapport à l’opération ou exclusif il est possible de Pascal Urien – Télécom Paris – Introduction à la Cyber Sécurité"}
{"pack_id": "french_pack", "section_title": "Attaques récentes sur le Wi-Fi", "page": 124, "chunk_id": "french_pack_124_0", "content": "124 modifier un bit dans une trame chiffrée tout en recalculant une valeur correcte du CRC, c’est la technique d’attaque dite bit flipping. L’attaque démontrée par Fluhrer et al. en 2001, permet de recouvrer un secret partagé de 104 bits après l’émission d’approximativement quatre millions de trames chiffrées. Elle utilise des valeurs IV dites résolvantes, de la forme (3+B,255,N) avec B un octet du secret partagé et N une valeur quelconque comprise entre 0 et 255. Environ 60 valeurs résolvantes suffisent à retrouver un octet du secret partagé. Un rapide calcul montre que l’on obtient une valeur résolvante toutes les 216 trames, soit 60 occurrences après environ 4 millions de paquets. IEEE 802.11 Four Ways Handshake Un article publié en 2017117 décrit un scénario d'attaque (\"Attaque par réinstallation de clé\") du standard IEEE 802.11i (couramment dénommé WPA2) publié en 2004. Malgré une communauté d'utilisateur massive du Wi-Fi, cette faille de sécurité est donc passée inaperçue pendant 14 ans... Après une procédure d'authentification EAP un secret partagé PMK est calculé par le nœud et le point d'accès. Au terme d'un protocole a quatre passes (Four Ways Handshake) les deux parties mettent en place une connexion sécurisée, l'échange des trames est protégée par le protocole CCMP utilisant une clé AES TK (Temporal Key) et un aléa (le CCMP IV). Les deux premiers paquets du 4 ways handshake comportent deux nombres aléatoires (ANonce et SNonce) et un nombre aléatoire r d'anti rejeu. 117 Mathy Vanhoef, Frank Piessens, \" Key Reinstallation Attacks: Forcing Nonce Reuse in WPA2\", CCS’17, October 30-November 3, 2017, Dallas, TX, USA Pascal Urien – Télécom Paris– Introduction à la Cyber Sécurité"}
{"pack_id": "french_pack", "section_title": "Attaques récentes sur le Wi-Fi", "page": 125, "chunk_id": "french_pack_125_0", "content": "125 Une clé PTK (256 bits) est déduite des deux premiers messages selon la relation : PTK = PRF(PMK, \"Pairwise key expansion\", Min(AA,SA) || Max(AA,SA) || Min(ANonce, SNonce) || Max(ANonce, SNonce) ) AA = Authenticator Address SA = Station Address PRF= Pseudo Random Function La clé de trame (TK) est le poids faible (128 bits) de PTK. Les troisième et quatrième paquets du 4 ways handshake comportent le nombre r+1 (utilisé comme authentifiant) et notifient l'installation (activation) de la clé TK par le point d'accès et le nœud. Par la suite chaque trame MAC chiffrée comporte un Packet Number (PN, 6 octets, initialisé à 1 et incrémenté à chaque paquet). Le paramètre IV (13 octets) de l'algorithme CCMP est déduit de PN et de l'adresse MAC source). Il comprend 1 octets de priorité, l'adresse MAC (6 octets) de source, et le paramètre PN (6 octets) Le paramètre compteur (16 octets) est de la forme : Flag (1octet) || IV || ct (>=0, 2 octets) CCMP utilise le mode AES-CTR, dans lequel une succession de compteurs croissants sont chiffrés; l'information en clair est protégée à l'aide d'un ou exclusif avec les blocs (16 octets) produits par l'algorithme AES. Les messages 3 et 4 peuvent être perdus puisqu'ils sont transportés par des trames MAC. Le rejeu du paquet 3 est donc autorisé, ce qui entraine la réinitialisation des paramètres de chiffrements des trames (PN est remis à Pascal Urien – Télécom Paris – Introduction à la Cyber Sécurité"}
{"pack_id": "french_pack", "section_title": "Attaques sur les fonctions de hash MD5 et SHA-1", "page": 126, "chunk_id": "french_pack_126_0", "content": "126 un). En conséquence on observe un rejeu des blocs (Ksi) de chiffrement produits par l'algorithme l'AES-CTR. Par exemple si le contenu précédent en clair d'un bloc (Cio = Ksi + Mio) du paquet est connu, on retrouve le contenu en clair (Mi) de la trame chiffrée (Ci= Mi + Ksi) après réinstallation grâce à la relation : Mio + (Ksi + Mio) + (Ksi + Mi) = Mi Attaques sur les fonctions de hash MD5 et SHA-1 Une fonction d’empreinte H produit, à partir d’un message M une valeur pseudo aléatoire de p bits (soit 2P empreintes). Les attaques sont classées en trois catégories : - Collision: Trouver un couple (M, M’), tel que H(M) = H(M’) - 1st pré-image, étant donné X, trouver M tel que H(M) = X - 2nd pré-image, étant donné M, trouver M’ tel que H(M’) = H(M) Dans le cas d’un algorithme parfait, la probabilité d’une collision est de 1/2P/2 (en raison du paradoxe des anniversaires) et pour les pré-images 1/2P. En 2004 des collisions MD5 ont été produites avec un coût de 239, et des collisions SHA1 avec un coût théorique de 269. “A paper by Xiaoyun Wang and Dengguo Feng and Xuejia Lai and Hongbo Yu has been posted on Aug 17, 2004 about Collisions for Hash Functions MD4, MD5, HAVAL-128 and RIPEMD, showing collisions for the MD5 hash with the right input vectors”. En 2005 Lenstra et al ont forgé à partir d’un premier certificat X509 (signature MD5) un second certificat qui conserve la signature du premier mais comporte une autre clé RSA publique. En 2008, Stevens et al («Chosen-prefix Collisions for MD5 and Colliding X.509 Certificates for Different Identities») ont introduit une méthode de collision MD5 avec préfixe choisi, qui réalise une collision en environ 250 essais. Cet algorithme appliqué sur une plateforme comportant 200 plays station, permet de cloner un certificat MD5 en un à deux jours. En 2009, lors de la conférence Eurocrypt’2009, Cameron McDonald, Philip Hawkes et Josef Pieprzyk, ont annoncé un algorithme de collision de SHA1 d’une complexité de 252. Pascal Urien – Télécom Paris–"}
{"pack_id": "french_pack", "section_title": "Attaques sur les fonctions de hash MD5 et SHA-1", "page": 126, "chunk_id": "french_pack_126_1", "content": "qui réalise une collision en environ 250 essais. Cet algorithme appliqué sur une plateforme comportant 200 plays station, permet de cloner un certificat MD5 en un à deux jours. En 2009, lors de la conférence Eurocrypt’2009, Cameron McDonald, Philip Hawkes et Josef Pieprzyk, ont annoncé un algorithme de collision de SHA1 d’une complexité de 252. Pascal Urien – Télécom Paris– Introduction à la Cyber Sécurité"}
{"pack_id": "french_pack", "section_title": "Le TOP9 des menaces visant le cloud computing en 2013", "page": 127, "chunk_id": "french_pack_127_0", "content": "127 En 2015118 les premières collisions SHA1 (plus précisément sur la fonction de compression Compr(IV1,M1)= Compr(IV2,M2) )sont publiées par Marc Stevens, Pierre Karpman, et Thomas Peyrin. L'algorithme a une complexité de 258 et nécessite 10 jours de calcul pour un cluster de 64 processeurs (General Purpose Unit - GPU). Quelques TOP10 d'attaques Le TOP9 des menaces visant le cloud computing en 2013 La virtualisation est une technique inventée par IBM dans les années 70, puis déployée par exemple par Microsoft pour Windows95. Cette technologie est basée sur des hyperviseurs capables de gérer plusieurs machines virtuelles. On distingue les hyperviseurs hébergés (\"hosted\") exécutés par un système d’exploitation, ou natifs dans le cas contraire. Le rapport119 \"The Notorious Nine Cloud Computing Top Threats in 2013\" publié en 2013 par le Cloud Security Alliance établit une liste des 9 attaques les plus significatives du Cloud. 118 \"Freestart collision for full SHA-1\" Marc Stevens, Pierre Karpman, and Thomas Peyrin, 2015 119 https://downloads.cloudsecurityalliance.org/initiatives/top_threats/The_Notorious_N ine_Cloud_Computing_Top_Threats_in_2013.pdf Pascal Urien – Télécom Paris – Introduction à la Cyber Sécurité"}
{"pack_id": "french_pack", "section_title": "Le TOP9 des menaces visant le cloud computing en 2013", "page": 128, "chunk_id": "french_pack_128_0", "content": "128 1) La fuite de données. Une équipe de chercheurs américains a démontré une attaque DPA (Differential Power Analysis) entre des machines virtuelles permettant de récupérer des clés cryptographiques privées (\"Cross-VM Side Channels and Their Use to ExtractPrivate Keys\", Yinqian Zhang, Ari Juels, Thomas Ristenpart, Michael K. Reiter, 2012). Le rapport souligne également la possibilité d’extraction d’informations à partir d’un trou de sécurité dans une application cliente de base de données multi parties (multi-tenant). 2) La perte de données. La perte de données peut résulter de problèmes matériels du fournisseur de Cloud, de malveillance (vol de mot de passe, intrusion…) ou de sinistres divers (incendie, inondation, tempêtes,…). 3) Détournement de comptes. En avril 2010, une faille de type Cross-Site Scripting (XSS) a permis à des hackers de récupérer des identifiants de compte Amazon. En 2009, le botnet Zeus s’est propagé sur de nombreux systèmes Amazon. 4) Interfaces et APIs non sécurisés. L’accès aux ressources du cloud implique un contrôle d’accès et des politiques de sécurité basés sur des identifiants. La collecte de ces identifiants via des interfaces ou APIs présentant des failles de sécurité permet le détournement de comptes utilisateurs ou l’abus de privilèges. 5) Le dénis de service. Les attaques DDOS (distributed denial of service) typiquement menées à l’aide de botnets peuvent être internes ou externes au cloud. Une attaque DDoS impacte l’ensemble de clients dont les services sont hébergés par un cloud. 6) Délit d’initié. C’est typiquement un employé ou un ancien employé du fournisseur de Cloud qui accède à des fins malveillantes, aux ressources hébergées. 7) Abus de services. Les services du cloud peuvent être utilisés à des fins malhonnêtes, par exemple pour casser des clés cryptographiques ou héberger des sites illégaux (P2P,…) 8) Manque de compétences. Certaines entreprises n’appréhendent pas suffisamment les compétences requises, notamment en termes de sécurité, pour réaliser une migration de leurs ressources informatiques dans le cloud. 9) Vulnérabilités technologiques. Les hyperviseurs peuvent s’appuyer sur des processeurs présentant des failles de sécurité telles que, escalade de privilèges, ou défaut d’isolation mémoire (Memory Management Unit – MMU). Pascal Urien – Télécom Paris– Introduction à"}
{"pack_id": "french_pack", "section_title": "Le TOP9 des menaces visant le cloud computing en 2013", "page": 128, "chunk_id": "french_pack_128_1", "content": "Certaines entreprises n’appréhendent pas suffisamment les compétences requises, notamment en termes de sécurité, pour réaliser une migration de leurs ressources informatiques dans le cloud. 9) Vulnérabilités technologiques. Les hyperviseurs peuvent s’appuyer sur des processeurs présentant des failles de sécurité telles que, escalade de privilèges, ou défaut d’isolation mémoire (Memory Management Unit – MMU). Pascal Urien – Télécom Paris– Introduction à la Cyber Sécurité"}
{"pack_id": "french_pack", "section_title": "OWASP TOP10 2013", "page": 129, "chunk_id": "french_pack_129_0", "content": "129 OWASP TOP10 2013 Open Web Application Security Project (OWASP, www.owasp.org) est une communauté publique permettant à des organismes de développer, acheter et maintenir des applications fiables. Il publie120 chaque année un rapport sur dix les risques de sécurité WEB les plus critiques: A1- Faille d'injection. Par exemple injection SQL, OS et LDAP. Elle se produit lorsqu'une donnée non fiable est envoyée à un interpréteur, en tant qu'élément d'une commande ou d'une requête. A2 – Violation de Gestion d'Authentification et de Session. Les fonctions applicatives relatives à l'authentification et la gestion de session ne sont souvent pas mises en œuvre correctement. Elles permettent aux attaquants de compromettre les mots de passe, clés, jetons de session, ou d'exploiter d'autres failles d'implémentation afin de s'approprier les identités d'autres utilisateurs. A3 – Cross-Site Scripting (XSS). Les failles XSS se produisent lorsqu'une application accepte des données non fiables et les envoie à un browser web sans validation appropriée. XSS permet à des attaquants d'exécuter un script dans le navigateur de la victime afin de détourner des sessions utilisateur, de modifier des sites web, ou rediriger l'utilisateur vers des sites malveillants. A4 – Références directes non sécurisées à un objet. Une référence directe à un objet se produit quand un développeur expose une référence d'un objet interne, tel que fichier, dossier, enregistrement de base de données, ou clé de base de données. Sans un contrôle d'accès ou autre protection, les attaquants peuvent manipuler ces références pour accéder à des données non autorisées. A5 – Mauvaise configuration Sécurité. Une sécurité pertinente implique une configuration sécurisée définie et déployée pour les applications, contextes, serveurs d'application, serveurs web, serveurs de base de données et la plateformes. Tous ces paramètres doivent être définis, mis en œuvre et maintenus, car beaucoup ne sont pas activés par défaut. Cela implique de tenir tous les logiciels à jour. A6 – Exposition de données sensibles. Beaucoup d'applications web ne protègent pas correctement les données sensibles telles que les cartes de 120 http://www.owasp.org/index.php/Top_10 Pascal Urien – Télécom Paris – Introduction à la Cyber Sécurité"}
{"pack_id": "french_pack", "section_title": "OWASP TOP10 2013", "page": 130, "chunk_id": "french_pack_130_0", "content": "130 crédit, identifiants d'impôt et informations d'authentification. Les pirates peuvent voler ou modifier ces données faiblement protégées, pour réaliser un vol d'identité, de la fraude à la carte de crédit ou autres délits. Les données sensibles nécessitent une protection supplémentaire, par exemple un chiffrement, ainsi que des précautions particulières lors des échanges avec le navigateur. A7 – Manque de contrôle d’accès au niveau fonctionnel. Pratiquement toutes les applications web vérifient les droits d'accès avant de rendre une fonction visible dans l'interface utilisateur. Cependant, les applications doivent effectuer les mêmes vérifications de contrôle d'accès sur le serveur lors de l'accès à chaque fonction. Si les demandes ne sont pas vérifiées, les attaquants seront en mesure de forger des demandes afin d'accéder à une fonction non autorisée. A8 - Falsification de requête inter-site (CSRF). Une attaque CSRF (Cross Site Request Forgery) force le navigateur d'une victime authentifiée à envoyer une requête HTTP forgée, comprenant le cookie de session de la victime ainsi que toute autre information automatiquement inclue, à une application web vulnérable. Ceci permet à l'attaquant de forcer le navigateur de la victime, à générer des requêtes dont l'application vulnérable pense qu'elles émanent légitimement de la victime. A9 - Utilisation de composants avec des vulnérabilités connues. Les composants vulnérables, tels que bibliothèques, contextes et autres modules logiciels fonctionnent presque toujours avec des privilèges maximum. Ainsi, si exploités, ils peuvent causer des pertes de données sérieuses ou une prise de contrôle du serveur. Les applications utilisant ces composants vulnérables peuvent compromettre leurs défenses et permettre une série d'attaques et d'impacts potentiels. A10 – Redirections et renvois non validés. Les applications web réorientent et redirigent fréquemment les utilisateurs vers d'autres pages et sites internet, et utilisent des données non fiables pour déterminer les pages de destination. Sans validation appropriée, les attaquants peuvent réorienter les victimes vers des sites de phishing ou de malware, ou utiliser les renvois pour accéder à des pages non autorisées. Pascal Urien – Télécom Paris– Introduction à la Cyber Sécurité"}
{"pack_id": "french_pack", "section_title": "L’attaque BEAST (2011)", "page": 131, "chunk_id": "french_pack_131_0", "content": "131 Attaques TLS diverses L’attaque par renégociation (2009) En Novembre 2009, Marsh Ray et Steve Dispensa découvrent (Marsh Ray et Steeve Dispensa, phonephactor.com, Renegotiating TLS, nov. 2009, http://www.phonefactor.com/sslgapdocs/Renegotiating_TLS.pdf ) une faille dans le protocole SSL/TLS qu’ils nomment Authentication Gap . Cette faiblesse provient du clivage logiciel des protocoles HTTP et TLS. Lors d’une requête HTTPS ordinaire (sans certificat client), le serveur déchiffre l’entête HTTP et découvre que le fichier requis exige un certificat client. Il initialise alors une deuxième session TLS avec mutuelle authentification. L’attaquant se place en MIM (Man In the Middle) et détourne la première requête HTTPS sans certificat. Il injecte alors sa propre requête HTTP (codée de telle manière à annuler celle qui sera produite ultérieurement par le client légitime. Par la suite il se comporte en un relais passif transportant la deuxième session TLS, avec le certificat client. L’attaque BEAST (2011) En septembre 2011 Juliano Rizzo and Thai Duong ont publié lors de la conférence ekoparty à Buenos Aires une attaque dénommée \"Browser Exploit Against SSL/TLS\" (BEAST). Cette dernière permet de retrouver par comparaison (Oracle) le contenu chiffré d’un entête HTTP, comme par exemple un cookie (utilisé par une session Paypal dans leur article). L’attaque s’appuie sur une propriété d’un chiffrement en mode CBC (Cipher Block Chaining), lorsque la première valeur (IV ) est connu; elle a été 0 analysée en 2006 par Gregory V. Bard (Gregory V. Bard \"Challenging but feasible Block wise-Adaptive Chosen-Plaintext Attack On SSL\", 2006) Soit E un algorithme de chiffrement symétrique (par exemple 3xDES) IV connu 0 C = E { IV exor M }, IV = C 0 0 0 1 0 C = E { IV exor M }, IV = C 1 1 1 2 1 C = E { IV exor M }, IV = C k k k k+1 k La suite des valeurs Ci représente les éléments chiffrés obtenus à partir des blocs en clair Mi. Dans le cas du 3xDES la taille de ces blocs est de 8 octets, soit 64 bits d’entropie (264). L’attaquant connait un prochain IV par l+1 observation des informations"}
{"pack_id": "french_pack", "section_title": "L’attaque BEAST (2011)", "page": 131, "chunk_id": "french_pack_131_1", "content": "E { IV exor M }, IV = C k k k k+1 k La suite des valeurs Ci représente les éléments chiffrés obtenus à partir des blocs en clair Mi. Dans le cas du 3xDES la taille de ces blocs est de 8 octets, soit 64 bits d’entropie (264). L’attaquant connait un prochain IV par l+1 observation des informations préalablement chiffrées. Il injecte la donnée IV exor IV exor M* (IV un IV préalablement observé ou connu) dans le but l+1 j j Pascal Urien – Télécom Paris – Introduction à la Cyber Sécurité"}
{"pack_id": "french_pack", "section_title": "L’attaque Lucky Thirteen (2013)", "page": 132, "chunk_id": "french_pack_132_0", "content": "132 de deviner un bloc précédant en clair M, vérifiant C= E ( IV exor M ) , d’où j j j j l’on déduit C = E ( IV exor IV exor IV exor M* ) = E( IV exor M* ), l+1 l+1 l+1 j j qui est égal à E(IV exor M) pour M*=M j j j Pratiquement l’attaque exige l’observation des valeurs chiffrées sur le réseau (pour collecter les valeurs Ck) et l’injection de données en clair dans le navigateur (via un script dans l’attaque de 2011). La force brute implique cependant l’injection de 264 blocs dans le cas du 3xDES. L’insertion d’octets de bourrage dans l’entête HTTP (de 0 à 7) permet de réduire le nombre d’essais. Par exemple M* = B7 B6 B5 V7 V6 V5 V4 X, permet de retrouver en 256 essais la valeur de l’octet X (de rang 3) les octets de préfixe B assurant le bourrage et ceux de préfixe V étant connus. L’attaque Lucky Thirteen (2013) En 2013 Nadhem J. AlFardan et Kenneth G. Paterson, ont publié une attaque nommée Lucky Thirteen (“Lucky Thirteen: Breaking the TLS and DTLS Record Protocols” Nadhem J. AlFardan and Kenneth G. Paterson, 2013). Cette attaque s’appuie sur un défaut de sécurité des protocoles TLS et DTLS: l’intégrité des octets de bourrage (padding) utilisés pour le chiffrement en mode bloc, n’est pas garantie par un HMAC. Selon les standards TLS et DTLS la structure de padding comprend un champ longueur (un octet L) suivi le de L octets dont la valeur est fixée à L. Par exemple 0x00, 0x01 0x01, 0x02 0x02 0x02, et 0xFF suivi de 255 valeurs à 0xFF. Pascal Urien – Télécom Paris– Introduction à la Cyber Sécurité"}
{"pack_id": "french_pack", "section_title": "L’attaque Lucky Thirteen (2013)", "page": 133, "chunk_id": "french_pack_133_0", "content": "133 Un message DTLS comporte un champ compteur (SQN, 8 octets) et un entête (HDR, 5 octets). L’ensemble SQN || HDR possède donc une longueur de 13 octets. L’attaque Lucky Thirteen est du type \"Distinguishing attack\", c’est-à-dire que l’attaquant est capable de distinguer le chiffrement de deux messages M0 et M1. Considérons deux charges DTLS, Payload0 (P0) et Payload1 (P1) P0 = 32 octets + 256 x 0xFF (soit 256 octets de padding) P1 = 287 octets + 0x00 (soit un octet de padding) Soit 18 blocs de 16 octets (288 octets), chiffrés par l’algorithme AES (en mode CBC 128 bits) Les messages DTLS M0 et M1 transportant ces charges (P0, P1) comprennent le préfixe SQN || HDR et le suffixe T || Padding. Soit M0 = SQN || HDR || P0 || T || pad M1 = SQN || HDR || P1 || T || pad L’attaquant observe M = SQN || HDR || Pi || T || pad Il forge M’ = SQN || HDR || Pi, ce message est traité par le protocole DTLS Si la charge est égale à P0, le message M’ est interprété après déchiffrement comme 12 octets de payload + 20 octets de HMAC-SHA1 et 256 octets de padding. Si la charge est égale à P1, le message M’ est interprété après déchiffrement comme 267 octets de payload + 20 octets HMAC-SHA1 + 1 octet de padding. Les temps de calcul du HMAC sont en conséquence différents. L’attaquant souhaite obtenir la valeur en clair (P4) d’un bloc chiffré de 16 octets (C4), il a également observé la valeur C’ utilisée lors d’un précédent chiffrement en mode CBC (dans la séquence C’ || C4) C4 = E (P4 exor C’) (E=chiffrement) Pascal Urien – Télécom Paris – Introduction à la Cyber Sécurité"}
{"pack_id": "french_pack", "section_title": "Attaque TLS Triple Handshake (2014)", "page": 134, "chunk_id": "french_pack_134_0", "content": "134 L’attaquant forge une valeur C’ exor X (X une valeur comprise entre 0 et FF), puis un message comportant 4 blocs de 16 octets (C1, C2, C’exor X, C4) M= SQN || HDR || C1 || C2 || (C’ exor X) || C4 (soit 64+13=77 octets) Le protocole DTLS déchiffre la valeur (D= déchiffrement) P4’ = D(C4) exor (C’ exor X) = (P4 exor C’) exor C’ exor X = P4 exor X Si le dernier octet de P4’ est 0, le protocole DTLS interprète M comme un message de de 13 + 43 octets (soit 56 octets) suivi d’un HMAC de 20 octets et d’un octet de padding (4x16= 64 = 43 + 20 + 1). Le calcul du HMAC s’applique donc à 56 octets Si le dernier octet de P4’ indique une longueur de padding dont la structure est correcte (par exemple 0x01 0x01, la suite la plus probable) le calcul du HMAC s’applique à 55 octets au plus. L’algorithme HMAC utilise deux blocs de 64 octets pour une longueur inférieure à 55 et au moins trois blocs de 64 octets dans le cas contraire. Cette différence provient de l’ajout de 8 octets (indiquant la taille originale) par l’algorithme SHA1 au message à traiter. Si la structure du padding est incorrecte, le message est considéré sans padding, le calcul du HMAC s’applique à 57-octets (57= 77-20) Dans tous les cas de calcul HMAC détecte une intégrité erronée, et un message d’erreur est généré. Le cas d’un padding de longueur supérieur à un, implique un temps calcul plus court. Attaque TLS Triple Handshake (2014) Cette attaque121 a été publiée le 4 mars 2014 par une équipe de recherche de l’INRIA Rocquencourt. Elles un basée sur un serveur MIM malveillant. Le principe de l'attaque est de forger un pre-mastersecret (PMS) identique pour un serveur MIM malveillant et un serveur licite lors d'une session TLS full. Par la suite le serveur MIM est capable de déchiffrer les messages des sessions en mode resume 121 https://secure-resumption.com/ Pascal Urien – Télécom Paris– Introduction à la Cyber Sécurité"}
{"pack_id": "french_pack", "section_title": "L’attaque RC4 du L’attaque Royal Holloway (2013)", "page": 135, "chunk_id": "french_pack_135_0", "content": "135 HeartBleed (2014) HeartBleed est un bug du logiciel OPENSSL détecter en 1014, qui permet de lire un bloc aléatoire de mémoire de 64ko. Heartbeat (RFC 6520) est un protocole transporté par la couche RecordLayer de TLS, dont il teste le bon fonctionnement grâce à un mécanisme d'écho. Il existe deux types de messages, requête et réponse. Le premier écrit un bloc de données en mémoire, le deuxième lit le bloc précédemment écrit. struct { HeartbeatMessageType type; uint16 payload_length; opaque payload[HeartbeatMessage.payload_length]; opaque padding[padding_length]; } HeartbeatMessage; Le bug provient du fait que la taille du bloc d'une requête (payload_length) n'est pas vérifiée. La lecture associée (dont la taille de bloc est identique) permet d'obtenir une zone mémoire aléatoire (jusqu'a 64 Ko) L’attaque RC4 du L’attaque Royal Holloway (2013) RC4 est l’algorithme le plus utilisé par le protocole TLS. L’attaque Royal Holloway, publiée en juillet 2013 par un groupe de chercheurs (\"On the Pascal Urien – Télécom Paris – Introduction à la Cyber Sécurité"}
{"pack_id": "french_pack", "section_title": "créa en 1971 le premier microprocesseur 4 bits (le 4004, comportant", "page": 136, "chunk_id": "french_pack_136_0", "content": "136 Security of RC4 in TLS and WPA\", Nadhem J. AlFardan, Daniel J. Bernstein, Kenneth G. Paterson, Bertram Poettering, Jacob C. N. Schuldt) repose sur l’existence de polarisations (\"biais\") simple octet ou double octet observés pour l’algorithme RC4. Une polarisation simple octet est la probabilité d’obtenir un octet Ksi au rang i, avec i >=1. Pour un générateur pseudo aléatoire idéal cette probabilité est de 1/256 (0,390625 %). Cette probabilité a été estimée de manière expérimentale à l’aide d’une distribution 244 keystreams Ksi utilisant des clés de 128 bits. Une polarisation significative est observée pour tous les octets Ksi pour des rangs inférieurs à 256. Par exemple le 32ième octet a une probabilité de 0,4% d’avoir pour valeur 224 L’attaque nécessite le chiffrement d’un message identique par un nombre 2n de sessions utilisant des clés de 128 bits différentes. 226 sessions permettent de retrouver les 80 premiers octets avec une probabilité d’au moins 50 %. 232 sessions permettent de retrouver les 256 premiers octets avec une probabilité d’au moins 96%. Une polarisation double octet est la probabilité d’obtenir une valeur Ksi+1 au rang i+1 connaissant la valeur Ksi au rang i. Dans le cas d’un générateur pseudo aléatoire idéal, cette probabilité est de 1/256. L’attaque nécessite le chiffrement d’un message identique par un nombre 2n de sessions utilisant des clés de 128 bits différentes. Le premier octet du message en clair est connu, le but de l’attaquant est d’obtenir la valeur des 16 octets suivants. Au-delà de 11.230 sessions le message en clair est récupéré avec une probabilité de 99%. Pascal Urien – Télécom Paris– Introduction à la Cyber Sécurité"}
{"pack_id": "french_pack", "section_title": "En 1957, Ingénieur allemand KARL STEINBUCH crée le terme « Informatik » pour", "page": 1, "chunk_id": "french_pack_1_0", "content": "See discussions, stats, and author profiles for this publication at: https://www.researchgate.net/publication/361678319 COURS D'INFORMATIQUE GENERALE By Prof. YENDE R. Grevisse Book · July 2022 CITATIONS READS 0 69,081 1 author: Yende Raphael Grevisse Université Notre Dame du Kasayi (UKA / DRC) 84 PUBLICATIONS 53 CITATIONS SEE PROFILE All content following this page was uploaded by Yende Raphael Grevisse on 01 July 2022. The user has requested enhancement of the downloaded file."}
{"pack_id": "french_pack", "section_title": "Automatiser un service revient à lui donner des règles de gestion des informations qui y", "page": 2, "chunk_id": "french_pack_2_0", "content": "Dr. YENDE RAPHAEL Grevisse, PhD. Docteur en Télécoms et Réseaux Informatiques. Cours dispensé à l’Université Islamique au Congo / Butembo en première Licence: (Tronc commun). ©YENDE R.G., 2022"}
{"pack_id": "french_pack", "section_title": "Automatiser un service revient à lui donner des règles de gestion des informations qui y", "page": 3, "chunk_id": "french_pack_3_0", "content": "1 AVERTISSEMENTS Ce support d’« INFORMATIQUE GENERALE » du Professeur Docteur YENDE RAPHAEL Grevisse, demande avant tout, un certain entendement de l’informatique et des connaissances de base des nouvelles technologies de l’information et de la communication. Spécialement une prédisposition d’analyse inéluctable et cartésienne ; Vu que l’apport de ce cours, met l’accent sur les concepts base en informatique reposant sur une compréhension technique approfondie de la gestion des matériels informatiques et leurs modes de communication modernes. Le cours d’INFORMATIQUE GENERALE se veut pour objectif primordial double : d’un côté, de donner aux étudiants de premier graduat (tronc commun), une acclimatation basique d’une vue d’ensemble de l’informatique (du point de vue historique, du point de vue des concepts et du point de vue des techniques) ; et de l’autre côté ; de donner un aperçu de l’utilité (importance) de l’informatique dans son application quotidienne de manière professionnelle, académique et sociale. Ce cours est soumis aux droits d’auteur et n’appartient donc pas au domaine public. Sa reproduction est cependant autorisée à condition de respecter les conditions suivantes : * Si ce document est reproduit pour les besoins personnels du reproducteur, toute forme de reproduction (totale ou partielle) est autorisée à la condition de citer l’auteur. * Si ce document est reproduit dans le but d’être distribué à des tierces personnes, il devra être reproduit dans son intégralité sans aucune modification. Cette notice de copyright devra donc être présentée ; De plus, il ne devra pas être vendu. * Cependant, dans le seul cas d’un enseignement gratuit, une participation aux frais de reproduction pourra être demandée, mais elle ne pourra être supérieure au prix du papier et de l’encre composant le document. Copyright © 2021 Dr. YENDE RAPHAEL Grevisse; all rights reserved. Toute reproduction sortant du cadre précisé est prohibée. (+243 97-5433-414, 082-150-2845, grevisse29@gmail.com) Prof. Dr. YENDE RAPHAEL Grevisse, PhD. Cours d’Informatique Générale / UNIBAS"}
{"pack_id": "french_pack", "section_title": "INTRODUCTION", "page": 4, "chunk_id": "french_pack_4_0", "content’INFORMATIQUE ..................................................................... 6 I.1. Définition .......................................................................................................................................... 6 I.2. Historique de l’informatique ....................................................................................................... 7 I.3. Subdivision de l’Informatique .................................................................................................... 9 I.4.1. Information ........................................................................................................................ 10 I.4.2. Données ............................................................................................................................... 10 I.4.3. Traitement de l’information ...................................................................................... 10 I.4.4. Système informatique ................................................................................................... 11 I.4.5. Système d’information ................................................................................................. 12 I.5. Langages informatiques ....................................................................................................... 12 CHAPITRE II. INTRODUCTION A L’ORDINATEUR ......................................................................... 15 II.0. Introduction .................................................................................................................................. 15 II.1. Définition et contexte d’étude ................................................................................................. 16 II.2. Caractéristiques de l’ordinateur. ............................................................................................ 18 II.3. Fonctions d'un ordinateur ........................................................................................................ 18 II.4. Générations des ordinateurs ................................................................................................... 19 II.5. Classification des ordinateurs ................................................................................................ 22 II.6. ELEMENTS CONSTITUTIFS DE L’ORDINATEUR ............................................................... 24 II.6.1. Architecture matérielle .............................................................................................. 24 CHAPITRE III. CODAGE ET REPRESENTATION DES INFORMATIONS ................................... 39 III.1. Représentation des informations ................................................................................. 39 I.2. Représentation des données .............................................................................................. 40 III.3. Les systèmes de numération .......................................................................................... 42 III.3.1. Le système décimal ..................................................................................................... 43 III.3.2. Le système binaire ...................................................................................................... 43 III.3.3. Le système octal........................................................................................................... 45 III.3.4. Le système hexadécimal ........................................................................................... 47 Prof. Dr. YENDE RAPHAEL Grevisse, PhD. Cours d’Informatique Générale / UNIBAS"}
{"pack_id": "french_pack", "section_title": "INTRODUCTION", "page": 5, "chunk_id": "french_pack_5_0", "content": "3 III.4. Codage des caractères ....................................................................................................... 48 III.4.1. Le code DCB (Décimal codé binaire). .................................................................. 48 III.4.2. Le code Baudot .............................................................................................................. 48 III.4.3. Le code ASCII ................................................................................................................. 48 III. 4.4. Le code EBCDIC........................................................................................................... 49 CHAPITRE IV. NOTIONS SUR LES SYSTEMES D’EXPLOITATION ........................................... 50 IV.1. Définition et contexte d’étude ....................................................................................... 50 IV.2. Objectifs des systèmes d’exploitation ........................................................................ 51 IV.3 Fonctions d’un système d’exploitation ....................................................................... 51 IV.4. Typologie des systèmes d’exploitation ...................................................................... 53 CHAPITRE V. NOTIONS SUR LES LOGICIELS INFORMATIQUES ............................................. 57 V.1. Définition et contexte d’étude ........................................................................................ 57 V.2. Caractéristiques d’un bon logiciel .................................................................................. 57 V.3. CLASSIFICATION DE LOGICIELS .................................................................................... 59 CHAPITRE VI. NOTIONS SUR L’INTERNET ET WWW................................................................... 64 VI.1. Definition et Context etude ............................................................................................ 64 VI.2. Historique de l’Internet ..................................................................................................... 64 VI.3. Les protocoles utilisés sur Internet ............................................................................. 66 VI.4. Finalités de l’Internet ........................................................................................................ 67 VI.5. Avantages de l’Internet ..................................................................................................... 68 VI.6. Inconvénients de l’Internet ............................................................................................. 69 VI.7. Le WWW .................................................................................................................................... 70 VI.4.1. Services web ................................................................................................................... 70 BIBLIOGRAPHIE ................................................................................................................................... 71 Prof. Dr. YENDE RAPHAEL Grevisse, PhD. Cours d’Informatique Générale / UNIBAS"}
{"pack_id": "french_pack", "section_title": "I.1. Définition", "page": 6, "chunk_id": "french_pack_6_0", "content": "4 INTRODUCTION De nos jours, l’évolution des nouvelles technologies a donnée naissance à un mode de gestion des ressources assez rentable. Vue ses aboutissements et la nécessité de faire communiquer les différentes services d’une entreprise ; l’informatique est devenu non seulement un monde à part avec son propre vocabulaire qui pris des ailes avec le temps mais également l‘informatique est de plus en plus obligatoire. La nécessité d'aller plus vite et d'être de plus en plus pointu dans le traitement de l'information a favorisé l'introduction de l'informatique dans tous les domaines d'activités de la vie. Aucun domaine n'échappe aux jours d’aujourd’hui à cette révolution technologique, qui au fil des jours s'affiche comme un outil indispensable de travail. Le besoin de répartition et de disponibilité de l'information à tous les postes des entreprises a entraîné l'émergence et la multiplication des réseaux locaux qui entraînent le besoin d'interconnexion. Raison pour laquelle un nouveau challenge s'offre aux professionnels de l'informatique : celui d'interconnecter les réseaux locaux entre eux afin que l'emplacement géographique ne soit plus un handicap pour l'accès aux informations. Par ailleurs, cette évolution a suscité une révolution de telle manière que les informations circulent d’un bout à l’autre du monde en temps record comme si nous habitons tous un même endroit. Ainsi, le monde est devenu un petit village planétaire. D’où, la nécessité de mobilisation des efforts et ressources pour la mise en place des systèmes adéquats afin de rendre disponible et accessible les informations par tous, à n’importe quel moment et à n’importe quel point du globe terrestre. En effet, grâce aux Nouvelles Technologies de l’Information et de la Communication (NTIC) ; les liens entre les entreprises deviennent de plus en plus étroits et les métiers se transforment. Ainsi, le monde du travail devient de plus en plus petit grâce aux rapprochements issus de ces derniers. Les progrès de l’informatique rendent possible le traitement des informations de façon diversifiée. De plus, les progrès des techniques de transmission permettent de transférer sur un même support ces informations variées. Les frontières entre les différents réseaux tendent à s’estomper. Par exemple, le réseau"}
{"pack_id": "french_pack", "section_title": "I.1. Définition", "page": 6, "chunk_id": "french_pack_6_1", "content": "monde du travail devient de plus en plus petit grâce aux rapprochements issus de ces derniers. Les progrès de l’informatique rendent possible le traitement des informations de façon diversifiée. De plus, les progrès des techniques de transmission permettent de transférer sur un même support ces informations variées. Les frontières entre les différents réseaux tendent à s’estomper. Par exemple, le réseau Internet, initialement destiné exclusivement à la transmission de données, transmet dorénavant des communications téléphoniques sur les supports mobiles. L’informatique apporte une solution à Prof. Dr. YENDE RAPHAEL Grevisse, PhD. Cours d’Informatique Générale / UNIBAS"}
{"pack_id": "french_pack", "section_title": "I.2. Historique de l’informatique", "page": 7, "chunk_id": "french_pack_7_0", "content": "5 des besoins de traitement automatisé des informations multiples qui rendent foisonnant ce domaine. Ce cours d’informatique générale traite des notions fondamentales et indispensables pour la compréhension et la maîtrise de la micro-informatique afin de permettre à l’étudiant de se familiariser avec les différentes terminologies et les techniques de communication moderne. Il sera donc appelé à comprendre puis à maîtriser différentes techniques du traitement automatisé des informations, ainsi que développer les capacités d’organisation, de conception, d’analyse et de gestion des différents types d’informations au sein de l’entreprise. Notons que ce support ne s‘adresse pas seulement aux débutants en informatique mais aussi aux utilisateurs de l‘ordinateur, soucieux de se perfectionner dans cette science qui, de plus en plus, devient incontournable dans tous les domaines de la vie courante. Ainsi, ce cours prône l’objectif principal de donner une vue d’ensemble de l’informatique (le point de vue historique, le point de vue des concepts et le point de vue des techniques) ; et un aperçu de l’utilité de l’informatique dans son intégration dans la vie professionnelle, académique, sociale et personnelle. De manière spécifique, ce cours vise à : Dr. YENDE RAPHAEL Grevisse, PhD. Docteur en Télécoms et Réseaux Informatiques. Professeur associé Prof. Dr. YENDE RAPHAEL Grevisse, PhD. Cours d’Informatique Générale / UNIBAS"}
{"pack_id": "french_pack", "section_title": "I.2. Historique de l’informatique", "page": 8, "chunk_id": "french_pack_8_0", "content": "6 CHAPITRE I. GENERALITES SUR L’INFORMATIQUE I.1. Définition Contrairement à la plupart des disciplines scientifiques, il n’existe pas d’équivalent anglais du terme français informatique. Ce terme revêt plutôt deux sens chez les anglophones : − Electronic Data Processing (traitement électronique de données), met l’accent sur l’objet manipulé ; il s‘agit du côté pratique ; − Computer Science (science de l’ordinateur), met en évidence la machine qui permet la manipulation de l’information. C’est un aspect théorique. Le mot « Informatique »1 a été proposé officiellement par l’ingénieur français Philippe DREYFUS en 1962 (normalisé en 1966), Cependant, une controverse relate que le mot « informatique » a été pour la première fois prononcé par l’ingénieur allemand KARL STEINBUCH en 1957. Par ailleurs, En juillet 1968 le mot fût repris dans le discours d'un ministre allemand, M. STOLTENBERG, sous la forme germanisée « informatik ». De fil en aiguille le mot s'est rapidement répandu dans plusieurs pays d'Europe : « informática » en Espagne et au Portugal ; « informatica » en Hollande et en Italie ; « informatik » en Norvège ; « informatika » en Hongrie, Russie et Slovaquie. Les anglo-saxons et américains préfèrent généralement le terme « computer science – science des ordinateurs » mais le terme « informatics » est parfois usité en Grande-Bretagne et certains pays francophones. Par ailleurs, Le terme « informaticien » est donc un terme générique désignant une personne dont le travail est en grande partie lié à l'informatique. L’informatique est un mot valise composé de deux concepts : Information et Automatique. Ainsi donc, l’informatique peut être considérée comme une automatisation de l'information, ou plus exactement un traitement automatique de l'information. L'information désigne ici tout ce qui peut être traité par une machine (textes, nombres, images, sons, vidéos...). L'outil utilisé pour traiter l'information de manière automatique s'appelle un ordinateur. 1 En 1957, Ingénieur allemand KARL STEINBUCH crée le terme « Informatik » pour son essai intitulé « Informatik: Automatische Informationsverarbeitung », pouvant être rendu en français par « Informatique : traitement automatique de l'information » … En mars 1962, Ingénieur français Philippe Dreyfus, ancien directeur"}
{"pack_id": "french_pack", "section_title": "I.2. Historique de l’informatique", "page": 8, "chunk_id": "french_pack_8_1", "content": "images, sons, vidéos...). L'outil utilisé pour traiter l'information de manière automatique s'appelle un ordinateur. 1 En 1957, Ingénieur allemand KARL STEINBUCH crée le terme « Informatik » pour son essai intitulé « Informatik: Automatische Informationsverarbeitung », pouvant être rendu en français par « Informatique : traitement automatique de l'information » … En mars 1962, Ingénieur français Philippe Dreyfus, ancien directeur du Centre national de calcul électronique de BULL, utilise pour la première fois en France le terme « Informatique » pour son entreprise « Société d'informatique appliquée ». Prof. Dr. YENDE RAPHAEL Grevisse, PhD. Cours d’Informatique Générale / UNIBAS"}
{"pack_id": "french_pack", "section_title": "I.3. Subdivision de l’Informatique", "page": 9, "chunk_id": "french_pack_9_0", "content": "7 Selon la définition acceptée par l’Académie Française : « l’informatique est une « science du traitement rationnel, notamment par machines automatiques, de l'information considérée comme le support des connaissances humaines et des communications dans les domaines techniques, économiques et sociaux ». Selon I.B.M (International Business Machine), « l‘informatique est définie comme étant l‘ensemble de disciplines techniques et scientifiques spécialement applicables à la conception et à l‘utilisation des machines de traitement de l‘information et l’ordinateur est l’outil privilégié ». Dans le contexte de ce cours, « l’informatique est la science du stockage, du traitement et de la transmission de l’information ». Et donc, elle désigne trois concepts : une science, un art et une technique. − Elle est une science quand elle est orientée vers la recherche de la vérité. Ici, elle est la science renfermant les normes et techniques de traitement de l’information. Ces normes et techniques sont de règles de jeu qui permettent à l’informatique d’automatiser l’information2. Pour arriver à son objectif ; l‘informatique utilise un outil appelé « l‘ordinateur ». − Elle est une technique dans la mesure où c‘est une application de l’électronique. − Elle est un art parce qu’elle permet à l’esprit humain à se révéler c.à.d. le génie humain. I.2. Historique de l’informatique L’histoire de l'informatique est l’histoire de la science du traitement rationnel, notamment par machines automatiques, de l'information considérée comme le support des connaissances humaines et des communications dans les domaines techniques, économiques et sociaux et professionnelle. L'histoire de l'informatique a commencé bien avant la discipline moderne des sciences informatiques, généralement par les mathématiques ou la physique. Les développements des siècles précédents ont évolué vers la discipline que nous connaissons aujourd'hui sous le nom d'informatique. Cette progression, des inventions mécaniques et des théories mathématiques vers les concepts et les machines informatiques modernes, a conduit au développement d'un domaine académique majeur, à un progrès technologique spectaculaire à travers le monde occidental et à la base d'un commerce et d'une culture mondiale massive. Chronologiquement, voici quelques dates importantes : 2 Automatiser un service revient à lui donner des règles de gestion des informations qui"}
{"pack_id": "french_pack", "section_title": "I.3. Subdivision de l’Informatique", "page": 9, "chunk_id": "french_pack_9_1", "content": "théories mathématiques vers les concepts et les machines informatiques modernes, a conduit au développement d'un domaine académique majeur, à un progrès technologique spectaculaire à travers le monde occidental et à la base d'un commerce et d'une culture mondiale massive. Chronologiquement, voici quelques dates importantes : 2 Automatiser un service revient à lui donner des règles de gestion des informations qui y circulent. Informatiser un service va plus loin que le simple fait d‘automatiser par le fait qu‘en plus d‘automatisation ; on lui dompte de l‘outil qui est l‘ordinateur. Prof. Dr. YENDE RAPHAEL Grevisse, PhD. Cours d’Informatique Générale / UNIBAS"}
{"pack_id": "french_pack", "section_title": "I.4.3. Traitement de l’information", "page": 10, "chunk_id": "french_pack_10_0", "content": "8 − Vers 500, les civilisations méditerranéennes utilisent l’abaque pour effectuer des calculs, tandis que le boulier est d’usage en Chine et au Japon. − En 1614, NEPER présente sa théorie des logarithmes : les tables de Neper permettent de transformer des multiplications compliquées en simple additions. − En 1641, Blaise PASCAL (âgé alors de 19 ans) invente la machine à calculer nommée « Pascaline » ne pouvant effectuer que deux opérations (l’addition et la soustraction) avec des nombres de 6 chiffres, destinée à aider son père qui était percepteur. − En 1673, Gottfried Wilhelm LEIBNIZ (1646-1716) modifia la « Pascaline » en y ajoutant la multiplication, la division ainsi que l’extraction de la racine carrée. LEIBNIZ inventa aussi le système binaire, système de numération qui sera approprié aux futurs ordinateurs. − En 1728, l’ingénieur Français FALCON construisit une commande de métier à tisser à l’aide d’une planchette de bois muni de trous. Il s’agit de la première machine capable d’exécuter un programme. − En 1806, Joseph Marie JACQUARD perfectionne le système de FALCON en remplaçant les planches par des cartes perforées. − En 1812, le mathématicien anglais Charles BABBAGE (1792-1871) conçoit une machine différentielle et appareil mécanique pouvant effectuer des calculs mathématiques simples avec une précision pouvant atteindre 31 chiffres. Il fut abandonné cette construction pour des raisons financières. Plus tard, il conçoit une machine analytique à cartes perforées afin d’effectuer des calculs plus compliqués. Cette réflexion sur la mécanisation du calcul annonce l’informatique. − En 1936, Alan Turing infirme la théorie de Kurt GODEL et démontre qu’on ne peut pas tout calculer de manière automatique. Il imagine pour sa démonstration un outil qui inspire encore le fonctionnement de nos ordinateurs. Une machine universelle qui manipule des informations des lettres ou des chiffres suivant des règles définies dans une table. C’est la machine de Turing. − En 1937 : la mise au point de Mark I d'IBM (International Business Machines) permet de calculer 5 fois plus vite que l'homme. Il est constitué de 3300 engrenages, 1400 commutateurs et 800 km de fil. Les engrenages seront remplacés en 1947 par"}
{"pack_id": "french_pack", "section_title": "I.4.3. Traitement de l’information", "page": 10, "chunk_id": "french_pack_10_1", "content": "lettres ou des chiffres suivant des règles définies dans une table. C’est la machine de Turing. − En 1937 : la mise au point de Mark I d'IBM (International Business Machines) permet de calculer 5 fois plus vite que l'homme. Il est constitué de 3300 engrenages, 1400 commutateurs et 800 km de fil. Les engrenages seront remplacés en 1947 par des composants électroniques. − En 1943 : le Colossus 1 est mis au point en Angleterre, durant la Deuxième guerre mondiale. Prof. Dr. YENDE RAPHAEL Grevisse, PhD. Cours d’Informatique Générale / UNIBAS"}
{"pack_id": "french_pack", "section_title": "I.4.4. Système informatique", "page": 11, "chunk_id": "french_pack_11_0", "content": "9 − En 1948 : Invention du transistor qui va permettre de rendre les ordinateurs moins encombrants et moins coûteux. − En 1949 : mise au point de l’UNIVAC (UNIVersal Automatic Computer). Il utilise des bandes magnétiques en remplacement des cartes perforées. Il est composé de 5000 tubes, sa mémoire est de 1000 mots de 12 bits, il peut réaliser 8333 additions ou 555 multiplications par seconde. Sa superficie au sol est de 25m². − En 1958 : mise au point du circuit intégré, qui permet de réduire encore la taille et le coût des ordinateurs. − En 1960 : la mise au point du premier ordinateur à base de transistors : l’IBM 7000. − Aujourd'hui..., les ordinateurs parlent, entendent, voient et se déplacent. Et au XXIème siècle...des ordinateurs qui pensent. Cependant, les chercheurs américains partent du principe que les ordinateurs actuels, même les plus puissants, ne seront jamais aussi intelligents qu'un cerveau vivant. Il faut donc inventer des ordinateurs capables de penser par eux- mêmes et plus seulement d'exécuter un programme écrit par l'homme. I.3. Subdivision de l’Informatique L’informatique qui est née de la physique, l’électronique, Mathématiques et autres domaines très complexes de la science est une science à l’intérieur de laquelle, on dénombre plusieurs disciplines, dont on subdivisera en cinq domaines : 1. L’informatique formelle (Analytique) : c’est un domaine qui s’applique à la résolution des problèmes mathématiques. C’est grâce à ce domaine que l’informatique peut résoudre les problèmes tels que : les calculs d’erreurs, les tissages des courbes, les problèmes statistiques (moyennes, écart-type, variances, corrélations, …) 2. L’informatique systématique et logique : c’est un domaine qui étudie les architectures des systèmes informatiques dans lesquelles interviennent les ordinateurs, les réseaux d’interconnexions des ordinateurs, … 3. L’informatique physique et technologique : c’est un domaine qui étudie les différentes réalisations des composants et sous-ensembles électroniques, électriques et mécaniques qui entrent dans la réalisation des matériels des ordinateurs et de leurs périphériques. 4. L’informatique méthodologique : c’est un domaine qui s’occupe de la recherche sur les méthodes de programmation et d’exploitation des systèmes informatiques. C’est dans ce contexte, qu’il faut placer"}
{"pack_id": "french_pack", "section_title": "I.4.4. Système informatique", "page": 11, "chunk_id": "french_pack_11_1", "content": "technologique : c’est un domaine qui étudie les différentes réalisations des composants et sous-ensembles électroniques, électriques et mécaniques qui entrent dans la réalisation des matériels des ordinateurs et de leurs périphériques. 4. L’informatique méthodologique : c’est un domaine qui s’occupe de la recherche sur les méthodes de programmation et d’exploitation des systèmes informatiques. C’est dans ce contexte, qu’il faut placer le « génie logiciel ». Prof. Dr. YENDE RAPHAEL Grevisse, PhD. Cours d’Informatique Générale / UNIBAS"}
{"pack_id": "french_pack", "section_title": "I.5. Langages informatiques", "page": 12, "chunk_id": "french_pack_12_0", "content": "10 5. L’informatique appliquée (à un domaine particulier) : c’est un ensemble des sous-domaines non-répertoriés ; on y trouve : La conception assistée par un ordinateur, informatique documentaire, informatique de gestion (administrative, commerciale, industrielle, financière), automatisation de la production (application industrielle), télécommunication, informatique médicale, informatique juridique et jurisprudence, intelligence artificielle, Musique assistée par l’ordinateur, Enseignement assisté par ordinateur, etc. I.4. Système informatique et Système d’information I.4.1. Information Une « information » est tout élément de connaissance représentés par des signes et symboles de manière conventionnelle pour être conservé, traité ou communiqué. En informatique de gestion, une « information » est la représentation subjective d’un fait, d’une situation, d’un évènement sous forme conventionnelle qui en assure la permanence et facilite le maniement ainsi que la transformation. Elle est l‘ensemble de l‘entité, l‘attribut ainsi que les valeurs. I.4.2. Données Par contre, Une « donnée » est une unité élémentaire dans le processus de prise de décision. C'est un renseignement sur un sujet donné. Elle peut être comprise comme un fait, une notion ou une instruction représentée sous forme conventionnelle convenant à la communication, à l‘interprétation, ou à un traitement par l‘homme ou par des moyens automatiques. La donnée peut être écrite ou audible En informatique, le concept information est compris comme l‘ensemble de données pouvant être traitées par un système informatique. Autrement dit, c’est la représentation des informations au moyen d’un ordinateur. I.4.3. Traitement de l’information En informatique, traiter l‘information signifie : − Recueillir l’information : On dispose de deux grandes sources d‘alimentation en informations : les sources internes et les sources externes. Face à ces sources d‘information le système d‘information remplit les tâches d‘écoute, d‘analyse et de saisie. La tâche d‘écoute se double généralement d‘une tâche d‘analyse critique de la masse d‘information accessibles afin d‘éliminer toute source d‘information et toute information peu pertinente ou de qualité insuffisante. Ce n‘est qu‘après ces tâches, qu‘elle peut procéder à l‘encodage des informations. Prof. Dr. YENDE RAPHAEL Grevisse, PhD. Cours d’Informatique Générale / UNIBAS"}
{"pack_id": "french_pack", "section_title": "I.5. Langages informatiques", "page": 13, "chunk_id": "french_pack_13_0", "content": "11 − Mémoriser l’information : Une foi saisie, l‘information doit être stockée de manière durable et stable bien que parfois, elle est stockée au fur et à mesure de la saisie. Le système d‘information met en œuvre des moyens techniques et organisationnels (méthodes d‘archivage, de protection contre le piratage ou la destruction, etc.). Aujourd‘hui la mémorisation des informations se fait au moyen de deux techniques principales : les fichiers et les bases de données. − Exploiter l’information : Une fois mémorisée, l‘information, on peut appliquer à l‘information tout une série d‘opérations. Ces opérations de traitement consistent à :  Consulter les informations : les rechercher, les sélectionner, …  Organiser les informations : les trier, les fusionner, les partitionner, …  Mettre à jour les informations : les modifier (sur la forme et le contenu), les supprimer, etc.  Produire de nouvelles informations : informations calculées (suite à de calculs arithmétiques ou de calculs logiques) cumuls, etc. − Diffuser l’information : La diffusion consiste à mettre à la disposition de ceux qui en ont besoin, au moment où ils en ont besoin et sous une forme directement exploitable, l‘ensemble des informations qui leur permettront d‘assurer leurs activités. Les supports de cette diffusion sont soit le support oral, le support papier, le support électronique ou magnétique I.4.4. Système informatique Un système informatique se compose d‘une part du matériel informatique (ordinateur ou hardware), d‘autre part des programmes (logiciel ou software) et des hommes indispensables au fonctionnement du matériel. Un système informatique est donc composé des éléments suivants :  L’ordinateur et ses périphériques : ou Hardware : C‘est la partie palpable de l‘ordinateur ou sa quincaillerie.  Les logiciels et programmes d’application : ou Software : C‘est la partie invisible qui est la suite d‘instructions permettant à l‘utilisateur de communiquer avec l‘ordinateur.  L’homme : C‘est l‘élément le plus important du système informatique. Il se compose de tout ce monde chargé de manipuler l‘ordinateur en vue de profiter de sa puissance pour des buts précis. Ce sont donc « les utilisateurs ». Nous pouvons représenter l'ordinateur comme étant un SYSTÈME. Prof. Dr."}
{"pack_id": "french_pack", "section_title": "I.5. Langages informatiques", "page": 13, "chunk_id": "french_pack_13_1", "content": "la suite d‘instructions permettant à l‘utilisateur de communiquer avec l‘ordinateur.  L’homme : C‘est l‘élément le plus important du système informatique. Il se compose de tout ce monde chargé de manipuler l‘ordinateur en vue de profiter de sa puissance pour des buts précis. Ce sont donc « les utilisateurs ». Nous pouvons représenter l'ordinateur comme étant un SYSTÈME. Prof. Dr. YENDE RAPHAEL Grevisse, PhD. Cours d’Informatique Générale / UNIBAS"}
{"pack_id": "french_pack", "section_title": "I.5. Langages informatiques", "page": 14, "chunk_id": "french_pack_14_0", "content": "12 I.4.5. Système d’information A ne pas confondre avec système informatique, le SI d‘entreprise est l‘ensemble d‘informations qui circulent dans l‘entreprise et les moyens mis en œuvre pour les gérer. Toutes les informations, quelle que soit leur forme, font partie du système d ‘information. Nous attendons par gérer, le recueil, l‘exploitation, le stockage et la diffusion des informations. Il apparaît, à la lumière de cette définition, que l‘information est un des éléments capitaux constituant les préoccupations d‘un système d‘information. Elle mérite donc l‘attention des chercheurs en informatique. Ainsi donc, Il existe plusieurs typologies de SI, cependant nous nous intéressons à distinguer le SI automatisé du SI manuel. − Le SI manuel est celui dont les opérations sur les informations sont manuelles et ne font pas recours aux machines. − Semi-automatique fait allusion à la saisie, à la consultation ou visualisation, à la mise à jour des informations. Dans ce cas les interventions de l‘homme et de la machine sont conjointes. On parle alors de traitement interactif ou conversationnel où les opérations sont assurées grâce à un dialogue entre l’homme et la machine. − Le SI automatisé, les opérations les plus significatives sur les informations sont assurées par des machines électroniques programmables effectuant des traitements automatiques. L‘intervention humaine se limite à une phase de préparation du travail des machines. Exemple : gestion comptable réalisée grâce à un progiciel spécifique. Quand on parle de SI automatisé, il faut nuancer l‘importance du rôle joué par la machine et la place de l‘homme. Dans ce SI, le processus automatique ainsi que le processus semi-automatique se côtoient. Automatique fait allusion aux calculs répétitifs, calculs complexes, mémorisation des données, édition des documents comptables, des états de sorties, etc. I.5. Langages informatiques On appelle « langage informatique » un langage destiné à décrire l'ensemble des actions consécutives qu'un ordinateur doit exécuter. Les langages naturels (par exemple l'anglais ou le français) représentent l'ensemble des possibilités d'expression partagé par un groupe d'individus. Les langages servant aux ordinateurs à communiquer n'ont rien à voir avec des langages informatiques, on parle dans ce cas de protocoles de communication, ce sont deux"}
{"pack_id": "french_pack", "section_title": "I.5. Langages informatiques", "page": 14, "chunk_id": "french_pack_14_1", "content": "» un langage destiné à décrire l'ensemble des actions consécutives qu'un ordinateur doit exécuter. Les langages naturels (par exemple l'anglais ou le français) représentent l'ensemble des possibilités d'expression partagé par un groupe d'individus. Les langages servant aux ordinateurs à communiquer n'ont rien à voir avec des langages informatiques, on parle dans ce cas de protocoles de communication, ce sont deux notions totalement différentes. Un langage informatique est une façon pratique pour nous (humains) de donner des instructions à un ordinateur. Un langage informatique est rigoureux : à chaque instruction correspond une action du processeur. Prof. Dr. YENDE RAPHAEL Grevisse, PhD. Cours d’Informatique Générale / UNIBAS"}
{"pack_id": "french_pack", "section_title": "II.0. Introduction", "page": 15, "chunk_id": "french_pack_15_0", "content": "13 La principale différence entre les langages informatiques et les langues naturelles réside dans l’absence d’ambiguïté : alors que certaines phrases du français peuvent être interprétées différemment par différents auditeurs, tous seront d’accord pour dire ce que fait un programme donné. Le langage utilisé par le processeur, c'est-à-dire les données telles qu'elles lui arrivent, sont appelées langage machine. Il s'agit d'une suite de 0 et de 1 (dit binaire). Toutefois le langage machine n'est pas compréhensible facilement par l'humain. Ainsi il est plus pratique de trouver un langage intermédiaire, compréhensible par l'homme, qui sera ensuite transformé en langage machine pour être exploitable par le processeur. L'assembleur est le premier langage informatique qui ait été utilisé. Celui- ci est encore très proche du langage machine mais il permet déjà d'être plus compréhensible. Toutefois un tel langage est tellement proche du langage machine qui dépend étroitement du type de processeur utilisé (chaque type de processeur peut avoir son propre langage machine). Ainsi un programme développé pour une machine ne pourra pas être porté sur un autre type de machine (on désigne par le terme « portable », un programme qui peut être utilisé sur un grand nombre de machines). Pour pouvoir l'utiliser sur une autre machine il faudra alors parfois réécrire entièrement le programme. Un langage informatique a donc plusieurs avantages : − Il est plus facilement compréhensible que le langage machine ; − Il permet une plus grande portabilité, c'est-à-dire une plus grande facilité d'adaptation sur des machines de types différents. C’est pour répondre aux problèmes de l’assembleur qu’ont été développé dès les années 50 des langages de plus haut niveau. Dans ces langages, le programmeur écrit selon des règles strictes mais dispose d’instructions et de structures de données plus expressives qu’en Assembleur. Langage Domaine d'application principal (ALGOrithmic Language), écrit à la fin des années 1950. ALGOL Son objectif était de décrire algorithmiquement des problèmes de programmation. (Beginner’s All-Purpose Symbolic Instruction Code), écrit en 1963 par John KEMMENY et Thomas KURTZ. Conçu BASIC pour permettre aux étudiants ne travaillant pas dans les filières scientifiques d’utiliser les ordinateurs. (COmmon Business Oriented Language),"}
{"pack_id": "french_pack", "section_title": "II.0. Introduction", "page": 15, "chunk_id": "french_pack_15_1", "content": "qu’en Assembleur. Langage Domaine d'application principal (ALGOrithmic Language), écrit à la fin des années 1950. ALGOL Son objectif était de décrire algorithmiquement des problèmes de programmation. (Beginner’s All-Purpose Symbolic Instruction Code), écrit en 1963 par John KEMMENY et Thomas KURTZ. Conçu BASIC pour permettre aux étudiants ne travaillant pas dans les filières scientifiques d’utiliser les ordinateurs. (COmmon Business Oriented Language), développé en COBOL 1959. C’est un langage commun pour la programmation d’applications de gestion. (FORmula TRANSlator), développé par Jim BACKUS en 1954. C’est un langage de programmation utilisé FORTRAN principalement en mathématique et dans les applications de calculs scientifiques. Prof. Dr. YENDE RAPHAEL Grevisse, PhD. Cours d’Informatique Générale / UNIBAS"}
{"pack_id": "french_pack", "section_title": "II.1. Définition et contexte d’étude", "page": 16, "chunk_id": "french_pack_16_0", "content": "14 JAVA (Nom vulgaire) Programmation orientée Internet. (Jules Own Version of the International Algebric JOVIAL Language), écrit par Jules SCHWARTZ en 1960. Langage destiné aux scientifiques. (MAThs LABoratorie) Conçu par Cleve MOLER à la fin des MATLAB années 1970, il est utilisé dans les calculs mathématiques. (List Processor), créé par Mac CARTHY en 1958. Il est LISP utilisé en intelligence artificielle. Ecrit en 1971 par Nicklaus WIRTH en hommage à Blaise Pascal PASCAL. Il a été conçu pour servir à l’enseignement de la programmation. (PROgrammation LOGique), développé par Alain PROLOG COLMERAUER et Philippe ROUSSEL en 1972. Il est utilisé dans des nombreux programmes d’intelligence artificielle. Prof. Dr. YENDE RAPHAEL Grevisse, PhD. Cours d’Informatique Générale / UNIBAS"}
{"pack_id": "french_pack", "section_title": "II.1. Définition et contexte d’étude", "page": 17, "chunk_id": "french_pack_17_0", "content": "15 CHAPITRE II. INTRODUCTION A L’ORDINATEUR II.0. Introduction L‘ordinateur a été appelé « outil intelligent », car il augmente notre habileté à exécuter des tâches exigeant l‘activité mentale. Plus encore, il le fait avec une rapidité extraordinaire. La clé de l‘utilisation effective à bon escient de l‘ordinateur comme un outil est de connaître ce qu‘il est, comment il fonctionne et comment l‘utiliser. Par ailleurs, cette agilité est rendu possible grâce à l’informatique (INFORMAtion automaTIQUE) consiste à rassembler et transformer diverses informations à l’aide d’un (ou plusieurs) ordinateur(s) afin d’obtenir la solution d’un problème : − Les informations utiles doivent être disponibles pour l’ordinateur, donc être collectées, clairement codifiées, saisies et enregistrées sur un support informatique (une « mémoire ») ; − Le problème à résoudre doit avoir été analysé avec précision, la façon d’en obtenir la solution doit avoir été traduite sous la forme d’un programme. L’ordinateur est une machine électronique qui inclue des dispositifs optiques, électromécaniques ou électromagnétiques et dont le fonctionnement est guidé par des programmes réalisés par l’homme : − Un ordinateur est inerte en l’absence d’alimentation électrique ou de programme ; − Son « QI » (quotient intellectuel) est NUL et il est incapable d’initiative ; − L’ordinateur est un outil complexe. Il est encore nécessaire d’en connaître le fonctionnement pour bien l’utiliser. L’ordinateur fonctionne aujourd’hui comme à ses débuts. C’est une machine qui travaille sur des données binaires (représentées symboliquement par des suites de 0 et de 1) de manière séquentielle et au rythme d’une horloge interne : − Dans l’ordinateur, toute information est représentée par une suite de bits. Un bit (abréviation de BInary digiT) représente une valeur choisie parmi deux possibilités (symbolisées par 0 et 1, mais concrétisées par un phénomène physique à deux état stables comme « allumé-éteint », « 0 volts – 3 volts », « aimantation nord ou sud », « courant passant ou bloqué », etc. …) ; − À chaque « top » d’horloge, il y a modification d’une série de bits représentant les données en cours de traitement ; Prof. Dr. YENDE RAPHAEL Grevisse, PhD. Cours d’Informatique"}
{"pack_id": "french_pack", "section_title": "II.1. Définition et contexte d’étude", "page": 17, "chunk_id": "french_pack_17_1", "content": "deux état stables comme « allumé-éteint », « 0 volts – 3 volts », « aimantation nord ou sud », « courant passant ou bloqué », etc. …) ; − À chaque « top » d’horloge, il y a modification d’une série de bits représentant les données en cours de traitement ; Prof. Dr. YENDE RAPHAEL Grevisse, PhD. Cours d’Informatique Générale / UNIBAS"}
{"pack_id": "french_pack", "section_title": "II.3. Fonctions d'un ordinateur", "page": 18, "chunk_id": "french_pack_18_0", "content": "16 − Entre deux tops d’horloge, l’ordinateur est improductif. Des conventions permettent d’effectuer la codification des informations en binaire, et inversement. Par exemple : − 0101 représente la valeur 5 en binaire pur sur 4 bits (valeur que l’on retrouve en effectuant le calcul 0x23+1X22+0x21+1x20 =5, 2 étant la base de numération binaire) ; − 01010001 représente la lettre Q (majuscule) sur 8 bits, en code ASCII (American Standard Code for Information Interchange) II.1. Définition et contexte d’étude Un ordinateur est un ensemble de circuits électroniques permettant de manipuler des données sous forme binaire, c'est-à-dire sous forme de bits. Le mot « ordinateur » provient de la société IBM France. François Girard, alors responsable du service promotion générale publicité de l'entreprise IBM France, eut l'idée de consulter son ancien professeur de lettres à Paris, afin de lui demander de proposer un mot caractérisant le mieux possible ce que l'on appelait vulgairement un « calculateur » (traduction littérale du mot anglais « computer »). Ainsi, Jacques Perret, agrégé de lettres, alors professeur de philologie latine à la Sorbonne, proposa le 16 avril 1955 le mot « Ordinateur » en précisant que le mot « Ordinateur » était un adjectif provenant d‘Emile Littré (Lexicographe Français du 19ème siècle) signifiant « Dieux mettant de l'ordre dans le monde ». Ainsi, il expliqua que le concept de « mise en ordre » était tout à fait adapté. Prof. Dr. YENDE RAPHAEL Grevisse, PhD. Cours d’Informatique Générale / UNIBAS"}
{"pack_id": "french_pack", "section_title": "II.4. Générations des ordinateurs", "page": 19, "chunk_id": "french_pack_19_0", "content": "17 L’ordinateur n’a ni forme ni couleur. Si vous consultez un dictionnaire imprimé avant 1940, vous serez surpris de trouver que l‘ordinateur est défini comme une personne” effectuant des calculs. En outre, bien que d‘autres machines font des calculs, elles n‘ont jamais été appelées des ordinateurs mais plutôt des calculatrices. La définition du terme « ordinateur » commença à changer à partir de 1940 lorsque le premier « electronic computing devise » fut développé aux USA planifié par JOHN VON NEWMAN qui est le premier à utiliser les mot « automatic computing system » raccourci plus tard à « computer » ou « computer system ». Ainsi, pour John Von Newman, l’ordinateur est une machine qui accepte les entrées, stocke les résultats du traitement et donne des sorties. L‘ordinateur exécute toutes ces opérations non à cause d‘une intelligence super humaine, mais par ce qu‘il peut exécuter des opérations extrêmement simples avec précision et rapidement selon un processus ou programme qui est dicté par l‘homme (le programmeur). D‘où, d‘une intelligence par procuration, l‘ordinateur ne peut calculer ou prendre des décisions logiques seulement lorsqu‘il a reçu des consignes qu‘il revient à l‘homme de définir. En français, ce néologisme fut créé en 1956 par Jacques Perret sur proposition d‘IBM pour désigner un calculateur (dans certaines traductions de l‘anglais on lira parfois le mot calculateur pour désigner un ordinateur) et désigne une machine programmable capable d‘effectuer un traitement de l‘information. Un ordinateur est donc constitué au minimum de : − Une unité centrale (pour l‘exécution des programmes) ; − Une mémoire centrale (pour le stockage des données et des logiciels en cours d‘exécution) ; Prof. Dr. YENDE RAPHAEL Grevisse, PhD. Cours d’Informatique Générale / UNIBAS"}
{"pack_id": "french_pack", "section_title": "II.4. Générations des ordinateurs", "page": 20, "chunk_id": "french_pack_20_0", "content": "18 − Des périphériques d’entrée / sorties (pour la communication entre l‘utilisateur et la machine). II.2. Caractéristiques de l’ordinateur. Si nous inscrivons l‘ordinateur dans l‘ensemble de tous les outils électroniques, il convient de l‘en différencier en lui donnant ses caractéristiques les plus particulières. Il est caractérisé par : − La rapidité et exactitude : Pour calculer la moyenne de trois nombres jusqu‘à sept chiffres après la virgule, un homme mettra plus d‘une minute, tandis que l‘ordinateur peut calculer la moyenne de plus de 100 millions en moins de deux secondes. Plus encore l‘ordinateur sera correct et exact. − La capacité la souplesse : Ceci se dit du volume des données que peut stocker la mémoire d‘un ordinateur. Un ordinateur peut stocker et savoir restituer tous les répertoires de toutes les lignes téléphoniques d‘une ville ou d‘un pays. − L’adaptabilité : l‘ordinateur s‘adapte à presque tous les besoins de l‘utilisateur pourvu que ce dernier sache comment s‘y prendre. Un même ordinateur peut être utilisé pour : imprimer les états financiers d‘une banque, dessiner les traits d‘un croquis, calculer les paris impairs, calculer des orbites, des satellites, calculer les statistiques d‘une population, contrôler une guerre, surveiller des malades à l‘hôpital, combiner les aspirations des amoureux, assurer la communication, … II.3. Fonctions d'un ordinateur Un ordinateur possède trois grandes catégories de fonctions : Calculer ; Gérer des données et Communication. − Calculer : C'est la tâche pour laquelle l'ordinateur a été conçu au départ. D'ailleurs, le nom anglais de l'ordinateur, « computer », signifie en français « calculateur ». La fonction de calcul d'un ordinateur ne se limite pas à l'utilisation de la calculette, d'un tableur ou à l'exécution de programmes de calculs scientifiques. Il y a en fait du calcul dans toutes les opérations que réalise un ordinateur :  L'affichage d'une page web ou d'un document réalisé avec un traitement de texte ;  Le codage et le décodage des informations stockées dans les fichiers ;  La gestion des communications avec d'autres ordinateurs sur un réseau... Prof. Dr. YENDE RAPHAEL Grevisse, PhD. Cours d’Informatique Générale / UNIBAS"}
{"pack_id": "french_pack", "section_title": "II.4. Générations des ordinateurs", "page": 21, "chunk_id": "french_pack_21_0", "content": "19 Par exemple, lorsque l'on rédige une lettre dans un traitement de texte, celui-ci doit être capable de transformer l'ensemble de son contenu (ici, le texte et sa mise en forme) en une suite de nombres que l'ordinateur peut ensuite stocker ou manipuler. Cette opération, appelée « codage de l'information », est l'une des nombreuses opérations de calcul nécessaires au fonctionnement des différents programmes. − Gérer des données : Lorsque vous utilisez un ordinateur, vous avez souvent besoin de conserver les résultats de votre travail. C'est par exemple le cas si vous rédigez votre CV, utilisez un outil de messagerie ou travaillez sur un logiciel de retouche d'image. Dans toutes ces situations, une fois votre travail terminé, vous souhaitez que l'ordinateur puisse enregistrer les données correspondantes, et vous les restituer ultérieurement. Quels que soient les éléments de l'ordinateur où ce stockage aura lieu, il est nécessaire de mettre en forme ces données et de les organiser, pour que vous puissiez les retrouver au milieu de l'ensemble des autres données également stockées au même endroit. − Communiquer : Un ordinateur peut communiquer soit avec un utilisateur, soit avec un autre ordinateur. La fonction de communication ne consiste donc pas uniquement à échanger des informations sur Internet. Cette utilisation de l‘ordinateur est d‘ailleurs la plus récente, puisqu‘elle ne s‘est réellement développée qu‘avec l‘essor du Web, dans les années 1990. En revanche, quelle que soit la tâche que vous réalisez avec votre ordinateur, vous passez votre temps à interagir avec lui, soit pour lui donner des ordres, soit pour prendre connaissance des résultats. Dans ce cadre, un grand nombre d‘éléments, matériels et logiciels, font partie de l’interface homme-machine, qui permet la communication entre l‘utilisateur et l‘ordinateur. Les principales notions qui permettent de comprendre en quoi consiste une interface homme-machine sont définies dans la section « communication avec un ordinateur ». II.4. Générations des ordinateurs II.4.1. Génération zéro : le relais électromécanique (1930-1945) Dès 1936, Konrad Ernest Otto ZUSE fabrique les machines électromécaniques Z1 et Z2, fonctionnant selon le système binaire. Il propose en 1938 la construction d’un calculateur électronique, mais l’Etat allemand juge"}
{"pack_id": "french_pack", "section_title": "II.4. Générations des ordinateurs", "page": 21, "chunk_id": "french_pack_21_1", "content": "en quoi consiste une interface homme-machine sont définies dans la section « communication avec un ordinateur ». II.4. Générations des ordinateurs II.4.1. Génération zéro : le relais électromécanique (1930-1945) Dès 1936, Konrad Ernest Otto ZUSE fabrique les machines électromécaniques Z1 et Z2, fonctionnant selon le système binaire. Il propose en 1938 la construction d’un calculateur électronique, mais l’Etat allemand juge le projet irréalisable, et refuse le financement. ZUSE construisit alors un calculateur binaire universel avec 2.600 relais des circuits logiques, le Z3, achevé en 1941. Il est utilisé en aéronautique et en balistique. De l’autre côté de l’atlantique, le professeur Howard Hathaway AIKEN (1900-1973) réalise pour le compte d’IBM et de l’Université de Harvard (Harvard University), une machine électromécanique appelée Automatic Sequence Controlled Calculator surnommée le Mark I. Réalisé entre 1939 et 1944, ce calculateur Prof. Dr. YENDE RAPHAEL Grevisse, PhD. Cours d’Informatique Générale / UNIBAS"}
{"pack_id": "french_pack", "section_title": "II.5. Classification des ordinateurs", "page": 22, "chunk_id": "french_pack_22_0", "content": "20 avait 16m de long, 2m60cm de hauteur, un poids avoisinant 5 tonnes et pouvait multiplier deux nombres de 23 chiffres décimaux en 6 secondes. Il sera utilisé à des fins militaires notamment à la mise au point de la bombe atomique. D’autres chercheurs réalisèrent, pendant cette période, des prototypes de calculateurs. Parmi eux, citons John ATANASOFF (université de l’IOWA) et George STIBITZ (Bell Laboratories), qui tous deux adoptèrent le système binaire. II.4.2. Première Génération : le tube à vide (1945-1955) Le tube à vide est une ampoule vidée d’air contenant plusieurs électrodes entre lesquelles apparaît, sous certaines conditions, un courant d’électrons. Exemple : diode à vide. En 1943, COLOSSUS le premier calculateur électronique numérique est construit, et littéralement porté par Alan TURING pour permettre le décryptage des messages radios transmis par les forces de l’axe, et codés au moyen de la fameuse machine ENIGMA (elle permettait de coder des informations). Dans l’optique de réglage des tirs d’artillerie, en 1943 l’armée américaine accepta de financer les travaux de John Presper ECKERT et John MAUCHLY qui aboutirent à la réalisation d’une machine pour le moins célèbre : l’ENIAC. Celle-ci (Electronic Numerical Integrator And Computer) était capable de 5.000 opérations arithmétiques à la seconde et était 1.000 fois rapide que le mark I. Pour fonctionner, il fallait une puissance électrique de près de 200Kw, comportait 19.000 lampes, pesait 30 tonnes et occupait un espace de 160 m2 au sol. Un jour, en 1947, l’ENIAC tomba en panne sans que ses constructeurs ne sachent pourquoi. Après exploration, on constata qu’un insecte s’était logé dans un relais ; le technicien qui a fait la découverte s’est écrié : « There is a bug in the machine ». Le nom « bug » est resté pour désigner une « erreur de matériel ou de programmation ». II.4.3. Deuxième génération : le transistor (début de l’industrie informatique ; 1955-1965) Prof. Dr. YENDE RAPHAEL Grevisse, PhD. Cours d’Informatique Générale / UNIBAS"}
{"pack_id": "french_pack", "section_title": "II.5. Classification des ordinateurs", "page": 23, "chunk_id": "french_pack_23_0", "content": "21 Le transistor, inventé par les laboratoires Bell en 1948, par John BARDEEN, Walter BRATTAIN et William SHOCKLEY, est utilisé dans les ordinateurs, en remplacement des tubes à vide si encombrants, coûteux et peu fiables. C’est un dispositif électronique pouvant remplir les fonctions d’un amplificateur, d’un commutateur ou d’un oscillateur, dans les télécommunications, le contrôle et les systèmes. Il s’agit d’un élément semi- conducteur (rend possible le passage du courant, c’est un circuit logique, un amplificateur, stabilisateur de tension, modulateur du signal, etc.). Il ressemble à un petit sandwich qui contient de la matière capable de conduire l’électricité à un voltage donné. Avec ce dispositif, les ordinateurs deviennent plus petits et plus performants. Ci-dessus, l’image de quelques modèles de transistors. II.4.4. Troisième génération : le circuit intégré (1965-1980) Le circuit intégré, appelé aussi puce électronique, est une petite pastille de silicium sur laquelle sont gravés de nombreux composants électroniques (transistors, résistances …). Les circuits intégrés sont donc l’association de plusieurs transistors. En 1959, Jack St. Clair KILBY (Texas Instruments) et Robert NOYLE inventèrent les circuits intégrés. Au cours de cette période, les microprocesseurs font leur apparition (tel est le 8080 d’Intel). Les premières familles d’ordinateurs apparaissent (IBM 360) et avec elles le concept de compatibilité descendante (conservation du logiciel). Ci-dessus, l’image des circuits intégrés. II.4.5. Quatrième génération : l’essor des ordinateurs personnels (1980-) Un ordinateur personnel est celui destiné à l’usage d’une personne et dont les dimensions sont assez réduites pour tenir sur un bureau. Cette génération couvre un intervalle énorme de performances et de besoins, allant des super computers, utilisés principalement pour le calcul scientifique, aux ordinateurs personnels utilisés pour des applications de bureautique, de formation… et de jeux. C’est également cette génération qui verra l’essor d’unités périphériques en tout genre, et également l’interconnexion des machines en diverses architectures réseaux. Prof. Dr. YENDE RAPHAEL Grevisse, PhD. Cours d’Informatique Générale / UNIBAS"}
{"pack_id": "french_pack", "section_title": "II.6.1. Architecture matérielle", "page": 24, "chunk_id": "french_pack_24_0", "content": "22 II.4.6. Cinquième génération : l’intelligence artificielle L’intelligence artificielle est une branche de l’informatique traitant de la reproduction, par des machines, de certains aspects de l’intelligence humaine. Elle apparaît lorsque le développement des premiers ordinateurs donne à penser qu’ils seront rapidement capables de simuler la pensée. Le mathématicien britannique Alan Mathison TURING propose ainsi, en 1950, un test (appelé test de Turing) permettant d’évaluer l’intelligence d’une machine : un ordinateur est qualifié d’intelligent si, en communiquant avec lui à distance et par écrit, un utilisateur ne peut deviner s’il s’agit ou non d’un être humain. Les comportements humains ne sont rien d'autre que le résultat d'un calcul portant sur des données plus ou moins complexes et tout calcul peut être simulé par une machine de TURING universelle. Tous les comportements humains peuvent donc être simulés par une telle machine. II.5. Classification des ordinateurs En matière de la classification des ordinateurs, il existe plusieurs classifications parmi lesquelles, on citera : 1. Classification classique Nous distinguons essentiellement 3 types ou catégories d’ordinateurs : Le maxi ordinateur, le mini-ordinateur (ces deux constituent le gros système) et le micro-ordinateur. Catégories Caractéristiques Maxi Mini- Micro- essentielles ordinateur ordinateur ordinateur Une grande capacité de stockage des Oui Oui Non informations Une unité centrale unique qui occupe un grand Oui Oui Non espace. Plusieurs consoles (ensemble clavier et écran) Oui Oui Non connecté à l'unité centrale Des experts pour sa manipulation Oui Oui Non Une vitesse de traitement en MIPS (Million Oui Oui Non d’Instructions exécutées Par Seconde) très élevée L’unité centrale unique et de taille inférieure à Oui Oui Non celle du maxi ordinateur. Occupe un petit espace Non Non Oui Prof. Dr. YENDE RAPHAEL Grevisse, PhD. Cours d’Informatique Générale / UNIBAS"}
{"pack_id": "french_pack", "section_title": "II.6.1. Architecture matérielle", "page": 25, "chunk_id": "french_pack_25_0", "content": "23 2. Classification moderne Cette classification est plutôt basée sur la taille et la forme de l’ordinateur ainsi sa capacité de puissance de calculs. Dans cette catégorie, on peut citer : − Les micro-ordinateurs : Un micro-ordinateur est un ordinateur construit autour d’un microprocesseur. Les micro-ordinateurs ont été conçus au début des années 1970, sous l’impulsion des microprocesseurs. Les micro- ordinateurs sont aujourd’hui utilisés par les particuliers et les industriels en raison de leur faible coût, de leur très bon apport en puissance de traitement/prix et de leur facilité d’emploi. On distingue :  Les ordinateurs de bureau (appelés aussi « Desktop ») sont composés d’un boîtier renfermant les principaux composants et permettant de raccorder les différents dispositifs externes.  Les ordinateurs portables (« laptop ») sont composés d’un boîtier intégrant un écran dépliable, un clavier et un grand nombre des dispositifs incorporés.  Les organiseurs, appelés encore « Handheld » ou « PDA » (Personnal Digital Assistant) sont des ordinateurs de poche proposant des fonctionnalités liées à l’organisation personnelle. − Les stations de travail : Une station de travail est un micro-ordinateur haut de gamme disposant d’outils graphiques et des communications avancées qui en font l’outil idéal pour accomplir des tâches nécessitant à la fois des bonnes capacités de stockage et de puissance de calcul. Il s’agit en fait d’un ordinateur puissant mis à la disposition d’un utilisateur et relié à un réseau. − Les gros ordinateurs ou Mainframes : Un gros ordinateur est une machine conçue selon la philosophie des ordinateurs de la 1ère génération fondée sur un informatique centralisé. Ces genres de machines sont capables de répondre aux besoins des grandes entreprises commerciales, de différentes institutions gouvernementales ou militaires et des établissements de recherche scientifiques. Les gros ordinateurs adaptés tout particulièrement aux calculs scientifiques sont appelés « super calculateurs ». Ce sont des ordinateurs qui offrent une capacité de traitement très élevée et sont utilisés Prof. Dr. YENDE RAPHAEL Grevisse, PhD. Cours d’Informatique Générale / UNIBAS"}
{"pack_id": "french_pack", "section_title": "II.6.1. Architecture matérielle", "page": 26, "chunk_id": "french_pack_26_0", "content": "24 dans les domaines nécessitant des calculs à grandes échelles comme la météorologie, la physique des particules, l’astrophysique, la réalité virtuelle (ex : simulateur de vol). − Les tablettes PC (également appelées ardoises électroniques), composées d'un boîtier intégrant un écran tactile ainsi qu'un certain nombre de périphériques incorporés. − Les centres multimédia (Media Center), représentant une plate- forme matérielle, destinée à une utilisation dans le salon pour le pilotage des éléments hifi (chaîne hifi, téléviseur, platine DVD, etc.). II.6. ELEMENTS CONSTITUTIFS DE L’ORDINATEUR II.6.1. Architecture matérielle Le terme anglais hardware (littéralement « quincaillerie » en français) est utilisé pour désigner le matériel informatique. Il s'agit de tous les composants que l'on peut trouver dans l’ordinateur. Il s’agit pour l’essentiel des unités d’entrée des données, de l’unité de traitement et des unités de sortie. Prof. Dr. YENDE RAPHAEL Grevisse, PhD. Cours d’Informatique Générale / UNIBAS"}
{"pack_id": "french_pack", "section_title": "II.6.1. Architecture matérielle", "page": 27, "chunk_id": "french_pack_27_0", "content": "25 Structure interne d’un ordinateur II.6.1.1. Les unités d’entrée Elles sont constituées de tous composants électroniques qui permettent d’introduire les données dans l’ordinateur. Les principales unités d’entrées sont : 1. Le clavier Le clavier (en anglais « keyboard ») permet, aux machines d’écrire, de saisir des caractères (lettres, chiffres, symboles ...). Il s'agit donc d'un périphérique d'entrée essentiel pour l'ordinateur, car c'est grâce à lui qu'il nous est possible de transférer des textes ou encore de donner ordre à la machine d’effectuer des opérations particulières. Prof. Dr. YENDE RAPHAEL Grevisse, PhD. Cours d’Informatique Générale / UNIBAS"}
{"pack_id": "french_pack", "section_title": "II.6.1. Architecture matérielle", "page": 28, "chunk_id": "french_pack_28_0", "content": "26 TOUCHE S DE COMMANDE TOUCHES DE COMMANDE TOUCHES DE FONCTION TOUCHES DE DEPLACEMENT PAVE NUMERIQUE TOUCHES ALPHA-NUMERIQUES DU CURSEUR Le clavier est généralement branché à l'arrière de l'unité centrale, sur la carte-mère, sur un connecteur PS/2 (Personnal System/2 qui est un port de connexion de dimension réduite pour souris et clavier) de couleur violette. De nos jours, les connecteurs PS/2, ont été systématiquement remplacés par des claviers avec un connecteur USB, voire des claviers sans fils. Le clavier comporte plusieurs parties notamment le pavé numérique (qui permet la saisie des chiffres et d’effectuer des calculs dans un tableur) ; les flèches de direction (permettant le déplacement dans le texte) ; les touches alphanumériques (où nous retrouvons les lettres de l’alphabet, les chiffres et les ponctuations) ; les touches de fonction (sont des raccourcis qui permettent d’accéder à des fonctions sans passer par les menus) ; les voyants lumineux ; la partie multimédia (pour les claviers récents). 2. La souris La souris (en anglais « mouse » ou « mice » au pluriel) est un périphérique de pointage (en anglais pointing device) servant à déplacer un curseur sur l'écran et permettant de sélectionner, déplacer, manipuler des objets grâce à des boutons. On appelle ainsi « clic » l'action consistant à appuyer (cliquer) sur un bouton afin d'effectuer une action. Prof. Dr. YENDE RAPHAEL Grevisse, PhD. Cours d’Informatique Générale / UNIBAS"}
{"pack_id": "french_pack", "section_title": "II.6.1. Architecture matérielle", "page": 29, "chunk_id": "french_pack_29_0", "content": "27 La première souris a été inventée et mise au point par Douglas Carle ENGELBART : il s'agissait d'une souris en bois contenant deux disques perpendiculaires et relié à l'ordinateur par une paire de fils torsadés. La souris est généralement branchée à l'arrière de l'unité centrale, sur la carte-mère, sur un connecteur PS/2 de couleur verte. Certaines souris possèdent parfois une connectique USB. On distingue plusieurs grandes familles de souris : − Souris mécanique : La souris mécanique comporte une bille sur laquelle tournent deux rouleaux. Ces rouleaux comportent chacun un disque qui tourne entre une photodiode et une diode électroluminescente (LED c’est-à- dire composant électronique autorisant le passage d’un courant électrique dans un seul sens) laissant passer la lumière par séquence. Lorsque la lumière passe, la photodiode renvoie un bit (1), lorsqu'elle rencontre un obstacle, la photodiode renvoie un bit nul (0). A l'aide de ces informations, l'ordinateur peut connaître la position du curseur, voire sa vitesse. − Souris optique : La souris optique possède un fonctionnement basé sur l'analyse de la surface sur laquelle elle se déplace. Ainsi une souris optique est constituée d'une LED, d'un système d´acquisition d´images (IAS) et d'un processeur de signaux numériques (DSP). La LED est chargée d'éclairer la surface afin de permettre au système IAS d'acquérir l'image de la surface. Le DSP détermine le mouvement horizontal et vertical. Les souris optiques fonctionnent sur toutes surfaces non parfaitement lisses ou bien possédantes des dégradés de couleur. Les avantages principaux de ce type de dispositif de pointage par rapport aux souris mécaniques sont notamment une précision accrue ainsi qu'un palissement moindre. − Souris sans fil : Les souris sans fil (en anglais « cordless mouse ») sont de plus en plus populaires car elles peuvent être utilisées sans être physiquement reliées à l'ordinateur, ce qui procure une sensation de liberté. Au niveau de cette famille de souris, nous retrouvons aussi les souris infrarouges : ces souris sont utilisées en vis-à-vis avec un récepteur infrarouge connecté à l'ordinateur. La portée de ce type de dispositif est de quelques mètres au plus, en vision directe, au même"}
{"pack_id": "french_pack", "section_title": "II.6.1. Architecture matérielle", "page": 29, "chunk_id": "french_pack_29_1", "content": "être utilisées sans être physiquement reliées à l'ordinateur, ce qui procure une sensation de liberté. Au niveau de cette famille de souris, nous retrouvons aussi les souris infrarouges : ces souris sont utilisées en vis-à-vis avec un récepteur infrarouge connecté à l'ordinateur. La portée de ce type de dispositif est de quelques mètres au plus, en vision directe, au même titre que la télécommande d'un téléviseur. Prof. Dr. YENDE RAPHAEL Grevisse, PhD. Cours d’Informatique Générale / UNIBAS"}
{"pack_id": "french_pack", "section_title": "II.6.1. Architecture matérielle", "page": 30, "chunk_id": "french_pack_30_0", "content": "28 − Souris à molette : De plus en plus de souris sont équipées d'une molette. La molette, généralement située entre le bouton gauche et le bouton droit permet de faire défiler des pages tout en permettant à l'utilisateur de déplacer le curseur sur l'écran. N.B. : Sur les ordinateurs portables, nous retrouvons d’autres types de souris qui répondent au double impératif de faible encombrement et d’ergonomie : le trackball est en quelque sorte une souris inversée (l’utilisateur fait tourner une petite bille enchâssée dans le socle de l’appareil, en avant du clavier) et le « touchpad » est une sorte de palette graphique fonctionnant avec des capteurs de pression qui détectent la position du doigt de l’utilisateur sur un petit rectangle de plastique. Actuellement, il est possible de retrouver sur le marché des souris, celles qui disposent de quatre boutons, pouvant faciliter la navigation aisée sur le réseau Internet. 3. Scanner (numériseur) Le nom « scanner » vient du verbe anglais « to scan » qui signifie balayer dans le sens de « balayer du regard ». Il s’agit d’un périphérique permettant de numériser des documents à partir d'un format « papier » et de générer des documents au format « électronique ou numérique » qu'il est possible d'enregistrer dans la mémoire de l'ordinateur. Le scanner est caractérisé par sa qualité de numérisation (résolution). On a plusieurs types d’appareils :  Les numériseurs médicaux permettant de prendre une image à l’aide des rayons X à l’intérieur du corps humain.  Les numériseurs qui permettent de numériser les documents.  Les systèmes de lecture de code-barres des caisses des magasins.  Les numériseurs de reconnaissance de billets de banque. 4. Caméra numérique Les caméras numériques sont des appareils photographiques qui ne contiennent pas de film. Les photos sont enregistrées sur une petite disquette (carte mémoire) au lieu de s’imprégner sur une pellicule. La photographie obtenue pourra être visionnée à partir de l’écran d’un ordinateur, ou encore d’un téléviseur. Le grand avantage de cet appareil est sa capacité à transmettre une photo à un ordinateur, par l’intermédiaire d’un fil, pour ensuite"}
{"pack_id": "french_pack", "section_title": "II.6.1. Architecture matérielle", "page": 30, "chunk_id": "french_pack_30_1", "content": "ne contiennent pas de film. Les photos sont enregistrées sur une petite disquette (carte mémoire) au lieu de s’imprégner sur une pellicule. La photographie obtenue pourra être visionnée à partir de l’écran d’un ordinateur, ou encore d’un téléviseur. Le grand avantage de cet appareil est sa capacité à transmettre une photo à un ordinateur, par l’intermédiaire d’un fil, pour ensuite l’intégrer à un document. Signalons aussi l’existence d’appareils tout-en-un (all-in-one) qui remplissent à la fois les fonctions de scanner, d’imprimante, de photocopieur et même de télécopieur. Prof. Dr. YENDE RAPHAEL Grevisse, PhD. Cours d’Informatique Générale / UNIBAS"}
{"pack_id": "french_pack", "section_title": "calculs mathématiques simples avec une précision pouvant atteindre", "page": 31, "chunk_id": "french_pack_31_0", "content": "29 II.6.1.2. Unité centrale L’unité de traitement est composée essentiellement par un boîtier dans lequel se trouvent logés, sur une carte mère, plusieurs composants informatiques. Les composants matériels de l'ordinateur sont architecturés autour d'une carte principale comportant quelques circuits intégrés et beaucoup de composants électroniques tels que condensateurs, résistances, etc. Tous ces composants sont soudés sur la carte et sont reliés par les connexions du circuit imprimé par un grand nombre de connecteurs : cette carte est appelée « carte-mère ». La carte-mère est logée dans un boitier, comportant des emplacements pour les périphériques de stockage sur la face avant, ainsi que des boutons permettant de contrôler la mise sous tension de l'ordinateur et un certain nombre de voyants permettant de vérifier l'état de marche de l'appareil et l'activité des disques durs. Sur la face arrière, le boîtier présente des ouvertures en vis-à-vis des cartes d'extension et des interfaces d'entrée-sortie connectées sur la carte-mère. Enfin, le boîtier héberge un bloc d'alimentation électrique, chargé de fournir un courant électrique stable et continu à l'ensemble des éléments constitutifs de l'ordinateur. L'alimentation sert donc à convertir le courant alternatif du réseau électrique (110 ou 220 Volts) en une tension continue de 5 Volts pour les composants de l'ordinateur et de 12 volts pour certains périphériques internes (disques, lecteurs de CD-ROM, ...). La puissance du bloc d'alimentation est généralement comprise entre 200 et 450 Watts. 1. La carte mère Prof. Dr. YENDE RAPHAEL Grevisse, PhD. Cours d’Informatique Générale / UNIBAS"}
{"pack_id": "french_pack", "section_title": "calculs mathématiques simples avec une précision pouvant atteindre", "page": 32, "chunk_id": "french_pack_32_0", "content": "30 La carte mère c’est la grande carte verte, tout au fond de la boite. La carte mère est un élément essentiel de l’ordinateur, c'est à elle que tous les périphériques sont connectés : le scanner, l’imprimante, le modem, le clavier, la souris... Bref tous les éléments externes que l’on utilise couramment. C’est un élément essentiel au fonctionnement de l’ordinateur, dont voici sa description : 2. Microprocesseur Le centre nerveux de la machine est le microprocesseur. Il s’agit d’un composant électronique très sophistiqué et très miniaturisé. Le cœur d'un processeur est l'Unité Arithmétique et Logique (UAL) qui permet d'effectuer des opérations arithmétiques, logiques, ou d'opérations sur la mémoire (par exemple la lecture du contenu de la mémoire). L’avantage du microprocesseur sur l'être humain est sa vitesse de calcul. Actuellement, les microprocesseurs sont souvent capables d'exécuter plus de 3 milliards d'opérations par seconde. Les microprocesseurs (et donc les ordinateurs) sont incapables d'effectuer le moindre travail si on ne leur fournit pas des listes d'instructions précises dans le seul langage qu'ils comprennent : le langage machine. De telles listes d'instructions sont appelées des programmes d'ordinateur. Le processeur dispose de deux types de mémoires :  La mémoire cache, qui est une sorte de réservoir de mémoire intermédiaire entre le processeur et la mémoire centrale. La caractéristique fonctionnelle de la mémoire cache est de servir à stocker des instructions et des données provenant de la mémoire centrale et qui ont déjà été utilisées les plus récemment par le processeur central.  Les registres : il s’agit d’une sorte de tiroirs, un circuit qui permet la mémorisation de n bits en même temps. Prof. Dr. YENDE RAPHAEL Grevisse, PhD. Cours d’Informatique Générale / UNIBAS"}
{"pack_id": "french_pack", "section_title": "calculs mathématiques simples avec une précision pouvant atteindre", "page": 33, "chunk_id": "french_pack_33_0", "content": "31 Les éléments principaux d'un microprocesseur sont :  Une horloge qui rythme le processeur. Entre deux tops d'horloge le processeur effectue une action. Une instruction nécessite une ou plusieurs actions du processeur. Ainsi plus l'horloge a une fréquence élevée, plus le processeur effectue d'instructions par seconde (l'unité retenue pour caractériser le nombre d'instructions traitées par unité de temps est généralement le MIPS, Millions d'instruction par seconde). Par exemple un ordinateur ayant une fréquence de 100 Mhz effectue 100.000.000 d'instructions par seconde ;  Une unité de gestion des bus qui gère les flux d'informations entrant et sortant ;  Une unité d'instruction qui lit les données arrivant, les décode puis les envoie à l'unité d'exécution ;  Une unité d'exécution qui accomplit les tâches que lui a donné l'unité d'instruction. 3. les mémoires A. Disque dur Le disque dur est un support magnétique de stockage d’informations contenu dans l’unité centrale offrant des vastes espaces de stockage. Inventé dans les années 1950 par IBM, sa capacité augmente très rapidement tandis que son encombrement se réduit. En fait, Un disque dur est constitué non pas d'un seul disque, mais de plusieurs disques rigides (en anglais hard disk signifie disque dur) en métal, en verre ou en céramique, empilés à une très faible distance les uns des autres et appelés plateaux. Prof. Dr. YENDE RAPHAEL Grevisse, PhD. Cours d’Informatique Générale / UNIBAS"}
{"pack_id": "french_pack", "section_title": "calculs mathématiques simples avec une précision pouvant atteindre", "page": 34, "chunk_id": "french_pack_34_0", "content": "32 Les disques tournent très rapidement autour d'un axe (à plusieurs milliers de tours par minute actuellement) dans le sens inverse des aiguilles d'une montre. La lecture et l'écriture se fait grâce à des têtes de lecture situées de part et d'autre de chacun des plateaux. Ces têtes sont des électro-aimants qui se baissent et se soulèvent pour pouvoir lire l'information ou l'écrire. Les têtes ne sont qu'à quelques microns de la surface, séparées par une couche d'air provoquée par la rotation des disques qui crée un vent d'environ 250km/h ! De plus ces têtes sont mobiles latéralement afin de pouvoir balayer l'ensemble de la surface du disque. Un disque dur est au minimum composé de pistes numérotées et de secteurs numérotés, les données sont stockées dans les secteurs. Dans une pile de disques, on ajoute la notion de cylindre qui repère toutes les pistes portant le même numéro sur chaque face de chacun des disques de la pile. B. La Mémoire vive (RAM) La mémoire vive, généralement appelée RAM (Random Access Memory, qui signifie mémoire à accès aléatoire) ou encore mémoire volatile, est la mémoire principale du système, c'est-à-dire qu'il s'agit d'un espace permettant de stocker de manière temporaire des données lors de l'exécution d'un programme. Il s’agit d’une mémoire dans laquelle il est possible de lire et d’écrire. En effet, le stockage de données dans la mémoire vive est temporaire, contrairement au stockage de données sur une mémoire de masse telle que le disque dur, car elle permet uniquement de stocker des données tant qu'elle est alimentée électriquement. Ainsi, à chaque fois que l'ordinateur est éteint, toutes les données présentes en mémoire sont irrémédiablement effacées. C. Mémoire morte (ROM) La mémoire morte, appelée ROM pour Read Only Memory (signifie mémoire en lecture seule) est un type de mémoire permettant de conserver les informations qui y sont contenues même lorsque la mémoire n'est plus alimentée électriquement. Appelée parfois « mémoire non volatile », elle ne Prof. Dr. YENDE RAPHAEL Grevisse, PhD. Cours d’Informatique Générale / UNIBAS"}
{"pack_id": "french_pack", "section_title": "calculs mathématiques simples avec une précision pouvant atteindre", "page": 35, "chunk_id": "french_pack_35_0", "content": "33 s'efface pas lors de la mise hors tension du système. A la base ce type de mémoire ne peut être accédée qu'en lecture. Toutefois il est désormais possible d'enregistrer des informations dans certaines mémoires de type ROM. Ce type de mémoire permet notamment de conserver les données nécessaires au démarrage basique de l'ordinateur. En effet, ces informations ne peuvent être stockées sur le disque dur étant donné que les paramètres du disque (essentiels à son initialisation) font partie de ces données vitales à l'amorçage. II.6.1.3. Les unités de sortie Il existe plusieurs unités de sortie dont le principal est l’écran. 1. Ecran On appelle écran (ou moniteur), le périphérique d’affichage de l’ordinateur. Les moniteurs sont la plupart du temps des tubes cathodiques (notés CRT, soit cathode ray tube ou en français tube à rayonnement cathodique), c'est à dire un tube en verre sous vide dans lequel un canon à électrons émet un flux d'électrons dirigés par un champ électrique vers un écran couvert de petits éléments phosphorescents. L'écran est recouvert d'une fine couche d'éléments phosphorescents, appelés luminophores, émettant de la lumière par excitation lorsque les électrons viennent les heurter, ce qui constitue un point lumineux appelé pixel. Un moniteur noir et blanc permet d'afficher des dégradés de couleur (niveaux de gris) en variant l'intensité du rayon. Pour les moniteurs couleurs, trois faisceaux d'électrons (donc trois cathodes) viennent chacun heurter un point d'une couleur spécifique : un rouge, un vert et un bleu (RGB : Red, Green, Blue ) ou en français RVB Rouge, vert, bleu. Prof. Dr. YENDE RAPHAEL Grevisse, PhD. Cours d’Informatique Générale / UNIBAS"}
{"pack_id": "french_pack", "section_title": "calculs mathématiques simples avec une précision pouvant atteindre", "page": 36, "chunk_id": "french_pack_36_0", "content": "34 Les moniteurs à écrans plats (souvent notés FDP pour Flat panel display) se généralisent de plus en plus dans la mesure où leur facteur d'encombrement et leur poids sont très inférieurs à ceux des écrans CRT traditionnels. La technologie LCD (Liquid Crystal Display) est basée sur un écran composé de deux plaques transparentes entre lesquelles est coincée une fine couche de liquide contenant des molécules (cristaux) qui ont la propriété de s'orienter lorsqu'elles sont soumises à du courant électrique. L'avantage majeur de ce type d'écran est son encombrement réduit, d'où son utilisation sur les ordinateurs portables. Les moniteurs sont souvent caractérisés par les données suivantes :  La définition : c'est le nombre de points (pixel) que l'écran peut afficher, ce nombre de points est généralement compris entre 640x480 (640 points en longueur, 480 points en largeur) et 1600x1200, mais des résolutions supérieures sont techniquement possibles ;  La taille : Elle se calcule en mesurant la diagonale de l'écran et est exprimée en pouces, c'est-à-dire 2.54 cm. Il faut veiller à ne pas confondre la définition de l'écran et sa taille. En effet un écran d'une taille donnée peut afficher différentes définitions, cependant de façon générale les écrans de grande taille possèdent une meilleure définition ;  Le pas de masque (en anglais dot pitch) : C'est la distance qui sépare deux photophores ; plus celle-ci est petite plus l'image est précise. Ainsi un pas de masque inférieur ou égal à 0,25 mm procurera un bon confort d'utilisation, tandis que les écrans possédant des pas de masque supérieurs ou égaux à 0,28 mm seront à proscrire ;  La résolution : Elle détermine le nombre de pixels par unité de surface, pixels par pouce linéaire (en anglais DPI : Dots Per Inch, traduisez points par pouce). Une résolution de 300 dpi signifie 300 colonnes et 300 rangées de pixels sur un pouce carré ce qui donnerait donc 90000 pixels sur un pouce carré ;  La fréquence de balayage verticale (refresh rate en anglais) : Elle représente le nombre d'images qui sont affichées par seconde, on l'appelle aussi"}
{"pack_id": "french_pack", "section_title": "calculs mathématiques simples avec une précision pouvant atteindre", "page": 36, "chunk_id": "french_pack_36_1", "content": ": Dots Per Inch, traduisez points par pouce). Une résolution de 300 dpi signifie 300 colonnes et 300 rangées de pixels sur un pouce carré ce qui donnerait donc 90000 pixels sur un pouce carré ;  La fréquence de balayage verticale (refresh rate en anglais) : Elle représente le nombre d'images qui sont affichées par seconde, on l'appelle aussi rafraîchissement, elle est exprimée en Hertz. Plus cette valeur est élevée meilleur est le confort visuel (on ne voit pas l'image scintiller), il faut donc qu'elle soit supérieure à 67 Hz (limite inférieure à partir de laquelle l'œil voit véritablement l'image « clignoter »). Prof. Dr. YENDE RAPHAEL Grevisse, PhD. Cours d’Informatique Générale / UNIBAS"}
{"pack_id": "french_pack", "section_title": "calculs mathématiques simples avec une précision pouvant atteindre", "page": 37, "chunk_id": "french_pack_37_0", "content": "35 2. Imprimante L'imprimante permet de faire une sortie imprimée (sur papier ou sur tout autre support) des données de l'ordinateur. Il en existe plusieurs types dont les plus courants sont :  L’imprimante matricielle : Elle permet d'imprimer des documents grâce à un va-et-vient de la tête sur le papier. La tête est constituée de petites aiguilles, poussées par des électro-aimants, qui viennent taper contre un ruban de carbone situé entre la tête et le papier. Ce ruban de carbone défile pour qu'il y ait continuellement de l'encre dessus. A chaque fin de ligne un rouleau fait tourner la feuille. Les imprimantes matricielles les plus récentes sont équipées de têtes d'impression comportant 24 aiguilles, ce qui leur permet d'imprimer avec une résolution de 216 points par pouce.  L’imprimante à jet d’encre : La technologie du jet d'encre a été inventée par Canon, elle repose sur le principe simple mais efficace qu'un fluide chauffé produit des bulles. Le chercheur qui a découvert ce principe avait mis accidentellement en contact une seringue remplie d'encre et un fer à souder, cela créa une bulle dans la seringue qui fit jaillir de l'encre de la seringue. Chaque buse produit une bulle minuscule qui fait éjecter une gouttelette extrêmement fine. Le vide engendré par la baisse de pression aspire une nouvelle goutte ...  L’imprimante LASER (Light Amplification by Stimulation of Emission Radiation) : L'imprimante laser reproduit à l'aide de points l'image que lui envoie le PC par le port LPT (line printing) ou USB. Grâce au laser, les points sont plus petits et la définition est meilleure. Ainsi, l'imprimante Laser n'ayant pas de tête mécanique est beaucoup plus rapide et moins bruyante. Prof. Dr. YENDE RAPHAEL Grevisse, PhD. Cours d’Informatique Générale / UNIBAS"}
{"pack_id": "french_pack", "section_title": "calculs mathématiques simples avec une précision pouvant atteindre", "page": 38, "chunk_id": "french_pack_38_0", "content": "36 La qualité d’une imprimante se définit par :  La vitesse d'impression : exprimée en pages par minute (ppm), la vitesse d'impression représente la capacité de l'imprimante à imprimer un grand nombre de pages par minute.  La résolution : exprimée en points par pouces (notés ppp ou dpi, pour dot per inch), la résolution définit la finesse de l'impression.  Le temps de préchauffage : il représente le temps d'attente nécessaire avant la première impression. En effet une imprimante ne peut pas imprimer « à froid », il lui est nécessaire d'atteindre une certaine température pour fonctionner de manière optimale.  La mémoire embarquée : il s'agit de la quantité de mémoire permettant à l'imprimante de stocker les travaux d'impression. Plus la quantité de mémoire n’est élevée, plus la file d'attente des travaux peuvent être importante.  Les cartouches : les cartouches sont rarement standards et dépendent fortement de la marque et du modèle d'imprimante. Ainsi, certains constructeurs privilégient des cartouches multicolores, tandis que d'autres proposent des cartouches d'encre séparées. Les cartouches d'encre séparées sont globalement plus économiques car il n'est pas rare qu'une couleur soit plus utilisée que les autres. NB : Il existe des périphériques d’entrée/sortie qui servent à stocker les données et les programmes. Il s’agit entre autre : clef USB, CD, DVD, disque dur ou disquette, etc. 3. Notion sur le bus On appelle « bus », en informatique, un ensemble de liaisons physiques (câbles, pistes de circuits imprimés, ...) pouvant être exploitées en commun par plusieurs éléments matériels afin de communiquer. Un bus est caractérisé par le volume d'informations transmises simultanément (exprimé en bits), correspondant au nombre de lignes sur lesquelles les données sont envoyées de manière simultanée. Une nappe de 32 fils permet ainsi de transmettre 32 bits en parallèle. On parle ainsi de « largeur de bus » pour désigner le nombre de bits qu'il peut transmettre simultanément. Prof. Dr. YENDE RAPHAEL Grevisse, PhD. Cours d’Informatique Générale / UNIBAS"}
{"pack_id": "french_pack", "section_title": "III.1. Représentation des informations", "page": 39, "chunk_id": "french_pack_39_0", "content": "37 D'autre part, la vitesse du bus est également définie par sa fréquence (exprimée en Hertz), c'est-à-dire le nombre de paquets de données envoyés ou reçus par seconde. On parle de cycle pour désigner chaque envoi ou réception de données. On distingue généralement sur un ordinateur deux types de bus : le bus système et les bus d’extension permettant de connecter des cartes d'extensions. − Le bus système permet au processeur de communiquer avec la mémoire centrale du système (mémoire vive ou RAM). Le bus interne est lui-même subdivisé en deux bus :  Le bus d'adresses (ou bus mémoire) transporte les adresses mémoire auxquelles le processeur souhaite accéder pour lire ou écrire une donnée.  Le bus de données véhicule les informations en provenance ou à destination du processeur. − Le bus d'extension (parfois appelé bus d'entrée/sortie) permet aux divers composants de la carte mère (USB, série, parallèle, disques durs, lecteurs et graveurs de CD-ROM, etc.) de communiquer entre eux mais il permet surtout l'ajout de nouveaux périphériques grâce aux connecteurs d'extension (appelés slots) connectés sur le bus d'entrées-sorties. On parle généralement de bridge (en français pont) pour désigner un élément d'interconnexion entre deux bus. 4. Notions de ports d’entrée-sortie Les ports sont des prises que l’on trouve à l’arrière de l’ordinateur et qui permettent de brancher divers matériels. Les ports d'entrée-sortie sont des éléments matériels de l'ordinateur, permettant au système de communiquer avec des éléments extérieurs, c'est-à-dire d'échanger des données, d'où l'appellation d'interface d'entrée-sortie (notée parfois interface d'E/S). a. Les ports « série » Les ports série représentent les premières interfaces ayant permis aux ordinateurs d'échanger des informations avec le \"monde extérieur\". Le terme série désigne un envoi de données via un fil unique : les bits sont envoyés les uns à la suite des autres. A l'origine les ports série permettaient uniquement d'envoyer des données, mais pas d'en recevoir, c'est pourquoi des ports bidirectionnels ont été mis au point (ceux qui équipent les ordinateurs actuels le sont) ; les ports séries bidirectionnels ont donc besoin de deux fils pour effectuer la communication. Prof. Dr. YENDE RAPHAEL Grevisse,"}
{"pack_id": "french_pack", "section_title": "III.1. Représentation des informations", "page": 39, "chunk_id": "french_pack_39_1", "content": "envoyés les uns à la suite des autres. A l'origine les ports série permettaient uniquement d'envoyer des données, mais pas d'en recevoir, c'est pourquoi des ports bidirectionnels ont été mis au point (ceux qui équipent les ordinateurs actuels le sont) ; les ports séries bidirectionnels ont donc besoin de deux fils pour effectuer la communication. Prof. Dr. YENDE RAPHAEL Grevisse, PhD. Cours d’Informatique Générale / UNIBAS"}
{"pack_id": "french_pack", "section_title": "I.2. Représentation des données", "page": 40, "chunk_id": "french_pack_40_0", "content": "38 Les ports série sont généralement intégrés à la carte mère, c'est pourquoi des connecteurs présents à l'arrière du boîtier, et reliés à la carte mère par une nappe de fils, permettent de connecter un élément extérieur. Les connecteurs séries possèdent généralement 9 broches (connecteur DB9) : b. Les ports parallèles La transmission de données en parallèle consiste à envoyer des données simultanément sur plusieurs canaux (fils). Les ports parallèles présents sur les ordinateurs personnels permettent d'envoyer simultanément 8 bits (un octet) par l'intermédiaire de 8 fils. Les premiers ports parallèles bidirectionnels permettaient d'atteindre des débits (volume d’informations qu’il est possible de traiter) de l'ordre de 2.4Mb/s. Toutefois des ports parallèles améliorés ont été mis au point afin d'obtenir des débits plus élevés. Les ports parallèles sont, comme les ports série, intégrés à la carte mère. Les connecteurs DB25 permettent de connecter un élément extérieur (une imprimante par exemple). c. Les ports USB Les ports USB (Universal Serial Bus, ports séries universels) sont basés sur une architecture de type série. Il s'agit toutefois d'une interface entrée-sortie beaucoup plus rapide que les ports série standards. L’architecture USB a pour caractéristique de fournir l’alimentation électrique aux périphériques qu’elle relie. Elle utilise pour cela un câble composé de quatre fils (la masse GND, l’alimentation VBUS et deux fils de données appelés D- et D+). Ainsi, il est possible de brancher les périphériques sans éteindre l’ordinateur (branchement à chaud). Lors de la connexion du périphérique à l’hôte, ce dernier détecte l’ajout du nouvel élément grâce au changement de la tension entre les fils D+ et D-. A ce moment, l’ordinateur envoie un signal d’initialisation au périphérique, puis lui fournit du courant grâce aux fils GND et VBUS. Le périphérique est alors alimenté en courant électrique et récupère temporairement l’adresse par défaut (l’adresse 0). L’étape suivante consiste à lui fournir son adresse définitive (c’est la procédure d’énumération). Pour cela, l’ordinateur interroge les périphériques déjà branchés pour connaître la leur et en attribue une au nouveau, qui en retour s’identifie. L’hôte, disposant de toutes les caractéristiques nécessaires est alors en mesure de charger le pilote approprié..."}
{"pack_id": "french_pack", "section_title": "I.2. Représentation des données", "page": 40, "chunk_id": "french_pack_40_1", "content": "électrique et récupère temporairement l’adresse par défaut (l’adresse 0). L’étape suivante consiste à lui fournir son adresse définitive (c’est la procédure d’énumération). Pour cela, l’ordinateur interroge les périphériques déjà branchés pour connaître la leur et en attribue une au nouveau, qui en retour s’identifie. L’hôte, disposant de toutes les caractéristiques nécessaires est alors en mesure de charger le pilote approprié... Prof. Dr. YENDE RAPHAEL Grevisse, PhD. Cours d’Informatique Générale / UNIBAS"}
{"pack_id": "french_pack", "section_title": "I.2. Représentation des données", "page": 41, "chunk_id": "french_pack_41_0", "content": "39 CHAPITRE III. CODAGE ET REPRESENTATION DES INFORMATIONS III.1. Représentation des informations Par définition, « une information » est tout élément de connaissance susceptible d'être représenté à l'aide de conventions pour être conservé, traité ou communiqué. C’est ainsi, Lorsque nous voulons interpréter quelles informations transitent dans un réseau, et quand elles circulent, il convient de les représenter de manière facilement compréhensible, Alors présumons qu’un ordinateur A doive envoyer l’image représentée dans la figure ci-dessous vers un autre ordinateur B, après avoir convenu de la taille de cette image et de l’ordre d’envoi des éléments la constituant. La description se fera, par exemple, carré par carré, ligne par ligne, en commençant en haut à gauche, pour finir en bas à droite. Il est en effet impossible d’envoyer l’image telle quelle sans la coder. La séquence de couleurs à envoyer est donc (en notant blanc B et noir A) : AAAAA ABBBA ABABA ABBBA AAAAA Représentation à transmettre3 Une manière de coder la couleur de chaque carré consiste à associer une valeur à chaque couleur possible, par exemple 1 à B (le pixel sur l’écran est allumé) et 0 à A (le pixel est éteint). La suite de chiffres codant l’image est alors : 00000 - 01110 - 01010 - 01110 – 00000 Données informatique (binaire) 3 Laure Petrucci, Cours de Réseaux, IUT de Villetaneuse, (septembre 2012) Prof. Dr. YENDE RAPHAEL Grevisse, PhD. Cours d’Informatique Générale / UNIBAS"}
{"pack_id": "french_pack", "section_title": "III.3. Les systèmes de numération", "page": 42, "chunk_id": "french_pack_42_0", "content": "40 Données binaire en transmission I.2. Représentation des données Par définition, « une donnée » est une représentation d'une information sous une forme conventionnelle destinée à faciliter son traitement. Les données informatiques sont représentées par des « suites de nombres ». Ces nombres sont écrits en binaire (c’est-à-dire en base 2). En base 2, nous n’utilisons que les chiffres 0 et 1. L’utilisation de la base 2 garantit de pouvoir représenter un état stable d’un système physique, par exemple : circuit électrique ouvert/fermé, ou carte perforée avec un trou/sans trou . . . Il sied de rappeler que la compréhension de la représentation des données informatique implique autant la connaissance de quelques unités utilisées :  Bit (Binary digit) : C’est la plus petite unité de mesure de la quantité d'information numérique (8 bits= 1 octet). Autrement-dit, un bit est un symbole binaire (Est dit binaire tout élément qui n'existe qu'en deux états : 1 ou 0, vrai ou faux. On parle de langage binaire ou de fichier binaire). C’est par exemple : NBRE DE BIT ETATS COMBINAISONS 1 bit 2 0 et 1 2 bits 4 00, 01, 10 et 11 3 bits 8 000, 001, 010, 011, 100, 101, 110 et 111 4 bits 16 0000, 0001, 0010, 0011, 0100, 0101, 0110, 0111, 1000, 1001,1010, 1011, 1101, 1100, 1101, 1110, 1111 5 bits 32 00000, 00001, 00010, 00011, 00100, 00101, 00110, 00111, 01000, 01001, 01010, 01011, 01100, 01101, 01110, 01111, 10000, 10001, 10010, 10011, 10100, 10101, 10110, 10111, 11000, 11001, 11010, 11011, 11100, 11101, 11110, 11111. n bits n état n combinaisons Prof. Dr. YENDE RAPHAEL Grevisse, PhD. Cours d’Informatique Générale / UNIBAS"}
{"pack_id": "french_pack", "section_title": "III.3.2. Le système binaire", "page": 43, "chunk_id": "french_pack_43_0", "content": "41 L’élément bit est divisé en grandes parties à savoir : le multiplicateur et le diviseur : TABLEAU DES MULTIPLICATEURS DE BITS Unité Symbole Valeur (bits) Kilo-bit Kb 103 = 1 000 Méga-bit Mb 106 = 1 000 000 Giga-bit Gb 109 = 1 000 000 000 Térabit Tb 1012 = 1 000 000 000 000 Péta-bit Pb 1015= 1 000 000 000 000 000 Exa-bit Eb 1018= 1 000 000 000 000 000 000 Zetta-bit Zb 1021= 1 000 000 000 000 000 000 000 Yotta-bit Yb 1024= 1 000 000 000 000 000 000 000 000 TABLEAU DES DIVISEURS DE BITS milli m -3 = 1/1 000 10 micro µ 10-6 = 1/1 000 000 nano n 10-9 = 1/1 000 000 000 pico p 10-12 = 1/1 000 000 000 000 femto f 10-15= 1/1 000 000 000 000 000 atto a 10-18= 1/1 000 000 000 000 000 000 Zepto z 10-21= 1/1 000 000 000 000 000 000 000 Yocto y 10-24= 1/1 000 000 000 000 000 000 000 000  Octet (Byte) : Est une suite de 8 bits est appelée un octet. Un octet peut représenter un caractère unique, tel qu'une lettre, un chiffre ou un signe de ponctuation. Comme un octet ne représente qu'une petite quantité d'information, la taille de la mémoire des ordinateurs et celle de leur mémoire de masse sont souvent exprimées en kilo-octets (1024 octets), méga-octets (1 048 576 octets), ou giga-octets (1 073 741 824octets). Note : Un octet est souvent utilisé pour représenter un caractère alphanumérique. Attention, en anglais le « bit » est appelé « bit », alors que « l’octet » est appelé « byte ». L’élément « octet » est à son tour subdivisé en 2 parties: Prof. Dr. YENDE RAPHAEL Grevisse, PhD. Cours d’Informatique Générale / UNIBAS"}
{"pack_id": "french_pack", "section_title": "III.3.2. Le système binaire", "page": 44, "chunk_id": "french_pack_44_0", "content": "42 TABLEAU MULTIPLICATEURS DES OCTETS Unité Symbole Valeur (Octets) Kibi-octet Kio (KByte) 210 = 1 024 Mebi-octet Mio (MByte) 220= 1 048 576 Gibi-octet Gio (GByte) 230= 1 073 741 824 Tebi-octet Tio (TByte) 240 = 1 099 511 627 776 Ebi-octet Eio (Ebyte) 250 = 1 125 899 906 842 624 Yobi-octet Yio (Ybyte) 260 Zebi-octet Zio (Zbyte) 270 Généralement, lorsque les préfixes « kilo », « Méga », « Giga » et « Téra » sont appliqués aux octets, ils ne représentent pas une puissance de 10, mais une puissance de 2. Cet usage reste largement en vigueur chez les professionnels comme le grand public. Cependant cette tradition viole les normes en vigueur qui imposent d’utiliser les préfixes « kibi », « mébi », « gibi », « tébi » pour les puissances de 2. III.3. Les systèmes de numération Un système de numération est un système de représentation des nombres utilisant un certain nombre des symboles. Autrement dit, c’est un ensemble de conventions et des méthodes permettant de nommer, d’écrire les nombres et d’effectuer les calculer. La base de numération indique le nombre de différents symboles utilisés par ce système. Un système de numération est caractérisé par : − La base indiquant le nombre de symboles utilisés dans le système ; − Les symboles appelés chiffres ; − Les normes de formation d‘une unité et du nombre immédiatement supérieur au chiffre le plus élevé de la base : chaque des chiffres du système représente un coefficient multiplicateur d‘une puissance de la base selon la position du chiffre dans un nombre, la première puissance à droite étant égale à 0 et allant progressant vers la gauche. La position d‘un chiffre à l‘intérieur d‘un nombre défini son rang. Il existe plusieurs systèmes de numération en informatique, mais dans le cadre de ce cours, nous ne parlerons que de 4 systèmes de numération :  Le système décimal ;  Le système octal ;  Le système binaire ;  Le système hexadécimal. Prof. Dr. YENDE RAPHAEL Grevisse, PhD. Cours d’Informatique Générale / UNIBAS"}
{"pack_id": "french_pack", "section_title": "III.3.3. Le système octal", "page": 45, "chunk_id": "french_pack_45_0", "content": "43 III.3.1. Le système décimal Le système décimal est celui dans lequel nous avons le plus l'habitude d'écrire où chaque chiffre peut avoir 10 valeurs différentes tels : 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, de ce fait, le système décimal a pour base 10. Tout nombre écrit dans le système décimal vérifie la relation suivante : 745 = 7 × 100 + 4 × 10 + 5 × 1 745 = 7 × 10 × 10 + 4 × 10 + 5 × 1 745 = 7 × 102 + 4 × 101 + 5 × 100 Chaque chiffre du nombre est à multiplier par une puissance de 10 : c'est ce que l'on nomme le poids du chiffre. L'exposant de cette puissance est nul pour le chiffre situé le plus à droite et s'accroît d'une unité pour chaque passage à un chiffre vers la gauche. 12 435 = 1 × 104 + 2 × 103 + 4 × 102 + 3 × 101 + 5 × 100. Cette façon d'écrire les nombres est appelée système de numération de position. Dans notre système conventionnel, nous utilisons les puissances de 10 pour pondérer la valeur des chiffres selon leur position, cependant il est possible d'imaginer d'autres systèmes de nombres ayant comme base un nombre entier différent. III.3.2. Le système binaire Dans le système binaire, chaque chiffre peut avoir 2 valeurs différentes : 0, 1. De ce fait, le système a pour base 2. Tout nombre écrit dans ce système vérifie la relation suivante : (10 110) = 1 × 24 + 0 × 23 + 1 × 22 + 1 × 21 + 0 × 20 2 (10 110) = 1 × 16 + 0 × 8 + 1 × 4 + 1 × 2 + 0 × 1 2 Donc : (10110) = (22) . 2 10 Tous les systèmes de numération de position obéissent aux règles du système binaire sans exception. Calcul binaire Les opérations arithmétiques simples telles que l'addition, la soustraction et la multiplication sont faciles à effectuer en binaire et utilisent les opérateurs"}
{"pack_id": "french_pack", "section_title": "III.3.3. Le système octal", "page": 45, "chunk_id": "french_pack_45_1", "content": "+ 1 × 4 + 1 × 2 + 0 × 1 2 Donc : (10110) = (22) . 2 10 Tous les systèmes de numération de position obéissent aux règles du système binaire sans exception. Calcul binaire Les opérations arithmétiques simples telles que l'addition, la soustraction et la multiplication sont faciles à effectuer en binaire et utilisent les opérateurs booléens : Prof. Dr. YENDE RAPHAEL Grevisse, PhD. Cours d’Informatique Générale / UNIBAS"}
{"pack_id": "french_pack", "section_title": "III.3.3. Le système octal", "page": 46, "chunk_id": "french_pack_46_0", "content": "44 A. L'addition en binaire L'addition en binaire se fait avec les mêmes règles qu'en décimale : on commence à additionner les bits de poids faible (les bits de droite) puis on a des retenues lorsque la somme de deux bits de mêmes poids dépasse la valeur de l'unité la plus grande (dans le cas du binaire : 1) ; cette retenue est reportée sur le bit de poids plus fort suivant... Par exemple : 1101 + 1110 = 11011 2 2 2 (décimal 13 + 14 = 27) 1 1 0 1 2 + 1 1 1 0 2 ___ ___ ___ ___ ___ 1 1 0 1 1 2 B. La multiplication en binaire La multiplication se fait entre bits de même poids, avec le même système de retenue qu'en décimale. La table de multiplication en binaire est très simple : Par exemple : 1101 x 110 = 1001110 (décimal 13 x 6 = 78) 2 2 2 1 1 0 1 2 X 1 1 0 2 ____ ____ ____ ____ ____ 0 1 1 0 1 0 0 1 1 0 1 ____ ____ ____ ____ ____ ____ ____ 1 0 0 1 1 1 0 2 C. La division en binaire Par exemple : 101100 / 100 = 1011 44 / 4 = 11) 2 2 2 ( 0 1 1 0 0 1 0 0 2 2 1 - 0 0 1 1 1 1 0 - 0 1 Prof. Dr. YENDE RAPHAEL Grevisse, PhD. Cours d’Informatique Générale / UNIBAS"}
{"pack_id": "french_pack", "section_title": "III.3.4. Le système hexadécimal", "page": 47, "chunk_id": "french_pack_47_0", "content": "45 1 1 0 1 - 0 0 1 1 0 0 - 0 0 1 0 D. La soustraction en binaire Par exemple : 1011 – 111 = 100 2 2 2 1 0 1 1 2 - 1 1 1 2 ___ ___ ___ ___ 1 0 0 2 Le système binaire est un système de numération fondé sur la position des chiffres dont la base b=2. Les 2 chiffres notés 0 et 1 sont appelés bits. Pour convertir un nombre décimal en son équivalent binaire, il convient de distinguer la partie entière (PE) de celle fractionnaire (PF). Pour la partie entière, divisez PE et chacun des quotients successifs par 2 jusqu’à obtenir un quotient nul c’est-à-dire égal à 0. La suite des restes dans l’ordre inverse de leur obtention. Pour la partie fractionnaire, multipliez PF et les parties fractionnaires des produits successifs par 2 jusqu’à obtenir soit une partie fractionnaire nulle, soit une répétition de cette partie. NB : la conversion d’un nombre binaire en son équivalent décimal passe par la multiplication de chaque élément du nombre binaire par le chiffre 2 élevé à une puissance ne croissant par pas de 1 compté à partir de 0 en partant de la droite, puis on effectue la somme des résultats obtenus. Pour la partie fractionnaire, on utilise les puissances négatives de 2. III.3.3. Le système octal Le système octal utilise un système de numération ayant comme base 8 (octal => latin octo = huit). Il faut noter que dans ce système nous n'aurons plus 10 symboles mais 8 seulement : 0, 1, 2, 3, 4, 5, 6, 7 Ainsi, un nombre exprimé en base 8 pourra se présenter de la manière suivante : (745) 8 Prof. Dr. YENDE RAPHAEL Grevisse, PhD. Cours d’Informatique Générale / UNIBAS"}
{"pack_id": "french_pack", "section_title": "III.4.3. Le code ASCII", "page": 48, "chunk_id": "french_pack_48_0", "content": "46 Lorsque l'on écrit un nombre, il faudra bien préciser la base dans laquelle on l'exprime pour lever les éventuelles indéterminations (745 existe aussi en base 10). Ainsi le nombre sera mis entre parenthèses (745 dans notre exemple) et indicé d'un nombre représentant sa base (8 est mis en indice). Cette base obéira aux même règles que la base 10, vue précédemment, ainsi on peut décomposer (745) de la façon suivante : 8 (745) = 7 × 82 + 4 × 81 + 5 × 80 8 (745) = 7 × 64 + 4 × 8 + 5 × 1 8 (745) = 448 + 32 + 5 8 Nous venons de voir que : (745) = (485) . 8 10 Voici un tableau récapitulatif : NB : les conversions entre les nombres octal-binaire se font par remplacement de chaque chiffre octal par son équivalent binaire ; et la conversion binaire- octal se fait en partageant le nombre binaire en groupe de 3 bits (en partant de la virgule binaire et en ajoutant les zéros les cas échéants) et en remplaçant chaque groupe par son équivalent octal. Prof. Dr. YENDE RAPHAEL Grevisse, PhD. Cours d’Informatique Générale / UNIBAS"}
{"pack_id": "french_pack", "section_title": "réalisée grâce à un progiciel spécifique. Quand on parle de SI automatisé,", "page": 49, "chunk_id": "french_pack_49_0", "content": "47 III.3.4. Le système hexadécimal Le système hexadécimal est un système de numération à base b=16. Il nécessite 16 symboles dont les 10 chiffres décimaux auquel on ajoute les 6 premières lettres de l’alphabet. Les nombres binaires étant de plus en plus longs, il a fallu introduire une nouvelle base : la base hexadécimale. Le système hexadécimal utilise les 16 symboles suivant : 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F. De ce fait, le système a pour base 16. Un nombre exprimé en base 16 pourra se présenter de la manière suivante : (5AF) La 16 correspondance entre base 2, base 10 et base 16 est indiquée dans le tableau ci-après : Le nombre (5AF) peut se décomposer comme suit : 16 (5AF) = 5 × 162 + A × 161 + F × 160 16 En remplaçant A et F par leur équivalent en base 10, on obtient : (5AF) = 5 × 162 + 10 × 161 + 15 × 160 16 (5AF) = 5 × 256 + 10 × 16 + 15 × 1 16 donc = (5AF) = (1455) 16 10 Prof. Dr. YENDE RAPHAEL Grevisse, PhD. Cours d’Informatique Générale / UNIBAS"}
{"pack_id": "french_pack", "section_title": "IV.1. Définition et contexte d’étude", "page": 50, "chunk_id": "french_pack_50_0", "content": "48 III.4. Codage des caractères On appelle « codage d'un nombre et/ou d‘un caractère » la façon selon laquelle il est décrit sous forme binaire. La représentation des nombres sur un ordinateur est indispensable pour que celui-ci puisse les stocker, les manipuler. Toutefois le problème est qu'un nombre mathématique peut être infini (aussi grand que l'on veut), mais la représentation d'un nombre dans un ordinateur doit être fait sur un nombre de bits prédéfini. Il s'agit donc de prédéfinir un nombre de bits et la manière de les utiliser pour que ceux-ci servent le plus efficacement possible à représenter l'entité. Ainsi il serait idiot de coder un caractère sur 16 bits (65536 possibilités) alors qu'on en utilise généralement moins de 256 ... actuellement, il existe : III.4.1. Le code DCB (Décimal codé binaire). Dans ce système, les nombres seront représentés dans la logique décimale, toute fois chaque chiffre sera converti séparément en binaire en gardant son rang dans le nombre donné. Le besoin d‘harmoniser le nombre de caractères pour représenter chaque chiffre s‘est vite manifesté. Pour cela il a fallu convertir tous les chiffres du système décimal et constater le nombre maximum des positions requisses pour représenter chaque chiffre du système décimal en binaire. Cela étant, le code DCB va convertir les chiffres décimaux en binaire de 4 positions. … Bref, c’est un code qui date des années 50, de longueur 4, et ne possédant pas de minuscules. III.4.2. Le code Baudot Le code Baudot aussi appelé (code télégraphique ou code CCITT n° 2) : c’est un code de longueur 5bits qui ne permet que 25 combinaisons, c’est-à- dire 32 avec 2 caractères spéciaux permettant l'inversion chiffres ou lettres. C'est un des plus anciens codes conçus uniquement pour les réseaux télégraphiques commutés ou télex et utilisés dans le cadre de l’informatique. Comprend 60 caractères. III.4.3. Le code ASCII Le Code ASCII (American Standard Code for Information Interchange ou code CCITT n°5) : c’est un code de longueurs 7, avec la possibilité du 8eme bit de parité4 ou ISO à 7 éléments. Il contient des caractères spéciaux de contrôle (SOH, STX,"}
{"pack_id": "french_pack", "section_title": "IV.1. Définition et contexte d’étude", "page": 50, "chunk_id": "french_pack_50_1", "content": "télégraphiques commutés ou télex et utilisés dans le cadre de l’informatique. Comprend 60 caractères. III.4.3. Le code ASCII Le Code ASCII (American Standard Code for Information Interchange ou code CCITT n°5) : c’est un code de longueurs 7, avec la possibilité du 8eme bit de parité4 ou ISO à 7 éléments. Il contient des caractères spéciaux de contrôle (SOH, STX, ETX ...) et comprend 128 caractères. 4Le bit de parité est un bit qui est mis à « 0 » ou à « 1 » dans un caractère de sorte que le nombre total de bits \"1\" dans le champ de données soit pair ou impaire, selon la convention choisie. Prof. Dr. YENDE RAPHAEL Grevisse, PhD. Cours d’Informatique Générale / UNIBAS"}
{"pack_id": "french_pack", "section_title": "IV.3 Fonctions d’un système d’exploitation", "page": 51, "chunk_id": "french_pack_51_0", "content": "49 III. 4.4. Le code EBCDIC Le Code EBCDIC (Extended Binary Coded Decimal Interchange Code) : est un Code de longueur 8bits, d’origine IBM (International Business Machine) utilisé dans les ordinateurs du constructeur. Ce code autorise jusqu'à 256 caractères). Ce code permet la représentation des lettres contrairement au code DCB qui ne pouvait représenter que les chiffres, le code respecte les séquences croissantes alphabétiques A à Z et numériques de 0—9. Du fait qu‘il tient compte des valeurs binaires de chaque caractère, ceci permet de trier les informations de façon alphabétique et numérique croissante ou décroissante. Il est alors possible de procéder à la comparaison des caractères en tenant compte de la table EBCDIC qui permet la combinaison des caractères. Prof. Dr. YENDE RAPHAEL Grevisse, PhD. Cours d’Informatique Générale / UNIBAS"}
{"pack_id": "french_pack", "section_title": "IV.3 Fonctions d’un système d’exploitation", "page": 52, "chunk_id": "french_pack_52_0", "content": "50 CHAPITRE IV. NOTIONS SUR LES SYSTEMES D’EXPLOITATION IV.1. Définition et contexte d’étude En informatique, un système d'exploitation (souvent appelé « OS » de l'anglais Operating System) est un ensemble de programmes qui dirige l'utilisation des ressources d'un ordinateur par des logiciels applicatifs. Le rôle principal d’un système d’exploitation est d’assurer la liaison entre les ressources, l’utilisateur et les applications en créant une machine virtuelle et son interface. Il reçoit des demandes d'utilisation des ressources de l’ordinateur ressources de stockage des mémoires (par exemple des accès à la mémoire vive, aux disques durs), ressources de calcul du processeur central, ressources de communication vers des périphériques (pour parfois demander des ressources de calcul au GPU par exemple ou tout autre carte d’extension) ou via le réseau de la part des logiciels applicatifs. Le système d'exploitation gère les demandes ainsi que les ressources nécessaires évitant les interférences entre les logiciels. Le système d'exploitation est le logiciel système :  Il est le système principal car il permet à l'ordinateur et aux programmes de fonctionner par lui ;  Il est le système qui se lance en second après le firmware (programme d’amorcage ou bootloader) exécuté lors de la mise en marche de l'ordinateur. Le système d’exploitation offre une suite de services généraux facilitant la création de logiciels applicatifs et sert d'intermédiaire entre ces logiciels et le matériel informatique. Un système d'exploitation apporte commodité, efficacité et capacité d'évolution, permettant d'introduire de nouvelles fonctions et du nouveau matériel sans remettre en cause les logiciels. Il existe sur le marché des dizaines de systèmes d'exploitation différents, très souvent livrés avec l'appareil informatique. C'est le cas de Windows, MacOs, Irix, Symbian OS, Unix, GNU/Linux (pour lequel il existe de nombreuses distributions) ou Android. Les fonctionnalités offertes diffèrent d'un système à l'autre et sont typiquement en rapport avec l'exécution des programmes, l'utilisation de la mémoire centrale ou des périphériques, la manipulation des systèmes de fichiers, la communication, ou la détection et la gestion d'erreurs. Prof. Dr. YENDE RAPHAEL Grevisse, PhD. Cours d’Informatique Générale / UNIBAS"}
{"pack_id": "french_pack", "section_title": "IV.4. Typologie des systèmes d’exploitation", "page": 53, "chunk_id": "french_pack_53_0", "content": "51 IV.2. Objectifs des systèmes d’exploitation Tous les systèmes d’exploitation sont créés pour uniquement deux objectifs : − Transformer le matériel informatique (ordinateur) en une machine utilisable : cela veut dire que chaque système d’exploitation est fourni avec des outils adaptés aux, besoins de l’utilisateur indépendamment des caractéristiques physiques de son ordinateur. − Optimisez l’utilisation des ressources (matériels et logiciels) : cela veut dire que le système d’exploitation est dans l’obligation de rendre favorable (facile à utiliser) l’exploitation de l’ordinateur. Ces deux objectifs poursuivent les résultats ci-après :  Sécurité des données traitées : ce qui renvoies à l’intégrité, contrôle des accès, à la confidentialité. Bref, l’absence totale du danger lors de l’exploitation de l’ordinateur.  Fiabilité : satisfaction des utilisateurs, même dans les conditions hostiles et imprévues.  Performance du système informatique : c’est le degré de satisfaction des utilisateurs en termes chiffrés et des résultats obtenus. IV.3 Fonctions d’un système d’exploitation Le système d'exploitation offre une suite de services généraux facilitant la création et l'utilisation de logiciels applicatifs. Les services offerts sont en rapport avec l'utilisation des ressources de l'ordinateur par les programmes. Ils permettent en particulier d'exécuter des programmes, de lire et écrire des informations, de manipuler les fichiers , de communiquer et de déceler des erreurs. Ces services permettent à plusieurs usagers et plusieurs programmes de se partager les ressources de l'ordinateur. La principale fonction du système d'exploitation est de joindre les différences entre les différentes architectures informatiques, et d'organiser l'utilisation des ressources de manière rationnelle. Ainsi, il regroupe alors ses fonctions en 5 classes : 1. La gestion du processus Cette fonction est aussi appelée « gestion des applications » ou « gestion de l’exécution », c’est lorsque le système d’exploitation permet de gérer l’allocation des taches d’un processeur au moyen d’un séquenceur qui ordonnance les processus les uns après les autres. La gestion du processus consiste également à s’assurer qu’il y a une bonne exécution des applications, leur affectation des ressources nécessaires à leur fonctionnement en détectant et en corrigeant les erreurs échéantes. Prof. Dr. YENDE RAPHAEL Grevisse, PhD. Cours d’Informatique Générale / UNIBAS"}
{"pack_id": "french_pack", "section_title": "IV.4. Typologie des systèmes d’exploitation", "page": 54, "chunk_id": "french_pack_54_0", "content": "52 2. La gestion de la mémoire C’est lorsque le système d’exploitation permet de gérer l’espace- mémoire alloué a chaque application utilisée par l’utilisateur (en créant des mémoires virtuelles). Le système d'exploitation dirige l'utilisation de la mémoire. Il réserve un emplacement de mémoire lorsqu'un processus le demande, et le libère lorsqu'il n'est plus utilisé, par exemple lorsque le processus s'est arrêté. La quantité de mémoire utilisée par l'ensemble du système informatique dépend essentiellement de la manière dont le système d'exploitation effectue les réservations. Le mécanisme dit « mémoire virtuelle » est destiné à simuler la présence ou l'absence de mémoire centrale par manipulation de l'unité de gestion mémoire. C'est un mécanisme courant dans les systèmes d'exploitation contemporains. La mémoire virtuelle permet d'exécuter simultanément plus de programmes que ce que la mémoire centrale peut contenir. Chaque programme n'ayant pas besoin que la totalité des informations qu'il manipule soit présente dans la mémoire centrale, une partie des informations est stockée dans la mémoire de masse (en général dans un fichier ou une partition de disque dur) habituellement plus importante mais plus lente et sont transférées en mémoire centrale lorsque le programme en a besoin. Ainsi donc, Les programmes disposent d'un ou plusieurs espaces virtuels de mémoire continus pour travailler. 3. La gestion des fichiers Un fichier est une collection d'informations portant un nom, enregistrée sur un média tel qu'un disque dur, une bande magnétique ou un disque optique. Chaque médium a ses propres caractéristiques et sa propre organisation. Le système d'exploitation s'occupe de créer et de détruire des fichiers et des répertoires, de réserver de l'espace sur les médias ainsi que copier le contenu des fichiers de et vers la mémoire centrale. Il aide également les logiciels applicatifs à retrouver les fichiers, partager les fichiers entre plusieurs utilisateurs, modifier le contenu des fichiers et créer des répertoires (permettant de classer et d'organiser les fichiers). La vitesse du système informatique dépendra de la vitesse de manipulation des fichiers. Le système d'exploitation permet en particulier de manipuler les attributs : les caractéristiques du fichier tels que son nom, la date de création, le type"}
{"pack_id": "french_pack", "section_title": "IV.4. Typologie des systèmes d’exploitation", "page": 54, "chunk_id": "french_pack_54_1", "content": "partager les fichiers entre plusieurs utilisateurs, modifier le contenu des fichiers et créer des répertoires (permettant de classer et d'organiser les fichiers). La vitesse du système informatique dépendra de la vitesse de manipulation des fichiers. Le système d'exploitation permet en particulier de manipuler les attributs : les caractéristiques du fichier tels que son nom, la date de création, le type du contenu, la taille et l'emplacement. Il permet également de manipuler les permissions : des autorisations qui indiquent si un utilisateur pourra lire, écrire ou exécuter le fichier. Le système Prof. Dr. YENDE RAPHAEL Grevisse, PhD. Cours d’Informatique Générale / UNIBAS"}
{"pack_id": "french_pack", "section_title": "IV.4. Typologie des systèmes d’exploitation", "page": 55, "chunk_id": "french_pack_55_0", "content": "53 d'exploitation tient compte du système de fichiers : la manière dont les fichiers sont organisés et répartis sur un dispositif de stockage. Dans un système d'exploitation multi-utilisateurs, les programmes manipulant le système de fichiers effectuent des contrôles pour vérifier qu'aucun fichier n'est manipulé par une personne non autorisée. Ce type de système d'exploitation refusera toute manipulation non autorisée. 4. La gestion de communication Cette fonction est aussi appelée « gestion de l’interface », c’est lorsque le système d’exploitation permet l’interaction entre l’utilisateur la machine au moyen d’un langage informatique ou d’une interface qui peut être soit graphique, en mode commande ligne ou tactile aussi appelée « spatiale ». 5. La gestion des périphériques Cette fonction aussi appelée « gestion des entrées/sorties ». C’est lorsque le système d’exploitation permet de gérer les accès aux ressources matérielles de l’ordinateur par l’intermédiaires des pilotes. IV.4. Typologie des systèmes d’exploitation Il existe cinq typologies (générations) de systèmes d'exploitation : par lots (batch), multi programmés, en temps partagé, temps réel, et distribués. Chacun des principes mis en œuvre dans une typologie se retrouve dans les générations suivantes : 1. Les systèmes d’exploitation de traitement par lots (batch) Ce sont des systèmes prévus pour l'exécution de grands calculs les uns après les autres, avec peu d'intervention utilisateur. À partir de la génération des systèmes d'exploitation multiprogrammés, plusieurs programmes sont exécutés simultanément par planification (scheduling). Dans ces systèmes d'exploitation multitâches, plusieurs programmes résident dans la mémoire centrale et le système d'exploitation suspend régulièrement l'exécution d'un programme pour continuer l'exécution d'un autre. Les systèmes d'exploitation basés sur le traitement par « lots » (suites d'instructions et de données dans un ensemble de cartes perforées) sont apparus dans les années 1950. Un programme (avec ses données) n'est rien d'autre qu'une pile de cartes avec des indicateurs de début et de fin de lot. L'exécution d'un programme consiste à demander à un opérateur de placer la pile de cartes dans le lecteur, puis l'opérateur lance la lecture séquentielle des cartes. Le processeur central est au repos, durant les manipulations de l'opérateur. Un batch est un lot de travaux à"}
{"pack_id": "french_pack", "section_title": "IV.4. Typologie des systèmes d’exploitation", "page": 55, "chunk_id": "french_pack_55_1", "content": "d'autre qu'une pile de cartes avec des indicateurs de début et de fin de lot. L'exécution d'un programme consiste à demander à un opérateur de placer la pile de cartes dans le lecteur, puis l'opérateur lance la lecture séquentielle des cartes. Le processeur central est au repos, durant les manipulations de l'opérateur. Un batch est un lot de travaux à effectuer. L'opérateur compose un batch en posant les unes sur les autres les piles de cartes des différents programmes (avec leurs données) demandés par les utilisateurs. Il forme une Prof. Dr. YENDE RAPHAEL Grevisse, PhD. Cours d’Informatique Générale / UNIBAS"}
{"pack_id": "french_pack", "section_title": "IV.4. Typologie des systèmes d’exploitation", "page": 56, "chunk_id": "french_pack_56_0", "content": "54 grande pile de cartes séparées par des marque-pages, en général une carte de couleur particulière, qu'il place ensuite dans le lecteur. Le regroupement de plusieurs programmes en un batch diminue les interventions de l'opérateur. Dans un système basé sur les batchs, le cœur du système d'exploitation est un programme moniteur qui réside continuellement en mémoire centrale et permet à l'opérateur de demander le début ou l'arrêt de l'exécution du lot. À la fin de l'exécution de chaque tâche du lot, le moniteur effectue des travaux de nettoyage, puis lance l'exécution de la tâche suivante. Ainsi, l'opérateur intervient uniquement au début et à la fin du lot. En raison de la grande différence de vitesse entre le processeur et les périphériques, dans un système d'exploitation batch, le processeur est inutilisé 90 % du temps car les programmes attendent qu'un périphérique ou un autre termine les opérations. Avec ces systèmes d'exploitation il n'y a pas de concurrence entre les différentes tâches, la mise en œuvre de l'utilisation du processeur, de la mémoire et des périphériques est triviale mais loin d’être optimale. … Les systèmes d'exploitation batch sont adaptés à des applications nécessitant de très gros calculs mais peu d'implication de l'utilisateur : météo, statistiques, impôts... Les utilisateurs n'attendent pas immédiatement de résultats. Ils soumettent les demandes, puis reviennent ultérieurement collecter les résultats. 2. Les systèmes d’exploitation multiprogrammées Les systèmes d'exploitation multi-programmés sont apparus dans les années 1960. Le but recherché par de tels systèmes est d'augmenter l'efficacité de l'utilisation du processeur et des périphériques en utilisant la possibilité de les faire fonctionner en parallèle. Plusieurs programmes sont placés en mémoire centrale, et lorsque le programme en cours d'exécution attend un résultat de la part d'un périphérique, le système d'exploitation ordonne au processeur d'exécuter un autre programme. Dans les systèmes d'exploitation multi-programmés, l'utilisation du processeur est partagée par planification (scheduling) : à chaque utilisation d'un périphérique, le système d'exploitation choisit quel programme va être exécuté. Ce choix se fait sur la base de priorités. Le système d'exploitation comporte un mécanisme de protection évitant ainsi que le programme en cours d'exécution ne lise"}
{"pack_id": "french_pack", "section_title": "IV.4. Typologie des systèmes d’exploitation", "page": 56, "chunk_id": "french_pack_56_1", "content": "processeur d'exécuter un autre programme. Dans les systèmes d'exploitation multi-programmés, l'utilisation du processeur est partagée par planification (scheduling) : à chaque utilisation d'un périphérique, le système d'exploitation choisit quel programme va être exécuté. Ce choix se fait sur la base de priorités. Le système d'exploitation comporte un mécanisme de protection évitant ainsi que le programme en cours d'exécution ne lise ou n'écrive dans la mémoire attribuée à un autre programme. Les programmes sont exécutés dans un mode non-privilégié, dans lequel l'exécution de certaines instructions est interdite. Les systèmes multi-programmés nécessitent un ordinateur et des périphériques mettant en œuvre la technique du DMA (direct memory access). Selon celle-ci, le processeur ordonne à un périphérique d'effectuer une opération, le résultat de l'opération est ensuite placé en mémoire centrale par le périphérique tandis que le processeur exécute d'autres instructions. Dans les systèmes multi-programmés, tout comme pour les systèmes batch, Prof. Dr. YENDE RAPHAEL Grevisse, PhD. Cours d’Informatique Générale / UNIBAS"}
{"pack_id": "french_pack", "section_title": "V.2. Caractéristiques d’un bon logiciel", "page": 57, "chunk_id": "french_pack_57_0", "content": "55 l'utilisateur n'a que peu de contact avec les programmes et de maigres possibilités d'intervention. 3. Les systèmes d’exploitation en temps partagé Les systèmes d'exploitation en temps partagé sont apparus dans les années 1970. Ils sont utilisés dans des dispositifs interactifs où plusieurs utilisateurs sont simultanément en dialogue avec l'ordinateur. Un système d'exploitation en temps partagé est destiné à répondre rapidement aux demandes de l'utilisateur, et donner à chaque utilisateur l'impression qu'il est le seul à utiliser l'ordinateur. Un système en temps partagé met en œuvre des techniques sophistiquées de multiprogrammation en vue de permettre l'utilisation interactive de l'ordinateur par plusieurs utilisateurs et plusieurs programmes simultanément. L'arrivée, en 1970, de cette nouvelle génération de systèmes d'exploitation résulte d'une forte demande des consommateurs, et de la baisse du prix du matériel informatique ayant rendu possible sa réalisation. Dans les systèmes d'exploitation en temps partagé la notion de batch n'a que peu d'importance. Ces systèmes mettent en œuvre de nouveaux mécanismes d'utilisation du processeur et de la mémoire, qui leur permet de répondre rapidement à des demandes provenant simultanément d'un grand nombre d'utilisateurs. Dans ces systèmes, tout comme dans la génération précédente, l'utilisation du processeur est planifiée. Cependant, contrairement aux systèmes de la génération précédente, dans les systèmes en temps partagé chaque programme est exécuté durant une tranche de temps déterminé, puis le système d'exploitation bascule sur l'exécution d'un autre programme, ce qui évite qu'un programme monopolise l'utilisation du processeur au service d'un utilisateur, entraînant des retards pour les autres utilisateurs. Les systèmes d'exploitation en temps partagé mettent en œuvre la technique du swap : lorsque le programme en cours d'exécution a besoin de plus de mémoire que celle disponible, un autre programme inactif est retiré pour gagner de la place, le programme inactif est alors enregistré temporairement sur le disque dur. L'enregistrement sur disque provoque cependant une perte de temps non négligeable. 4. Les systèmes d’exploitation en temps réel Les systèmes d'exploitation temps-réel sont apparus au milieu des années 1970, notamment chez Hewlett-Packard (HP). Ils sont destinés aux dispositifs devant non seulement donner des résultats corrects, mais les donner dans un"}
{"pack_id": "french_pack", "section_title": "V.2. Caractéristiques d’un bon logiciel", "page": 57, "chunk_id": "french_pack_57_1", "content": "programme inactif est alors enregistré temporairement sur le disque dur. L'enregistrement sur disque provoque cependant une perte de temps non négligeable. 4. Les systèmes d’exploitation en temps réel Les systèmes d'exploitation temps-réel sont apparus au milieu des années 1970, notamment chez Hewlett-Packard (HP). Ils sont destinés aux dispositifs devant non seulement donner des résultats corrects, mais les donner dans un délai déterminé. Ces systèmes d'exploitation sont souvent utilisés par des ordinateurs reliés à un appareil externe (pilotes automatiques, robots industriels, applications vidéo et audio) pour lequel un retard de réponse de l'ordinateur entraînerait un échec de l'appareil. Prof. Dr. YENDE RAPHAEL Grevisse, PhD. Cours d’Informatique Générale / UNIBAS"}
{"pack_id": "french_pack", "section_title": "V.2. Caractéristiques d’un bon logiciel", "page": 58, "chunk_id": "french_pack_58_0", "content": "56 Dans ces systèmes d'exploitation, l'accent est mis sur la durée nécessaire pour effectuer chaque opération, pour répondre aux demandes rapidement en vue de satisfaire aux contraintes de temps du système dans lequel il est utilisé. Certains services offerts par ces systèmes d'exploitation sont réalisés comme des logiciels applicatifs, et sont exécutés en concurrence avec ceux-ci. Un système d'exploitation temps réel autorise un contact direct entre les logiciels applicatifs et les périphériques. Dans certains systèmes temps réel les ressources sont réservées, évitant ainsi les ralentissements que provoqueraient les réservations à la volée, et garantissant que les ressources sont continuellement disponibles. Les systèmes d'exploitation temps-réel évitent d'utiliser la technique du swap en raison des risques de dépassement des délais. On peut citer les systèmes d’exploitation tels que : Symbian OS, PalmOS ? RTX, Windows, Embedded Linux, etc. 5. Les systèmes d’exploitation distribuées La baisse des prix du matériel informatique a permis, dans les années 1990, la création de systèmes informatiques composés de plusieurs ordinateurs, et donc plusieurs processeurs, plusieurs mémoires, et de nombreux périphériques. Un système distribué permet le partage des ressources entre les ordinateurs. Un utilisateur d'un ordinateur bon marché peut se servir de ressources coûteuses existant sur un autre ordinateur. Un système distribué dirige l'utilisation des ressources de plusieurs ordinateurs à la fois. Il utilise les capacités d'un réseau informatique, contrôle un groupe de machines, et les fait apparaître comme une machine unique, virtuelle, de très grande capacité. Prof. Dr. YENDE RAPHAEL Grevisse, PhD. Cours d’Informatique Générale / UNIBAS"}
{"pack_id": "french_pack", "section_title": "V.3. CLASSIFICATION DE LOGICIELS", "page": 59, "chunk_id": "french_pack_59_0", "content": "57 CHAPITRE V. NOTIONS SUR LES LOGICIELS INFORMATIQUES V.1. Définition et contexte d’étude Le terme anglais « software » a été utilisé dès 1953 pour distinguer la partie modifiable de l'ordinateur, par opposition au « hardware » qui est la partie matérielle permanente. Il est apparu dans la littérature pendant les années 1960. En français, le mot « logiciel » est formé en 1960 en France à partir des mots « logique » et « matériel » comme traduction par la Délégation à l’informatique chargée du Plan Calcul. Ce terme a été adopté par l'Académie française en 1972. En informatique, un « logiciel » est un ensemble de séquences d’instructions interprétables par une machine nécessaire à ces opérations. Le logiciel détermine donc les tâches qui peuvent être effectuées par la machine, ordonne son fonctionnement et lui procure ainsi son utilité fonctionnelle. Les séquences d’instructions appelées « programmes » ainsi que les données du logiciel sont ordinairement structurées en « fichiers ». La mise en œuvre des instructions du logiciel est appelée « exécutable ou exécution » et la machine chargée de cette mise en œuvre est appelée ordinateur ou calculateur. Les logiciels sont créés et livrés à la demande d'un client ou sur l'initiative du producteur, et mis sur le marché, parfois gratuitement. En 1980, 60 % de la production et 52 % de la consommation mondiale de logiciels est aux Etats-Unis. Les logiciels sont aussi distribués illégalement et la valeur marchande des produits ainsi distribués est parfois supérieure au chiffre d'affaires des producteurs. Les logiciels libres sont créés et distribués comme des commodités produites par coopération entre les utilisateurs et les auteurs. Créer un logiciel est un travail intellectuel qui prend du temps. La création de logiciels est souvent le fait d'une équipe, qui suit une démarche logique et planifiée en vue d'obtenir un produit de bonne qualité dans les meilleurs délais. V.2. Caractéristiques d’un bon logiciel La caractéristique d’un logiciel est un ensemble de traits dominants ou l’expression de la correspondance entre une cause (grandeur d‘entrée) et un effet (grandeur de sortie) dans la production ou le processus"}
{"pack_id": "french_pack", "section_title": "V.3. CLASSIFICATION DE LOGICIELS", "page": 59, "chunk_id": "french_pack_59_1", "content": "le fait d'une équipe, qui suit une démarche logique et planifiée en vue d'obtenir un produit de bonne qualité dans les meilleurs délais. V.2. Caractéristiques d’un bon logiciel La caractéristique d’un logiciel est un ensemble de traits dominants ou l’expression de la correspondance entre une cause (grandeur d‘entrée) et un effet (grandeur de sortie) dans la production ou le processus de développement des logiciels. Un produit logiciel doit s’évaluer en fonction de ce qu'il offre et de sa facilité d'utilisation. Un bon logiciel doit satisfaire les 3 catégories de critères suivants : Prof. Dr. YENDE RAPHAEL Grevisse, PhD. Cours d’Informatique Générale / UNIBAS"}
{"pack_id": "french_pack", "section_title": "V.3. CLASSIFICATION DE LOGICIELS", "page": 60, "chunk_id": "french_pack_60_0", "content": "58  Les critères Opérationnels : Cela nous indique dans quelle mesure le logiciel fonctionne bien dans toutes ses opérations. Ces opérations peuvent être mesurées entre autre par :  Fiabilité : (correction, justesse et conformité) : le logiciel est conforme à ses spéciations, les résultats sont ceux attendus.  Robustesse et Sureté : (Pas dysfonctionnements ou ne plante pas) : le logiciel fonctionne raisonnablement en toutes circonstances, rien de catastrophique ne peut survenir, même en dehors des conditions d'utilisation prévues.  Efficacité : ici, la question est : le logiciel fait-il bon usage de ses ressources, en terme d’espace mémoire, et temps d’exécution.  Convivialité et Utilisabilité : Est-il facile et agréable à utiliser.  Sécurité : La sûreté (assurance) et la garantie offerte par un logiciel, ou l’absence du danger lors de l’exploitation du logiciel.  Adéquation et validité : La conformité au maquettage du logiciel et au but qu’on se propose.  Intégrité : L’état d’un logiciel a conservé sans altération ses qualités et son degré originel. Autrement dit, C’est l’aptitude d’un logiciel à protéger son code et ses données contre des accès non autorisés.  Les critères Transitionnels : Cet aspect est important lorsque le logiciel est déplacé d'une plate-forme à une autre :  Documentabilité : A-t-il été précédé par un document de conception ou une architecture modélisée pour son accessibilité.  Lisibilité et Clarté : Le logiciel est-il écrit proprement, et en respectant les conventions de programmation.  Portabilité : Un même logiciel doit pouvoir fonctionner sur plusieurs machines distinctes, tout en restant indépendant de son environnement d'exécution.  Interopérabilité : Un logiciel doit pouvoir interagir en synergie avec d'autres logiciels ; tout en remplissant de manière complète sa fonction.  Traçabilité : La possibilité de suivre un produit aux différents stades de sa production, de sa transformation et de sa commercialisation.  Testabilité et vérifiabilité : c’est la possibilité de soumettre un logiciel à une épreuve de confirmation de la tâche à exécuter.  Réutilisabilité - des parties peuvent être réutilisées pour développer d’autres logiciels similaires. Prof. Dr. YENDE RAPHAEL Grevisse, PhD. Cours"}
{"pack_id": "french_pack", "section_title": "V.3. CLASSIFICATION DE LOGICIELS", "page": 60, "chunk_id": "french_pack_60_1", "content": "possibilité de suivre un produit aux différents stades de sa production, de sa transformation et de sa commercialisation.  Testabilité et vérifiabilité : c’est la possibilité de soumettre un logiciel à une épreuve de confirmation de la tâche à exécuter.  Réutilisabilité - des parties peuvent être réutilisées pour développer d’autres logiciels similaires. Prof. Dr. YENDE RAPHAEL Grevisse, PhD. Cours d’Informatique Générale / UNIBAS"}
{"pack_id": "french_pack", "section_title": "V.3. CLASSIFICATION DE LOGICIELS", "page": 61, "chunk_id": "french_pack_61_0", "content": "59  Les critères de la Maintenance : Cet aspect explique comment un logiciel a la capacité de se maintenir dans une infrastructure et environnement en constante évolution : maintenabilité, modularité, Flexibilité et Évolutivité. V.3. CLASSIFICATION DE LOGICIELS Les logiciels sont couramment classifiés en fonction de plusieurs critères :  La manière dont ils interagissent avec le matériel - (directement pour les logiciels systèmes, ou indirectement pour les logiciels applicatifs ou encore les middlewares) ;  L'utilisation cible - (les entreprises ou les particuliers) ;  Leur niveau de standardisation – (le logiciel standard et le logiciel spécifique) ;  Selon les droits accordés par le contrat de licence (partagiciels, propriétaires, libres ou open sources, gratuiciel) ; Ainsi, nous distinguerons plusieurs catégories des logiciels : 1. Les logiciels systèmes C’est un ensemble de programmes informatiques et de bibliothèques fournit un environnement permettant de créer et d'exécuter des logiciels applicatifs avec comme les fonctionnalités de base d'un ordinateur telles que la manipulation des fichiers et des périphériques qui sont apportées par le logiciel système. Exemple des logiciels systèmes : Les systèmes d’exploitation ; Les langages de programmation ; Les utilitaires, etc. Le logiciel système est lancé avant le logiciel applicatif et joue le rôle d'intermédiaire entre le logiciel applicatif et le matériel de l'ordinateur. Les logiciels systèmes ont été créés dans le but de mieux adapter les ordinateurs aux besoins des programmeurs de logiciels applicatifs : Ils leur permettent de se concentrer sur les problèmes propres à l'application et faire abstraction des particularités de la machine. Contrairement au logiciel applicatif, le logiciel système est fortement dépendant de la machine. Les logiciels système offrent des services aux logiciels applicatifs et ne sont pas exploités directement par l'usager. 2. Les logiciels applicatifs (application, appli, ou app) C’est un programme informatique destiné à aider les usagers à effectuer une certaine tâche, directement utilisé pour réaliser une tâche, ou un ensemble de tâches élémentaires d'un même domaine ou formant un tout. Typiquement, un éditeur de texte, un navigateur web ; un lecteur multimédia ; un jeu vidéo sont des applications. Les applications s'exécutent en utilisant"}
{"pack_id": "french_pack", "section_title": "V.3. CLASSIFICATION DE LOGICIELS", "page": 61, "chunk_id": "french_pack_61_1", "content": "appli, ou app) C’est un programme informatique destiné à aider les usagers à effectuer une certaine tâche, directement utilisé pour réaliser une tâche, ou un ensemble de tâches élémentaires d'un même domaine ou formant un tout. Typiquement, un éditeur de texte, un navigateur web ; un lecteur multimédia ; un jeu vidéo sont des applications. Les applications s'exécutent en utilisant les services du système d’exploitation pour utiliser les ressources matérielles. Exemples : Les bases des données ; Le traitement du texte ; Les tableurs ; La bureautique ; Le « world wide web » ; etc. Prof. Dr. YENDE RAPHAEL Grevisse, PhD. Cours d’Informatique Générale / UNIBAS"}
{"pack_id": "french_pack", "section_title": "V.3. CLASSIFICATION DE LOGICIELS", "page": 62, "chunk_id": "french_pack_62_0", "content": "60 3. Les logiciels middleware (logiciel médiateur ou intergiciel) Le terme middleware vient de l’anglais middle (du milieu) et software (logiciel). En architecture informatique, un middleware est un logiciel tiers qui crée un réseau d'échange d'informations entre différentes applications informatiques. Le réseau est mis en œuvre par l'utilisation d'une même technique d'échange d'informations dans toutes les applications impliquées à l'aide de composants logiciels. Les solutions de middleware regroupent divers logiciels, notamment : Les API (Interface de Programmation d’application) ; Les serveurs d’applications ; Les logiciels d’intégration d’applications ; Les logiciels d’intégration des données ; Les logiciels de traitement transactionnel ; Les logiciels d’appel de procédure à distance (RPC – Remote Procedure Call) ; Les logiciels orientés message (MOM - Message Oriented Middleware) ; Les logiciels ORB (Object Request Broker). 4. Les logiciels génériques (particuliers ou standard) Ce sont des logiciels commercialisés comme les produits courants sur le marché informatique. Dans cette catégorie, on en distingue autant :  Logiciels amateurs : Il s’agit de logiciels développés par des « amateurs » (par exemple par des gens passionnés ou des étudiants qui apprennent à programmer). Bref, ce sont des logiciels sans impact économique significatif sur l’ensemble.  Logiciels « jetables » ou « consommables » : Il s’agit de logiciels comme par exemple les logiciels des traitements de texte ou les tableurs pour les entreprises. Ces logiciels ne coûtent pas très cher, et peuvent être remplacés facilement au sein d’une entreprise sans engendrer des risques majeurs. Ils sont souvent largement diffusés.  Les progiciels : (contraction du mot « produit » ou « professionnel » et « logiciel ») est un terme commercial qui désigne un logiciel professionnel standard et applicatif généralisé aux multiples fonctions, composé d'un ensemble de programmes paramétrables et destiné à être utilisé par une large clientèle. Les progiciels mis en œuvre dans les entreprises couvrent principalement les grands domaines suivants : les progiciels de gestion intégrée (ERP) ; les progiciels de gestion de la relation client (CRM) ; les progiciels de gestion de la chaine logistique (SCM) ; les progiciels de gestion des ressources humaines, etc. 5."}
{"pack_id": "french_pack", "section_title": "V.3. CLASSIFICATION DE LOGICIELS", "page": 62, "chunk_id": "french_pack_62_1", "content": "et destiné à être utilisé par une large clientèle. Les progiciels mis en œuvre dans les entreprises couvrent principalement les grands domaines suivants : les progiciels de gestion intégrée (ERP) ; les progiciels de gestion de la relation client (CRM) ; les progiciels de gestion de la chaine logistique (SCM) ; les progiciels de gestion des ressources humaines, etc. 5. Les logiciels spécifiques (pour entreprises) Ce sont des logiciels développés sur commande à l'attention d'un client donné, par opposition à un logiciel standard, qui est un développé sur initiative d'un éditeur, et vendu à de nombreux clients … La construction d'un logiciel spécifique est une prestation de services, qui consiste à fournir l'expertise technique et la main d'œuvre nécessaire. Ainsi, les fonctionnalités, le planning de livraison, et les conditions de paiement font l'objet Prof. Dr. YENDE RAPHAEL Grevisse, PhD. Cours d’Informatique Générale / UNIBAS"}
{"pack_id": "french_pack", "section_title": "V.3. CLASSIFICATION DE LOGICIELS", "page": 63, "chunk_id": "french_pack_63_0", "content": "61 d'un contrat entre le prestataire et le client. Le consommateur est fortement impliqué dans le processus de construction et signe la réussite du travail. Dans cette catégorie, on en distingue autant :  Logiciels essentiels au fonctionnement d'une entreprise - Ce type de logiciel est le fruit d'un investissement non négligeable d’une entreprise quelconque et doit avoir un comportement fiable, sûr et sécurisé. Comme par exemple des logiciels de sécurité, d’authentification biométrique, etc.  Logiciels critiques - Il s’agit de logiciels dont l’exécution est vitale, et dont une panne peut avoir des conséquences dramatiques, comme des morts ou des blessés graves, des dégâts matériels importants, ou des conséquences graves pour l’environnement. Dans le monde de l'informatique, les logiciels qualifiés de « critiques » se retrouvent par exemple dans : les systèmes de transport (pilotage des avions, des trains, des logiciels embarqués automobiles, etc.) ; la production d’énergie (contrôle des centrales nucléaires) ; la santé (chaînes de production de médicaments, appareil médicaux (à rayonnement ou contrôle de dosages) ; le système financier (paiement électronique) ; les applications militaires, etc. 6. Les logiciels propriétaires (logiciel privatif voire logiciel privateur) Ces logiciels ne permettent pas légalement ou techniquement, ou par quelque autre moyen que ce soit, d'exercer simultanément les quatre libertés logicielles (Exécution du logiciel pour tout type d'utilisation ; Etude et accès à son code source ; Distribution de copies ; ainsi que Modification et donc l'amélioration du code source). C’est par exemple : le système Windows. Dans un logiciel propriétaire, les limitations légales, sont permises par le droit d’auteur, qui s’applique aux logiciels, et sont choisies par les ayants-droit souvent encadrées par un contrat de licence de l’utilisateur final (CLUF), nommé alors licence propriétaire (qui stipule les droits que l'acquéreur ou client obtient sur le logiciel ; et explicite souvent les droits que le propriétaire accorde, où les restrictions qu'il impose, suivant son point de vue). Bien que l'expression « acheter un logiciel » soit courante pour désigner ce type de transaction, elles concernent un droit d'utilisation limité au cadre établi par la licence ; le transfert de propriété n'existant"}
{"pack_id": "french_pack", "section_title": "V.3. CLASSIFICATION DE LOGICIELS", "page": 63, "chunk_id": "french_pack_63_1", "content": "ou client obtient sur le logiciel ; et explicite souvent les droits que le propriétaire accorde, où les restrictions qu'il impose, suivant son point de vue). Bien que l'expression « acheter un logiciel » soit courante pour désigner ce type de transaction, elles concernent un droit d'utilisation limité au cadre établi par la licence ; le transfert de propriété n'existant qu'en cas de vente du droit d’auteur ou copyright associé. Un logiciel propriétaire n'est pas nécessairement payant ; Elle a souvent, mais pas toujours, pour objectif de permettre le contrôle de la diffusion du logiciel qui se traduit par la vente de droit d’utilisation du logiciel et non pas la vente du produit en soi … Un logiciel étant un objet purement numérique, sa copie est souvent aussi simple que la copie de tout autre fichier informatique. Les diffuseurs de logiciels propriétaires ont par conséquent parfois recours à des systèmes de « gestion des droits numériques », qui limite les droits des utilisateurs souvent à l’exécution du logiciel pour uniquement des usages donnés. Ainsi, les logiciels propriétaires sont caractérisés sous deux formes : 7. Les logiciels libres (open source) Ce sont logiciels dont l'utilisation, l'étude, la modification et la duplication par autrui en vue de sa diffusion sont permises, techniquement et légalement afin Prof. Dr. YENDE RAPHAEL Grevisse, PhD. Cours d’Informatique Générale / UNIBAS"}
{"pack_id": "french_pack", "section_title": "VI.2. Historique de l’Internet", "page": 64, "chunk_id": "french_pack_64_0", "content": "62 de garantir certaines libertés induites, dont le contrôle du programme par l'utilisateur et la possibilité de partage entre individus… Ces droits peuvent être simplement disponibles ou bien établis par une licence, dite « libre », basée sur le droit d’auteur. Les « licences copyleft » garantissent le maintien de ces droits aux utilisateurs même pour les travaux dérivés. Parmi les logiciels libres les plus connus du grand public figurent : les systèmes d’exploitation (GNU/Linux, Androïd, la famille BSD, FreeBSD, OpenBSD, NetBSD, etc.) ; la suite bureautique LibreOffice ; le logiciel de retouche d’image GIMP ; le logiciel de modélisation 3D Blender ; l'éditeur de son Audacity ; les navigateurs web Mozilla Firefox et Chromium ; la messagerie électronique Mozilla Thunderbird ; les environnements de bureau GNOME et KDE ; les gestionnaires de basse de données Ingres, MySQL et PostgreSQL ; les langages de script PHP et Python ; le serveur HTTP Apache ; les systèmes de chiffrement OpenSSL, Tor et GnuPG ; etc. Aujourd'hui, un logiciel est considéré comme libre, au sens de la Free Software Foundation, s'il confère à son utilisateur quatre libertés (numérotées de 0 à 3) : − La liberté d'exécuter le programme, pour tous les usages ; − La liberté d'étudier le fonctionnement du programme et de l'adapter à ses besoins ; − La liberté de redistribuer des copies du programme (ce qui implique la possibilité aussi bien de donner que de vendre des copies) ; − La liberté d'améliorer le programme et de distribuer ces améliorations au public, pour en faire profiter toute la communauté. 8. Les logiciels gratuits (gratuiciel ou freeware) Ce sont des logiciels propriétaires distribués gratuitement sans toutefois conférer à l'utilisateur certaines libertés d'usage associées au logiciel libre. Les termes « gratuiciel » ou « logiciel gratuit », dont l'usage est préconisé par la CGTN5 sont des traductions du mot anglais « freeware », qui est une contraction de « free » (gratuit) et « software » (logiciel), contraction qui prête à confusion en anglais avec free software qui désigne en anglais un logiciel libre. Parmi les logiciels gratuits les plus"}
{"pack_id": "french_pack", "section_title": "VI.2. Historique de l’Internet", "page": 64, "chunk_id": "french_pack_64_1", "content": "gratuiciel » ou « logiciel gratuit », dont l'usage est préconisé par la CGTN5 sont des traductions du mot anglais « freeware », qui est une contraction de « free » (gratuit) et « software » (logiciel), contraction qui prête à confusion en anglais avec free software qui désigne en anglais un logiciel libre. Parmi les logiciels gratuits les plus connus du grand public figurent : AVG Anti-virus ; Avast ; Ad-Aware SE, Spybot, Search et Destroy (logiciels anti- espions) ; DAEMON Tools (Emulateur de lecteur CD) ; Konvertor (Visualiseur et convertisseur pour tout type de fichier). Un logiciel « freeware » peut fonctionner gratuitement pour une durée de temps illimité. L'auteur d'un logiciel freeware pourrait limiter les droits 5 La Commission d'enrichissement de la langue française (appelée commission générale de terminologie et de néologie jusqu'en 2015) est une assemblée française de personnalités bénévoles au centre d'un dispositif interministériel dont la mission est de favoriser l'enrichissement de la langue française. Prof. Dr. YENDE RAPHAEL Grevisse, PhD. Cours d’Informatique Générale / UNIBAS"}
{"pack_id": "french_pack", "section_title": "VI.2. Historique de l’Internet", "page": 65, "chunk_id": "french_pack_65_0", "content": "63 de copie et/ou de distribution de son logiciel. En tant que logiciel propriétaire le principe de freeware peut être une stratégie de marketing fondée sur des revenus indirects (support, produits liés, ...) plutôt que sur la vente du logiciel. 9. Les logiciels partagiciel (shareware ou contribuciel) : Ce sont des logiciels qui peut être utilisé gratuitement généralement durant une certaine période. Après cette période d'essai, l'utilisateur doit rétribuer l'auteur s'il veut continuer à utiliser le logiciel. Lorsque les fonctionnalités du shareware sont limitées, on parle aussi de logiciel de démonstration. Shareware est un mot valise anglais composé de to « share » (partager) et de « ware », troncation de « software ». Un shareware peut facilement être confondu avec un freeware, un logiciel abandonné (abandonware) ou un logiciel libre. Un shareware n'est pas forcément un logiciel libre, car il peut être livré sans son code source. De plus, lorsque celui-ci est fourni, le droit de le redistribuer n'est pas automatiquement accordé. Enfin, la distribution du logiciel lui-même n'est pas forcément libre. Un shareware peut être utilisé pendant une durée limitée ou un nombre d'utilisations qui sont indiquées par l'auteur. Cela permet de tester les fonctionnalités et voir si elles correspondent à ses besoins. Au bout de cette période d'essai, il est possible soit de payer une contribution (souvent modique) et continuer à utiliser le logiciel, soit de le désinstaller. Il est également permis de distribuer le logiciel à une autre personne, toujours pour essai … Hormis l'utilisation légale du produit, le paiement de la licence peut aussi débloquer un certain nombre de fonctionnalités jusqu'alors inaccessibles. Parmi les logiciels gratuits les plus connus du grand public figurent : Doom ; Winzip ; UltraISO ; Mirc ; etc. Certains sharewares se contentent de rappeler à intervalles plus ou moins fréquents, à l'aide par exemple d'alertes ou de dialogues, que la période d'essai est échue. Ils sont parfois appelés « harceliciels », « nagware » ou « annoyware » … Certains auteurs ne demandent que l'envoi d'une carte postale comme paiement de la licence, dans ce cas on parle de «"}
{"pack_id": "french_pack", "section_title": "VI.2. Historique de l’Internet", "page": 65, "chunk_id": "french_pack_65_1", "content": "se contentent de rappeler à intervalles plus ou moins fréquents, à l'aide par exemple d'alertes ou de dialogues, que la période d'essai est échue. Ils sont parfois appelés « harceliciels », « nagware » ou « annoyware » … Certains auteurs ne demandent que l'envoi d'une carte postale comme paiement de la licence, dans ce cas on parle de « carticiel » (postcardware). D'autres suggèrent simplement que l'utilisateur verse une contribution à l'organisation charitable ou humanitaire de son choix (careware). Prof. Dr. YENDE RAPHAEL Grevisse, PhD. Cours d’Informatique Générale / UNIBAS"}
{"pack_id": "french_pack", "section_title": "VI.3. Les protocoles utilisés sur Internet", "page": 66, "chunk_id": "french_pack_66_0", "content": "64 CHAPITRE VI. NOTIONS SUR L’INTERNET ET WWW VI.1. Definition et Context etude Le terme « Internet » est d'origine américaine et est dérivé du concept « Internetting » (« interconnecter des réseaux »), dont la première utilisation documentée remonte à octobre 1972 par Robert E. Kahn, dans le cadre de la première conférence sur la communication des ordinateurs ( ICCC : International Conference on Computer Communications) à Washington . Cependant les origines exactes du terme restent à déterminer. Toutefois, c'est le 1er janvier 1983 que le nom « Internet », déjà en usage pour désigner l'ensemble du réseau ARPANAET et de plusieurs réseaux informatiques, devient officiel. Ainsi, l’Internet est un réseau de communication international qui permet tant aux entreprises qu’aux particuliers de communiquer entre eux grâce à un ensemble de réseaux et d’ordinateurs. L’architecture du réseau est dite » Client- serveur » c’est-à-dire que les ordinateurs envoient leurs données (les serveurs) vers d’autres ordinateurs équipés de logiciel client ou navigateur (browser). VI.2. Historique de l’Internet Depuis des années 50, durant la guerre froide, le gouvernement américain se demandait comment protéger l’appareil de l’Etat contre une attaque nucléaire soviétique. C’est en 1964 qu’un chercheur proposa de créer un réseau de communication sans centre physique, le principe était de créer un ensemble de nœuds interconnectés. − En 1969, est créé le réseau Arpanet, ancêtre de l’Internet actuel, était un réseau financé par le département américain de la défense, et une de ses agences : « Advenced Reserch Projets Agency ». Il s’agit d’un réseau reliant les centres de recherche de l’armée et les universités américaines l’ARPA a développé le concept de l’Internet selon le principe précédent (nœuds interconnectés), puis adapta en 1972 le protocole nommé TCP/IP (Transport control protocol / Internet prptocol) : nouvelle technologie de commutation de données par paquets et nouveau protocole d’échange. Tel protocole est né en réponse au défi de trouver un langage commun à tous les réseaux existant à l’échelle mondiale, et qui fut l’objet de la conférence internationale qui eut lieu en 1972, à Washington. − En 1974, c’est la naissance de l’Internet dans sa"}
{"pack_id": "french_pack", "section_title": "VI.3. Les protocoles utilisés sur Internet", "page": 66, "chunk_id": "french_pack_66_1", "content": "prptocol) : nouvelle technologie de commutation de données par paquets et nouveau protocole d’échange. Tel protocole est né en réponse au défi de trouver un langage commun à tous les réseaux existant à l’échelle mondiale, et qui fut l’objet de la conférence internationale qui eut lieu en 1972, à Washington. − En 1974, c’est la naissance de l’Internet dans sa forme actuelle, aussi appelé « l’Internet privé ». Le réseau se développe alors rapidement, surtout au Etats-Unis, auprès des centres scientifiques et universitaires, et il a été Prof. Dr. YENDE RAPHAEL Grevisse, PhD. Cours d’Informatique Générale / UNIBAS"}
{"pack_id": "french_pack", "section_title": "VI.4. Finalités de l’Internet", "page": 67, "chunk_id": "french_pack_67_0", "content": "65 financé par la National Scientific fondations, une agence du gouvernement américain. − En 1980, il est décidé que la protocole TCP/IP ne serait plus un secret militaire et tomberait donc dans le domaine public. A partir de ce moment n’importe qui pouvait utiliser le réseau gratuitement. Pour les entreprises (à l’exception des constructeurs informatiques et de quelques points avancés, il a fallu attendre 1994 pour que les opérateurs privés proposent des services de connexion à l’Internet. D’abord limité à une offre professionnelle relativement onéreuse, son accès s’est considérablement élargi avec l’apparition de nombreuses offres grand public et d’une nouvelle activité : les opérateurs d’accès au réseau. La transformation d’Internet à envahit les quatre coins du monde, le nombre d’internautes ne cesse d’augmenter de manière spectaculaire, et de plus en plus d’entreprises y construisent leurs sites. Les petites structures comme les multinationales y en ont compris le potentiel en terme de communication, d’information et de réduction de coûts. Effectivement, ses diverses applications offrent des opportunités qui étaient inimaginables auparavant. − En 1990, on voit l’apparition du premier navigateur web (browser), mêlant texte et image. Cette même année, la National Science Foundation (NSF) mandate une compagnie pour enregistrer « les noms de domaine ». À la fin des années 1990, des sociétés pionnières comme Yahoo, Amazon, eBay, Netscape et Aol, sont devenues célèbres. − En 1994, avec l'introduction de Netscape, doté d'une interface graphique spectaculaire, qui intègre les ressources multimédias, l’Internet connaît une explosion phénoménale. L'expression « Internet » sert à désigner un ensemble de réseaux connectés entre eux. La collectivité y a maintenant accès, par l’intermédiaire des fournisseurs de services (Wanadoo, free…).Le début des années 1990 marque la naissance de l'aspect le plus connu d'Internet aujourd'hui : le WEB ou INTERNET PUBLIC, un ensemble de pages en HTML mélangeant du texte, des liens, des images, adressables via une URL et accessibles via le protocole HTTP. Ces standards, développés au CERN par TIM BERNERS-LEE et Robert CAILLIAU devinrent rapidement populaires grâce au développement au NCSA par MARC ANDREESSEN et Eric Bina du premier « navigateur multimédia Mosaïc6». 6 C'est en mars"}
{"pack_id": "french_pack", "section_title": "VI.4. Finalités de l’Internet", "page": 67, "chunk_id": "french_pack_67_1", "content": "INTERNET PUBLIC, un ensemble de pages en HTML mélangeant du texte, des liens, des images, adressables via une URL et accessibles via le protocole HTTP. Ces standards, développés au CERN par TIM BERNERS-LEE et Robert CAILLIAU devinrent rapidement populaires grâce au développement au NCSA par MARC ANDREESSEN et Eric Bina du premier « navigateur multimédia Mosaïc6». 6 C'est en mars 1993 qu'est inventé Mosaic, le premier des navigateurs grand public, doté d'une interface graphique. Son auteur est Marc Andreessen, étudiant à l'Université de l'Illinois, et assistant au NCSA (National Center for Supercomputing Applications). Prof. Dr. YENDE RAPHAEL Grevisse, PhD. Cours d’Informatique Générale / UNIBAS"}
{"pack_id": "french_pack", "section_title": "VI.5. Avantages de l’Internet", "page": 68, "chunk_id": "french_pack_68_0", "content": "66 VI.3. Les protocoles utilisés sur Internet Les protocoles logiciels utilisés sur internet sont les conventions ou langage de communication structurant les échanges d'informations nécessaires au transfert des contenus applicatifs pour l'usager final. Ils permettent notamment d'identifier les interfaces (donc les machines), de s'assurer de la réception des données envoyées, et de l'interopérabilité. Un protocole est un ensemble de règles qui définissent un langage afin de faire communiquer plusieurs ordinateurs . Ils sont définis par des normes ouvertes en informatique. Chaque protocole a des fonctions propres et, ensemble, ils fournissent un éventail de moyens permettant de répondre à la multiplicité et à la diversité des besoins sur internet. Les principaux sont les suivants, classés selon leur couche (IP, TCP et UDP) ; couches applicatives :  IP (Internet Protocol) aussi appelé IPv4 ou IPv6 : protocole réseau qui définit le mode d'échange élémentaire entre les ordinateurs participant au réseau en leur donnant une adresse unique sur celui-ci. Cependant, en raison de l'épuisement des adresses IPv4, une nouvelle norme voit le jour ; nommée IPv6, elle permet d'accueillir un plus grand nombre d'utilisateurs.  TCP (Transfer Control Protocol) : responsable de l'établissement de la connexion et du contrôle de la transmission. C'est un protocole de remise fiable. Il s'assure que le destinataire a bien reçu les données, au contraire d'UDP.  HTTP (HyperText Transfer Protocol) : protocole mis en œuvre pour le chargement des pages web.  HTTPS : pendant du HTTP pour la navigation en mode sécurisé.  FTP (File Transfer Protocol) : protocole utilisé pour le transfert de fichiers sur Internet.  SFTP (SSH File Transfer Protocol) : protocole bâtît sur SSH pour le transfert de fichiers sécurisé.  SMTP (Simple Mail Transfer Protocol) : mode d'échange du courrier électronique en envoi.  POP3 (Post Office Protocol version 3) : mode d'échange du courrier électronique en réception.  IMAP (Internet Message Access Protocol) : un autre mode d'échange de courrier électronique.  IRC (Internet Relay Chat) : protocole de discussion instantanée.  NNTP (Network News Transfer Protocol) : protocole de transfert de message utilisé par les forums de discussion"}
{"pack_id": "french_pack", "section_title": "VI.5. Avantages de l’Internet", "page": 68, "chunk_id": "french_pack_68_1", "content": "électronique en envoi.  POP3 (Post Office Protocol version 3) : mode d'échange du courrier électronique en réception.  IMAP (Internet Message Access Protocol) : un autre mode d'échange de courrier électronique.  IRC (Internet Relay Chat) : protocole de discussion instantanée.  NNTP (Network News Transfer Protocol) : protocole de transfert de message utilisé par les forums de discussion Usenet.  UDP (User Datagramme Protocol) : permet de communiquer, de façon non fiable mais légère, par petits datagrammes.  DNS (Domain Name System) : système de résolution de noms Internet. Prof. Dr. YENDE RAPHAEL Grevisse, PhD. Cours d’Informatique Générale / UNIBAS"}
{"pack_id": "french_pack", "section_title": "VI.6. Inconvénients de l’Internet", "page": 69, "chunk_id": "french_pack_69_0", "content": "67  ICMP (Internet Control Message Protocol) : protocole de contrôle du protocole IP. VI.4. Finalités de l’Internet Rappelons qu’un réseau Internet est une interconnexion des ordinateurs dans le monde permettant le travail collaboratif et/ou les échanges entre personnes géographiquement séparées. Ceci étant posé, l’Internet a été développé pour plusieurs raisons à savoir :  La connectivité : C’est une technique qui permet à plusieurs types d’équipements informatiques utilisant des logiciels différents de communiquer entre eux,  Le partage des ressources : C’est un procédé qui permet la segmentation d’un système informatique pouvant être employée par différents utilisateurs. Autrement dit, C’est rendre accessible à une communauté d'utilisateurs des programmes, des données et des équipements informatiques (i.e. un ensemble de ressources) indépendamment de leur localisation.  La modularité : (Ajout graduel des performances), elle consiste à utiliser un ensemble restreint d’appareils généraux pour tester leurs performances.  L’implantation simple : C’est une solution générale qui permet d’installer aisément et sans aucune difficulté les équipements informatiques selon leurs différentes configurations.  L’utilisation facile : C’est une disponibilité d’outils de communication libérant les utilisateurs de la connaissance de la structure du réseau ;  La fiabilité7 : C’est la capacité de détection et correction d’un dispositif à fonctionner sans défaillance (sauvegardes, duplication). Autrement dit, C’est une disposition du fonctionnement même en cas de problèmes matériels (c’est par exemple, les applications militaires, bancaires, le contrôle des centrales nucléaires ou aérien...).  Une mise à jour aisée : C’est un procédé qui permet aux réseaux informatiques d’évoluer et d’être modifiée selon les besoins des utilisateurs et des nouveaux équipements.  La réduction des coûts : l’accès à distance des matériels informatiques a considérablement réduit les coûts de ces derniers, en permettant ainsi aux différents utilisateurs de s’en procurer au prix standard (le PC, par exemple). 7 En informatique par exemple, la fiabilité s’exprime par une durée qui correspond au temps moyen de bon fonctionnement d’un équipement. Prof. Dr. YENDE RAPHAEL Grevisse, PhD. Cours d’Informatique Générale / UNIBAS"}
{"pack_id": "french_pack", "section_title": "VI.4.1. Services web", "page": 70, "chunk_id": "french_pack_70_0", "content": "68 VI.5. Avantages de l’Internet Les avantages offerts par l’Internet sont multiples et vont, en fait bien au-delà des privilèges quotidiens de l’informatique. Le problème de la communication entre les personnes et les services sont capital pour les entreprises depuis toujours, désormais l’adoption du travail sur l’Internet est capable de lui apporter une réponse définitive. Ainsi, parmi les principaux avantages de l’Internet, on peut citer :  Une meilleure communication (Facile et rapide) : Grâce à l’internet, La communication entre les personnes est dorénavant plus aisée et l’information circule plus librement pour tout le monde y compris les différentes collaborations entre les entreprises et pour ne citer que cela. Mêmes les personnes travaillant dans des distincts endroits, en voyage ou chez eux, peuvent aussitôt se connecter au réseau et communiquer plus facilement en utilisant les supports et matériels de communication (tels que, les emails, la messagerie instantanée, les lignes téléphoniques, la vidéoconférence ou le Skype…) pour pleinement en profiter.  Une Optimisation et gain du temps : l’Internet permet identiquement d’améliorer et de gagner du temps sur le partage des fichiers et des données informatiques. Dorénavant, les utilisateurs arrivent à trouver et partager les données dont ils ont besoin. Depuis des années, cette fonctionnalité du réseau internet est devenue la plus utilisée par les grandes organisations afin de maintenir leurs données d’une manière organisée facilitant les accès à distance pour les personnes souhaitées.  Une productivité accrue : Un réseau Internet permet de donner à toute activité humaine, une vitesse d’exécution assez importante de la tâche ; l’exactitude et la fiabilité des outils informatiques entrainent des économies du temps et d’argent à tous les niveaux de l’activité humaine, particulièrement l’allégement des tâches à effectuer. Tout de même, il implique une communication permettant aux équipes professionnelles de se consacrer foncièrement à leurs missions. Beaucoup d’obstacles qui entravaient jusqu’alors la productivité tombent d’eux-mêmes, et les énergies de l’entreprise peuvent alors se concentrer sur les véritables objectifs. Succinct, Les réseaux informatiques créent une chaine de collaboration entre les équipes.  L’accès et la connexion à distance : Avec un réseau Internet, le téléphone"}
{"pack_id": "french_pack", "section_title": "VI.4.1. Services web", "page": 70, "chunk_id": "french_pack_70_1", "content": "communication permettant aux équipes professionnelles de se consacrer foncièrement à leurs missions. Beaucoup d’obstacles qui entravaient jusqu’alors la productivité tombent d’eux-mêmes, et les énergies de l’entreprise peuvent alors se concentrer sur les véritables objectifs. Succinct, Les réseaux informatiques créent une chaine de collaboration entre les équipes.  L’accès et la connexion à distance : Avec un réseau Internet, le téléphone n’est plus le seul moyen de contact avec les autres de partout dans le monde. Il permet sitôt de faire des partages de fichiers et des ressources et y avoir accès même à distance. Il est tout aussi possible, pour qui le veut, de faire des mises à jour de tous ces fichiers conservés. Cela ouvre par exemple, un accès aux différentes sociétés et clients qui souhaitent avoir des renseignements concernant leurs activités. Désormais un professionnel peut se connecter et trouver les informations ou les contacts dont il a besoin. Prof. Dr. YENDE RAPHAEL Grevisse, PhD. Cours d’Informatique Générale / UNIBAS"}
{"pack_id": "french_pack", "section_title": "BIBLIOGRAPHIE", "page": 71, "chunk_id": "french_pack_71_0", "content": "69  Une prise sur l’avenir : Les économies mondiales sont de plus en plus dépendantes de l’informatique. Nous ne pouvons ignorer que le réseau Internet est devenu aujourd’hui le moteur de la croissance de l’activiste mondiale. L’Internet devient de plus en plus la figure parfaite qui intègre les nouvelles technologies au fur et à mesure de leur apparition, ils évoluent et s’adaptent aux réalités de toute activité humaine, y compris celle de l’entreprise.  Un investissement efficace : La mise en réseau d’un plus grand nombre de nos équipements (tels que ordinateurs, imprimantes, scanners, systèmes de stockage et de sauvegarde des données, télécopieurs et système téléphonique), nous ouvre l’accès à l’ère numérique en nous permettant de connecter à d’autres utilisateurs ainsi qu’à maintes convenances. Elle permet aussi de profiter des versions réseaux des logiciels, toujours moins coûteuses que leurs équivalents poste à poste. VI.6. Inconvénients de l’Internet Les conséquences fâcheuses et les nombreux risques que comportent l’Internet peuvent désavantageusement contribuer au mauvais fonctionnement de ces derniers et par conséquent altérer la qualité de son service ainsi son perfectionnement. Voici quelques-uns des inconvénients majeurs de l’Internet :  Problèmes de sécurité : L'un des inconvénients majeurs de l’Internet est les problèmes de sécurité impliqués. Si un ordinateur est connecté sur un réseau, il serait plus vulnérable à toutes sortes d’attaques. De même, un pirate informatique peut obtenir tous les renseignements qu’il désire ou alors un accès non autorisé à l'aide de différents outils. En cas de grandes organisations, divers logiciels de sécurité réseau sont utilisés pour empêcher le vol de données confidentielles et les classifiées.  La propagation rapide de virus informatiques : Si tout système informatique dans un réseau est affecté par un virus informatique, il y a une menace possible d'autres systèmes obtenant aussi affectés. Les virus se répandent sur un réseau facilement en raison de l'interconnexion des postes de travail. Un tel écart peut être dangereux si les ordinateurs ont importante base de données qui peut être corrompues par le virus.  Dépendance sur le serveur de fichiers principal : Dans le cas où le serveur de"}
{"pack_id": "french_pack", "section_title": "BIBLIOGRAPHIE", "page": 71, "chunk_id": "french_pack_71_1", "content": "menace possible d'autres systèmes obtenant aussi affectés. Les virus se répandent sur un réseau facilement en raison de l'interconnexion des postes de travail. Un tel écart peut être dangereux si les ordinateurs ont importante base de données qui peut être corrompues par le virus.  Dépendance sur le serveur de fichiers principal : Dans le cas où le serveur de fichiers principal d'un réseau informatique tombe en panne, le système devient inutile. Dans le cas de grands réseaux, le serveur de fichiers doit être un puissant ordinateur, ce qui rend souvent coûteux la conception et la configuration d’un système informatique. Prof. Dr. YENDE RAPHAEL Grevisse, PhD. Cours d’Informatique Générale / UNIBAS"}
{"pack_id": "french_pack", "section_title": "BIBLIOGRAPHIE", "page": 72, "chunk_id": "french_pack_72_0", "content": "70 VI.7. Le WWW Le World Wide Web (littéralement la « toile (d’araignée) mondiale », abrégé www ou Web ou encore Internet public ), la toile mondiale ou la toile, est un système hypertexte public fonctionnant sur Internet. Le Web permet de consulter, avec un navigateur, des pages accessibles sur des sites. L’image de la toile d’araignée vient des hyperliens qui lient les pages web entre elles. Le Web n’est qu’une des applications d’Internet, distincte d’autres applications comme le courrier électronique, la messagerie instantanée et le partage des fichiers. Inventé en 1990 par TIM BERNERS-LEE suivi de ROBERT CAILLIAU, c'est le Web qui a rendu les médias grand public attentifs à Internet. Depuis, le Web est fréquemment identifié par le mot Internet; en particulier, le mot « Toile » est souvent utilisé dans les textes non techniques sans qu'il soit clair si l'auteur désigne le Web ou Internet. VI.4.1. Services web Un service web est une technologie client-serveur fondée sur les protocoles du web et tache offerte, on peut alors citer :  Un annuaire web : est un site web répertoriant d’autres sites web sur la toile.  Un moteur de recherche : est un site permettant de rechercher des mots dans l’ensemble des sites web.  Un portail web : est un site web tentant de regrouper la plus large palette d’informations et de services possibles dans un site web. Certains portails sont thématiques.  Un agrégateur web : est un site web qui sélectionne, organise et, éventuellement, valide des pages concernant un sujet précis, et les met en forme de façon ergonomique ou attractive.  Un blog : est une partie de site web où sont régulièrement publiés des articles personnels.  Un Webmail : est site web fournissant les fonctionnalités d'un client de messagerie de courrier électronique.  Un wiki : est un site web éditable par les utilisateurs Prof. Dr. YENDE RAPHAEL Grevisse, PhD. Cours d’Informatique Générale / UNIBAS"}
{"pack_id": "french_pack", "section_title": "engrenages, 1400 commutateurs et 800 km de fil. Les engrenages", "page": 73, "chunk_id": "french_pack_73_0", "content": "71 BIBLIOGRAPHIE 1. D. GROTH, D. MCBEE, J. MCBEE, D. BARNETT, Cabling: The Complete Guide to Network Wiring, Sybex, 2001; 2. Fontenelle, « Éloge d'Admontons, in Éloges, cité par Luke Flichy, Une histoire de la communication moderne », Espace public et vie privée, La Découverte, 1997, p. 17-18. 3. Guy DE SAINT DENIS, « La télégraphie Chappe », ouvrage collectif sous la direction, Éditions de l'Est de Strasbourg, 1993, 441 pages ; 4. HALSALL, Fred; Data Communications, Computer Networks and Open Systems, 4th edition; Addison-Wesley, 1996, 907 pages, ISBN 0-201-42293; 5. Hawke's Bay Herald, “The Pulsion Telephone”, Nouvelle-Zélande, Vol. XXV, Iss 8583, 30 janvier 1890, p. 3; 6. J. L. HARRINGTON, Ethernet Networking Clearly Explained, Morgan Kaufmann; Publishers, 1999; 7. James F. KUROSE, et Keith W. ROSS; Computer Networking: A Top-Down Approach, 5th Edition, Addison-Wesley, 2008, ISBN 013-607967-9; 8. Michael Wolfe, « A Television Station High-Quality Audio Wiring System », AES Convention papers, no 83/2544, 1987; 9. Nicolas Ochoa, « Le principe de libre-circulation de l'information - Recherche sur les fondements juridiques d'Internet », HALSHS, 2016 ; 10. Richard Taillet, Loïc Villain et Pascal Febvre, « Spectre », 2013, p. 635 11. Richard Waller, édité par R.T. Gunther, “The Postthumous Works of Robert Hooke, M.D., S.R.S. 1705 Réimprimédans “Early Science In Oxford”, R.T. Gunther, Vol. 6, p. 185; 12. Robert Sève, « Science de la couleur : Aspects physiques et perceptifs, Marseille, Chalagam, 2009, p. 121-122. 13. Ronda Hauben, “The Internet: On its International Origins and Collaborative Vision”, 2004. 14. Saint-Jean A.O. Djungu, Réseaux par la pratique, Ed. CRIA, 2014 15. STALLINGS, et William; Data and Computer Communications; Prentice Hall, 1997, 798 pages, ISBN 0-12-415425-3; 16. ST-PIERRE, Armand et STÉPHANOS ; Réseaux locaux : Une introduction à la communication des données et à Internet ; Édition Vermette inc., 1996, 378 pages, ISBN 2-89416-097-6 ; 17. TANENBAUM et al, les Réseaux, 5e édition ; Pearson Éducation France, 2011, 970 pages ; Prof. Dr. YENDE RAPHAEL Grevisse, PhD. Cours d’Informatique Générale / UNIBAS View publication stats"}
